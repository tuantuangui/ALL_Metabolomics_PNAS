[["index.html", "ALL metabolism analysis Chapter 1 the ALL metabolism analysis", " ALL metabolism analysis Tuantuan Gui 2024-12-02 Chapter 1 the ALL metabolism analysis the ALL metabolism preprocessing steps, and the reproducibility of results "],["serum-2020-data-preprocess.html", "Chapter 2 serum: 2020 data preprocess 2.1 positive 2.2 negative", " Chapter 2 serum: 2020 data preprocess 2.1 positive 合并2020年serum的positive数据及对na值的填充 library(dplyr) path=&quot;/Users/guituantuan/Desktop/projects/junyu/raw_data/serum_2020/positive/&quot; file &lt;- list.files(path) mydata1 &lt;- read.table(paste0(path,file[1]),sep=&quot;\\t&quot;,header=F,check.names = F) %&gt;% dplyr::select(-c(&quot;V1&quot;,&quot;V3&quot;)) %&gt;% tidyr::separate(&quot;V2&quot;,sep=&quot;,&quot;,c(&quot;sample_name&quot;,NA)) %&gt;% tidyr::separate(&quot;sample_name&quot;,sep=&quot;POS&quot;,c(NA,&quot;s1&quot;)) %&gt;% tidyr::separate(&quot;s1&quot;,c(NA,&quot;B&quot;)) %&gt;% dplyr::mutate(sample_name=paste0(&quot;id_&quot;,B)) %&gt;% dplyr::select(-&quot;B&quot;) %&gt;% tibble::column_to_rownames(&quot;sample_name&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(Metabolites=id_NA) mydata2 &lt;- read.table(paste0(path,file[2]),sep=&quot;\\t&quot;,header=F,check.names = F) %&gt;% dplyr::select(-c(&quot;V1&quot;,&quot;V3&quot;)) %&gt;% tidyr::separate(&quot;V2&quot;,sep=&quot;,&quot;,c(&quot;sample_name&quot;,NA)) %&gt;% tidyr::separate(&quot;sample_name&quot;,sep=&quot;POS&quot;,c(NA,&quot;s1&quot;)) %&gt;% tidyr::separate(&quot;s1&quot;,c(NA,&quot;B&quot;)) %&gt;% dplyr::mutate(sample_name=paste0(&quot;id_&quot;,B)) %&gt;% dplyr::select(-&quot;B&quot;) %&gt;% tibble::column_to_rownames(&quot;sample_name&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(Metabolites=id_NA) result &lt;- rbind(mydata1,mydata2) for (i in 3:length(file)){ mydata &lt;- read.table(paste0(path,file[i]),sep=&quot;\\t&quot;,header=F,check.names = F) %&gt;% dplyr::select(-c(&quot;V1&quot;,&quot;V3&quot;)) %&gt;% tidyr::separate(&quot;V2&quot;,sep=&quot;,&quot;,c(&quot;sample_name&quot;,NA)) %&gt;% tidyr::separate(&quot;sample_name&quot;,sep=&quot;POS&quot;,c(NA,&quot;s1&quot;)) %&gt;% tidyr::separate(&quot;s1&quot;,c(NA,&quot;B&quot;)) %&gt;% dplyr::mutate(sample_name=paste0(&quot;id_&quot;,B)) %&gt;% dplyr::select(-&quot;B&quot;) %&gt;% tibble::column_to_rownames(&quot;sample_name&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(Metabolites=id_NA) result &lt;- rbind(result,mydata) } rownames(result) &lt;- NULL result1 &lt;- result %&gt;% dplyr::mutate(mean=apply(result[,2:ncol(result)],1,function(x){return(mean(as.numeric(x),na.rm=T))})) %&gt;% dplyr::arrange(desc(mean)) %&gt;% dplyr::distinct(Metabolites,.keep_all=T) %&gt;% dplyr::select(-&quot;mean&quot;) %&gt;% tibble::column_to_rownames(&quot;Metabolites&quot;) %&gt;% dplyr::mutate_if(is.character, as.numeric) result1[result1==0] &lt;- NA source(&quot;/Users/guituantuan/Desktop/projects/script/impute.R&quot;) result_impute &lt;- meta_impute(result1) %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) #添加内标 interior &lt;- data.table::fread(&quot;/Users/guituantuan/Desktop/projects/junyu/raw_data/serum_2020/2020PSposALLchecked_IS.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(-c(&quot;Sample Name&quot;,&quot;Sample Type&quot;)) %&gt;% tidyr::separate(&quot;Original Filename&quot;,sep=&quot;\\\\\\\\&quot;,c(NA,NA,NA,NA,&quot;temp&quot;)) %&gt;% tidyr::separate(&quot;temp&quot;,sep=&quot;[.]&quot;,&quot;name&quot;) %&gt;% dplyr::mutate(name=paste0(&quot;id_&quot;,name)) %&gt;% dplyr::rename(sample_id=name) %&gt;% tibble::column_to_rownames(&quot;sample_id&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) %&gt;% dplyr::select(names(result_impute)) raw_1_data &lt;- rbind(result_impute,interior) write.table(raw_1_data,&quot;/Users/guituantuan/Desktop/projects/junyu/result/serum_2020/1.raw.AB.positive.txt&quot;,sep=&quot;\\t&quot;,quote=F,row.names=F,col.names=T) 2.2 negative 合并2020年serum的positive数据及对na值的填充 library(dplyr) path=&quot;/Users/guituantuan/Desktop/projects/junyu/raw_data/serum_2020/negative/&quot; file &lt;- list.files(path) mydata1 &lt;- read.table(paste0(path,file[1]),sep=&quot;\\t&quot;,header=F,check.names = F) %&gt;% dplyr::select(-c(&quot;V1&quot;,&quot;V3&quot;)) %&gt;% tibble::column_to_rownames(&quot;V2&quot;) mydata2 &lt;- read.table(paste0(path,file[2]),sep=&quot;\\t&quot;,header=F,check.names = F) %&gt;% dplyr::select(-c(&quot;V1&quot;,&quot;V3&quot;)) %&gt;% tibble::column_to_rownames(&quot;V2&quot;) result &lt;- cbind(mydata1,mydata2) for (i in 3:length(file)){ mydata &lt;- read.table(paste0(path,file[i]),sep=&quot;\\t&quot;,header=F,check.names = F) %&gt;% dplyr::select(-c(&quot;V1&quot;,&quot;V3&quot;)) %&gt;% tibble::column_to_rownames(&quot;V2&quot;) result &lt;- cbind(result,mydata) } result_temp &lt;- result %&gt;% tibble::rownames_to_column(var=&quot;V1&quot;) %&gt;% tidyr::separate(&quot;V1&quot;,sep=&quot;,&quot;,c(&quot;sample_name&quot;,NA)) %&gt;% tidyr::separate(&quot;sample_name&quot;,sep=&quot;NEG&quot;,c(NA,&quot;s1&quot;)) %&gt;% tidyr::separate(&quot;s1&quot;,c(NA,&quot;B&quot;)) %&gt;% dplyr::mutate(sample_name=paste0(&quot;id_&quot;,B)) %&gt;% dplyr::select(-&quot;B&quot;) result_temp$mean &lt;- apply(result_temp[,-which(names(result_temp)==&quot;sample_name&quot;)],1,function(x){return(mean(as.numeric(x),na.rm=T))}) result_temp_sample_mean &lt;- result_temp %&gt;% dplyr::arrange(desc(as.numeric(mean))) %&gt;% dplyr::distinct(sample_name,.keep_all=TRUE) %&gt;% dplyr::select(-&quot;mean&quot;) %&gt;% tibble::column_to_rownames(&quot;sample_name&quot;) %&gt;% t() %&gt;% as.data.frame() result_temp_sample_mean$mean &lt;- apply(result_temp_sample_mean[,-which(names(result_temp_sample_mean)==&quot;id_NA&quot;)],1,function(x){return(mean(as.numeric(x),na.rm=T))}) rownames(result_temp_sample_mean) &lt;- NULL result_temp_metabolties_mean &lt;- result_temp_sample_mean %&gt;% dplyr::arrange(desc(as.numeric(mean))) %&gt;% dplyr::distinct(id_NA,.keep_all=TRUE) %&gt;% dplyr::select(-&quot;mean&quot;) %&gt;% tibble::column_to_rownames(&quot;id_NA&quot;) %&gt;% dplyr::mutate_if(is.character, as.numeric) result_temp_metabolties_mean[result_temp_metabolties_mean==0] &lt;- NA result1 &lt;- result_temp_metabolties_mean source(&quot;/Users/guituantuan/Desktop/projects/script/impute.R&quot;) result_impute &lt;- meta_impute(result1) %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) #添加内标 interior &lt;- data.table::fread(&quot;/Users/guituantuan/Desktop/projects/junyu/raw_data/serum_2020/2020PSnegALLchecked_IS.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(-c(&quot;Sample Name&quot;,&quot;Sample Type&quot;)) %&gt;% tidyr::separate(&quot;Original Filename&quot;,sep=&quot;\\\\\\\\&quot;,c(NA,NA,NA,NA,&quot;temp&quot;)) %&gt;% tidyr::separate(&quot;temp&quot;,sep=&quot;[.]&quot;,&quot;name&quot;) %&gt;% dplyr::mutate(name=paste0(&quot;id_&quot;,name)) interior$mean &lt;- apply(interior[,2:3],1,function(x){return(mean(as.numeric(x),na.rm=T))}) interior_temp &lt;- interior %&gt;% dplyr::arrange(desc(mean)) %&gt;% dplyr::distinct(name,.keep_all=TRUE) %&gt;% dplyr::select(-&quot;mean&quot;) %&gt;% tibble::column_to_rownames(&quot;name&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) %&gt;% dplyr::select(names(result_impute)) raw_1_data &lt;- rbind(result_impute,interior_temp) write.table(raw_1_data,&quot;/Users/guituantuan/Desktop/projects/junyu/result/serum_2020/1.raw.AB.negative.txt&quot;,sep=&quot;\\t&quot;,quote=F,row.names=F,col.names=T) "],["serum-2021-data-preprocess.html", "Chapter 3 serum: 2021 data preprocess 3.1 positive 3.2 negative", " Chapter 3 serum: 2021 data preprocess 3.1 positive 合并2021年serum的positive数据及对na值的填充 library(dplyr) library(ggplot2) mydata_AB &lt;- data.table::fread(&quot;/Users/guituantuan/Desktop/projects/junyu/raw_data/serum_2021/positive/PSposALLchecked_AB650.txt&quot;) %&gt;% tibble::column_to_rownames(&quot;Original Filename&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column() %&gt;% tidyr::separate(rowname,sep=&quot;wiff&quot;,c(&quot;name&quot;,NA)) %&gt;% tidyr::separate(name,sep=&quot;pos&quot;,c(NA,&quot;n&quot;)) %&gt;% tidyr::separate(n,sep=&quot;\\\\\\\\&quot;,c(NA,&quot;name&quot;)) %&gt;% tidyr::separate(name,sep=&quot;[.]&quot;,c(&quot;n&quot;,NA)) %&gt;% dplyr::mutate(n=paste0(&quot;id_&quot;,n)) %&gt;% tibble::column_to_rownames(&quot;n&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) %&gt;% dplyr::mutate(Metabolites=stringr::str_to_title(Metabolites)) %&gt;% tibble::column_to_rownames(&quot;Metabolites&quot;) mydata_LOCAL &lt;- data.table::fread(&quot;/Users/guituantuan/Desktop/projects/junyu/raw_data/serum_2021/positive/PSposALLchecked_LOCAL.txt&quot;) %&gt;% tibble::column_to_rownames(&quot;Original Filename&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column() %&gt;% tidyr::separate(rowname,sep=&quot;wiff&quot;,c(&quot;name&quot;,NA)) %&gt;% tidyr::separate(name,sep=&quot;pos&quot;,c(NA,&quot;n&quot;)) %&gt;% tidyr::separate(n,sep=&quot;\\\\\\\\&quot;,c(NA,&quot;name&quot;)) %&gt;% tidyr::separate(name,sep=&quot;[.]&quot;,c(&quot;n&quot;,NA)) %&gt;% dplyr::mutate(n=paste0(&quot;id_&quot;,n)) %&gt;% tibble::column_to_rownames(&quot;n&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) %&gt;% dplyr::mutate(Metabolites=stringr::str_to_title(Metabolites)) %&gt;% tibble::column_to_rownames(&quot;Metabolites&quot;) mydata_AB_temp &lt;- mydata_AB %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) mydata_LOCAL_temp &lt;- mydata_LOCAL %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) #合并 AB和LOCAL,并保存qc1平均值最大的代谢物(最后发现这些重复的物质是完全一样的) ###拿出来重复的看一下 mydata_AB_LOCAL_temp &lt;- rbind(mydata_AB_temp,mydata_LOCAL_temp) repetition &lt;- names(which(table(mydata_AB_LOCAL_temp$Metabolites)==2)) mydata_AB_LOCAL_repetition &lt;- mydata_AB_LOCAL_temp %&gt;% dplyr::filter(Metabolites %in% repetition) repetition_QC1 &lt;- mydata_AB_LOCAL_repetition[,c(1,grep(&quot;QC1&quot;,names(mydata_AB_LOCAL_repetition)))] repetition_QC1[4,1] &lt;- &quot;Kynurenine.1&quot; repetition_QC1[5,1] &lt;- &quot;L-Carnitine.1&quot; repetition_QC1[6,1] &lt;- &quot;Trigonelline.1&quot; repetition_QC1_melt &lt;- repetition_QC1 %&gt;% reshape2::melt(id=&quot;Metabolites&quot;) %&gt;% dplyr::mutate(type=&quot;QC1&quot;) repetition_QC2 &lt;- mydata_AB_LOCAL_repetition[,c(1,grep(&quot;QC2&quot;,names(mydata_AB_LOCAL_repetition)))] repetition_QC2[4,1] &lt;- &quot;Kynurenine.1&quot; repetition_QC2[5,1] &lt;- &quot;L-Carnitine.1&quot; repetition_QC2[6,1] &lt;- &quot;Trigonelline.1&quot; repetition_QC2_melt &lt;- repetition_QC2 %&gt;% reshape2::melt(id=&quot;Metabolites&quot;) %&gt;% dplyr::mutate(type=&quot;QC2&quot;) repetition_sample &lt;- mydata_AB_LOCAL_repetition[,c(1,grep(&quot;id_[0-9]+&quot;,names(mydata_AB_LOCAL_repetition)))] repetition_sample[4,1] &lt;- &quot;Kynurenine.1&quot; repetition_sample[5,1] &lt;- &quot;L-Carnitine.1&quot; repetition_sample[6,1] &lt;- &quot;Trigonelline.1&quot; repetition_sample_melt &lt;- repetition_sample %&gt;% reshape2::melt(id=&quot;Metabolites&quot;) %&gt;% dplyr::mutate(type=&quot;sample&quot;) repetition_melt &lt;- rbind(repetition_QC1_melt,repetition_QC2_melt,repetition_sample_melt) png(&quot;/Users/guituantuan/Desktop/projects/junyu/result/serum_2021/positive/0.repetition_metabolites_boxplot.png&quot;, width = 12, height = 7, units = &#39;in&#39;, res = 200 ) ggplot(repetition_melt,aes(type,log(as.numeric(value))))+ geom_boxplot(aes(fill=Metabolites))+ theme_bw() dev.off() ##其实ab和local重复的物质是完全一样的 QC1_mean &lt;- mydata_AB_LOCAL_temp[,grep(&quot;QC1&quot;,names(mydata_AB_LOCAL_temp))] %&gt;% dplyr::mutate_if(is.character, as.numeric) %&gt;% rowMeans(na.rm=TRUE) mydata_AB_LOCAL &lt;- cbind(mydata_AB_LOCAL_temp,QC1_mean) %&gt;% dplyr::arrange(desc(QC1_mean)) %&gt;% dplyr::distinct(Metabolites,.keep_all=TRUE) %&gt;% dplyr::select(-&quot;QC1_mean&quot;) QC1 &lt;- mydata_AB_LOCAL[,grep(&quot;QC1&quot;,names(mydata_AB_LOCAL))] %&gt;% dplyr::mutate_if(is.character, as.numeric) rownames(QC1) &lt;- mydata_AB_LOCAL$Metabolites QC1_melt &lt;- reshape2::melt(QC1) %&gt;% dplyr::mutate(type=&quot;QC1&quot;) QC1_mean &lt;- QC1 %&gt;% rowMeans(na.rm=TRUE) QC2 &lt;- mydata_AB_LOCAL[,grep(&quot;QC2&quot;,names(mydata_AB_LOCAL))] %&gt;% mutate_if(is.character, as.numeric) rownames(QC2) &lt;- mydata_AB_LOCAL$Metabolites QC2_melt &lt;- reshape2::melt(QC2) %&gt;% dplyr::mutate(type=&quot;QC2&quot;) QC2_mean &lt;- QC2 %&gt;% rowMeans(na.rm=TRUE) blk &lt;- mydata_AB_LOCAL[,grep(&quot;blk&quot;,names(mydata_AB_LOCAL))] %&gt;% mutate_if(is.character, as.numeric) rownames(blk) &lt;- mydata_AB_LOCAL$Metabolites sample &lt;- mydata_AB_LOCAL[,grep(&quot;id_[0-9]+&quot;,names(mydata_AB_LOCAL))] %&gt;% mutate_if(is.character, as.numeric) rownames(sample) &lt;- mydata_AB_LOCAL$Metabolites #定义如果空白所占比例&gt;50%,直接保留 blk_retained &lt;- mydata_AB_LOCAL$Metabolites[which(rowSums(is.na(blk))/ncol(blk)&gt;0.5)] blk_melt &lt;- reshape2::melt(blk) %&gt;% dplyr::mutate(type=&quot;blk&quot;) blk_mean &lt;- blk %&gt;% rowMeans(na.rm=TRUE) #定义如果qc1的平均值比blk的平均值&gt;50%,保留 qc1_blk_retained &lt;- mydata_AB_LOCAL$Metabolites[which(blk_mean/QC1_mean&lt;0.5)] all_mean &lt;- cbind(QC1_mean,QC2_mean,blk_mean) write.table(all_mean,&quot;/Users/guituantuan/Desktop/projects/junyu/result/serum_2021/positive/QC1_QC2_blk_mean.txt&quot;,sep=&quot;\\t&quot;,quote=F) all_melt &lt;- rbind(QC1_melt,QC2_melt,blk_melt) ggplot(all_melt,aes(type,log(value)))+ geom_boxplot() #保留下的代谢物 metabolites_retained &lt;- unique(c(blk_retained,qc1_blk_retained)) #删除的代谢物拿出来看一下 metabolites_filter_out &lt;- setdiff(mydata_AB_LOCAL$Metabolites,metabolites_retained) QC1_filter &lt;- QC1 %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) %&gt;% reshape2::melt(id=&quot;Metabolites&quot;) %&gt;% dplyr::filter(Metabolites %in% metabolites_filter_out) %&gt;% dplyr::mutate(type=&quot;QC1&quot;) QC2_filter &lt;- QC2 %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) %&gt;% reshape2::melt(id=&quot;Metabolites&quot;) %&gt;% dplyr::filter(Metabolites %in% metabolites_filter_out) %&gt;% dplyr::mutate(type=&quot;QC2&quot;) blk_filter &lt;- blk %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) %&gt;% reshape2::melt(id=&quot;Metabolites&quot;) %&gt;% dplyr::filter(Metabolites %in% metabolites_filter_out) %&gt;% dplyr::mutate(type=&quot;blk&quot;) sample_filter &lt;- sample %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) %&gt;% reshape2::melt(id=&quot;Metabolites&quot;) %&gt;% dplyr::filter(Metabolites %in% metabolites_filter_out) %&gt;% dplyr::mutate(type=&quot;sample&quot;) all_filter &lt;- rbind(QC1_filter,QC2_filter,blk_filter,sample_filter) png(&quot;/Users/guituantuan/Desktop/projects/junyu/result/serum_2021/positive/0.filterout_metabolites_boxplot.png&quot;, width = 12, height = 7, units = &#39;in&#39;, res = 200) ggplot(all_filter,aes(Metabolites,log(as.numeric(value))))+ geom_boxplot(aes(fill=type))+ theme_bw()+ theme(axis.text.x = element_text(angle = 90, hjust = 1)) dev.off() #重新定义mydata_AB_LOCAL，qc1,qc2 mydata_AB_LOCAL &lt;- mydata_AB_LOCAL %&gt;% dplyr::filter(Metabolites %in% metabolites_retained) QC1 &lt;- mydata_AB_LOCAL[,grep(&quot;QC1&quot;,names(mydata_AB_LOCAL))] %&gt;% dplyr::mutate_if(is.character, as.numeric) QC2 &lt;- mydata_AB_LOCAL[,grep(&quot;QC2&quot;,names(mydata_AB_LOCAL))] %&gt;% mutate_if(is.character, as.numeric) sample &lt;- mydata_AB_LOCAL[,grep(&quot;id_[0-9]+&quot;,names(mydata_AB_LOCAL))] %&gt;% mutate_if(is.character, as.numeric) ##impute, QC1 using QC1 metabolites&#39; mean, QC2 using QC2 metabolites&#39; mean, other using 0.1*min in every sample QC1_impute &lt;- t(apply(QC1,1,function(x){Hmisc::impute(x,mean)})) QC2_impute &lt;- t(apply(QC2,1,function(x){Hmisc::impute(x,mean)})) sample_impute &lt;- apply(sample,2,function(x){x[which(is.na(x))] &lt;- 0.1*min(x,na.rm=T);return(x)}) raw_data &lt;- cbind(QC1_impute,QC2_impute,sample_impute) %&gt;% as.data.frame() %&gt;% dplyr::mutate(Metabolites=mydata_AB_LOCAL$Metabolites) %&gt;% tibble::column_to_rownames(&quot;Metabolites&quot;) %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) ##添加内标 interior &lt;- data.table::fread(&quot;/Users/guituantuan/Desktop/projects/junyu/raw_data/serum_2021/PSposALLchecked_IS.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(-c(&quot;Sample Name&quot;,&quot;Sample Type&quot;)) %&gt;% tidyr::separate(&quot;Original Filename&quot;,sep=&quot;\\\\\\\\&quot;,c(NA,NA,NA,&quot;temp&quot;)) %&gt;% tidyr::separate(&quot;temp&quot;,sep=&quot;[.]&quot;,&quot;name&quot;) %&gt;% dplyr::mutate(name=paste0(&quot;id_&quot;,name)) %&gt;% dplyr::rename(sample_id=name) %&gt;% tibble::column_to_rownames(&quot;sample_id&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) %&gt;% dplyr::select(names(raw_data)) raw_1_data &lt;- rbind(raw_data,interior) write.table(raw_1_data,&quot;/Users/guituantuan/Desktop/projects/junyu/result/serum_2021/1.raw.AB.positive.txt&quot;,sep=&quot;\\t&quot;,quote=F,row.names=F) ##positive是在sheet1里，negative在sheet2 positive_order &lt;- readxl::read_excel(&quot;/Users/guituantuan/Desktop/projects/junyu/raw_data/serum_2021/2021PS上机顺序RAW.xlsx&quot;,sheet=1) %&gt;% as.data.frame() %&gt;% tidyr::separate(ID,sep=&quot;\\\\\\\\&quot;,c(&quot;batch&quot;,NA,&quot;ID&quot;)) %&gt;% dplyr::mutate(ID=paste0(&quot;id_&quot;,ID)) %&gt;% dplyr::mutate(type1=ifelse(grepl(&quot;blk&quot;,ID),&quot;blk&quot;, ifelse(grepl(&quot;QC1&quot;,ID),&quot;QC1&quot;, ifelse(grepl(&quot;QC2&quot;,ID),&quot;QC2&quot;,&quot;sample&quot;)))) %&gt;% dplyr::mutate(type=ifelse(grepl(&quot;blk&quot;,ID),&quot;blk&quot;, ifelse(grepl(&quot;QC1&quot;,ID),&quot;QC&quot;,&quot;sample&quot;))) %&gt;% dplyr::filter(!type==&quot;blk&quot;) %&gt;% dplyr::arrange(ORDER_POS) positive_order &lt;- positive_order %&gt;% dplyr::mutate(order=seq(1,nrow(positive_order))) %&gt;% dplyr::select(-&quot;ORDER_POS&quot;) %&gt;% dplyr::rename(sample_id=ID) %&gt;% dplyr::mutate(batch=ifelse(batch==&quot;1116&quot;,&quot;A&quot;, ifelse(batch==&quot;1122&quot;,&quot;B&quot;, ifelse(batch==&quot;1125&quot;,&quot;C&quot;, ifelse(batch==&quot;1129&quot;,&quot;D&quot;, ifelse(batch==&quot;1203&quot;,&quot;E&quot;, ifelse(batch==&quot;1207&quot;,&quot;F&quot;,NA))))))) raw_data_melt &lt;- reshape2::melt(raw_data) %&gt;% dplyr::left_join(positive_order,by=c(&quot;variable&quot;=&quot;sample_id&quot;)) raw_data_melt$variable &lt;- factor(raw_data_melt$variable,levels=positive_order$sample_id) p &lt;- ggplot(raw_data_melt,aes(variable,log(value)))+ geom_boxplot(aes(fill=type1))+ coord_flip()+ theme_bw()+ theme(axis.text.y = element_text(size=3)) ggsave(&quot;/Users/guituantuan/Desktop/projects/junyu/result/serum_2021/positive/boxplot_order.pdf&quot;,width=10,height = 30) raw_data_melt$variable &lt;- factor(raw_data_melt$variable,levels=unique(raw_data_melt$variable)) p &lt;- ggplot(raw_data_melt,aes(variable,log(value)))+ geom_boxplot(aes(fill=type1))+ coord_flip()+ theme_bw()+ theme(axis.text.y = element_text(size=3)) ggsave(&quot;/Users/guituantuan/Desktop/projects/junyu/result/serum_2021/positive/boxplot_qc_sample.pdf&quot;,width=10,height = 30) #删除了几个每个批次前几个qc，分别有&quot;id_QC1-11&quot;,&quot;id_QC1-12&quot;,&quot;id_QC2-6&quot;,&quot;id_QC1-21&quot;,&quot;id_QC1-22&quot;,&quot;id_QC2-11&quot;, #&quot;id_QC1-31&quot;,&quot;id_QC1-32&quot;,&quot;id_QC2-16&quot;,&quot;id_QC1-41&quot;,&quot;id_QC1-42&quot;,&quot;id_QC2-21&quot;,&quot;id_QC1-51&quot;,&quot;id_QC1-52&quot;,&quot;id_QC2-26&quot; positive_order_new_temp &lt;- positive_order %&gt;% dplyr::filter(!sample_id %in% c(&quot;id_QC1-11&quot;,&quot;id_QC1-12&quot;,&quot;id_QC2-6&quot;,&quot;id_QC1-21&quot;,&quot;id_QC1-22&quot;,&quot;id_QC2-11&quot;, &quot;id_QC1-31&quot;,&quot;id_QC1-32&quot;,&quot;id_QC2-16&quot;,&quot;id_QC1-41&quot;,&quot;id_QC1-42&quot;,&quot;id_QC2-21&quot;, &quot;id_QC1-51&quot;,&quot;id_QC1-52&quot;,&quot;id_QC2-26&quot;)) positive_order_new &lt;- positive_order_new_temp %&gt;% dplyr::arrange(order) %&gt;% dplyr::mutate(order=seq(1,nrow(positive_order_new_temp))) write.table(positive_order_new,&quot;/Users/guituantuan/Desktop/projects/junyu/result/serum_2021/1.positive_qc_intersect.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names = F) 3.2 negative 合并2021年serum的negative数据及对na值的填充 library(dplyr) library(ggplot2) mydata_AB &lt;- data.table::fread(&quot;/Users/guituantuan/Desktop/projects/junyu/raw_data/serum_2021/negative/PSnegALLchecked_AB650.txt&quot;) %&gt;% tibble::column_to_rownames(&quot;Original Filename&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column() %&gt;% tidyr::separate(rowname,sep=&quot;wiff&quot;,c(&quot;name&quot;,NA)) %&gt;% tidyr::separate(name,sep=&quot;neg&quot;,c(NA,&quot;n&quot;)) %&gt;% tidyr::separate(n,sep=&quot;\\\\\\\\&quot;,c(NA,&quot;name&quot;)) %&gt;% tidyr::separate(name,sep=&quot;[.]&quot;,c(&quot;n&quot;,NA)) %&gt;% dplyr::mutate(n=paste0(&quot;id_&quot;,n)) %&gt;% tibble::column_to_rownames(&quot;n&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) %&gt;% dplyr::mutate(Metabolites=stringr::str_to_title(Metabolites)) %&gt;% tibble::column_to_rownames(&quot;Metabolites&quot;) mydata_LOCAL &lt;- data.table::fread(&quot;/Users/guituantuan/Desktop/projects/junyu/raw_data/serum_2021/negative/PSnegALLchecked_LOCAL.txt&quot;) %&gt;% tibble::column_to_rownames(&quot;Original Filename&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column() %&gt;% tidyr::separate(rowname,sep=&quot;wiff&quot;,c(&quot;name&quot;,NA)) %&gt;% tidyr::separate(name,sep=&quot;neg&quot;,c(NA,&quot;n&quot;)) %&gt;% tidyr::separate(n,sep=&quot;\\\\\\\\&quot;,c(NA,&quot;name&quot;)) %&gt;% tidyr::separate(name,sep=&quot;[.]&quot;,c(&quot;n&quot;,NA)) %&gt;% dplyr::mutate(n=paste0(&quot;id_&quot;,n)) %&gt;% tibble::column_to_rownames(&quot;n&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) %&gt;% dplyr::mutate(Metabolites=stringr::str_to_title(Metabolites)) %&gt;% tibble::column_to_rownames(&quot;Metabolites&quot;) mydata_AB_temp &lt;- mydata_AB %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) mydata_LOCAL_temp &lt;- mydata_LOCAL %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) #合并 AB和LOCAL,并保存qc1平均值最大的代谢物(最后发现这些重复的物质是完全一样的) ###拿出来重复的看一下 mydata_AB_LOCAL_temp &lt;- rbind(mydata_AB_temp,mydata_LOCAL_temp) repetition &lt;- names(which(table(mydata_AB_LOCAL_temp$Metabolites)==2)) mydata_AB_LOCAL_repetition &lt;- mydata_AB_LOCAL_temp %&gt;% dplyr::filter(Metabolites %in% repetition) repetition_QC1 &lt;- mydata_AB_LOCAL_repetition[,c(1,grep(&quot;QC1&quot;,names(mydata_AB_LOCAL_repetition)))] repetition_QC1[4,1] &lt;- &quot;Kynurenine.1&quot; repetition_QC1[5,1] &lt;- &quot;L-Carnitine.1&quot; repetition_QC1[6,1] &lt;- &quot;Trigonelline.1&quot; repetition_QC1_melt &lt;- repetition_QC1 %&gt;% reshape2::melt(id=&quot;Metabolites&quot;) %&gt;% dplyr::mutate(type=&quot;QC1&quot;) repetition_QC2 &lt;- mydata_AB_LOCAL_repetition[,c(1,grep(&quot;QC2&quot;,names(mydata_AB_LOCAL_repetition)))] repetition_QC2[4,1] &lt;- &quot;Kynurenine.1&quot; repetition_QC2[5,1] &lt;- &quot;L-Carnitine.1&quot; repetition_QC2[6,1] &lt;- &quot;Trigonelline.1&quot; repetition_QC2_melt &lt;- repetition_QC2 %&gt;% reshape2::melt(id=&quot;Metabolites&quot;) %&gt;% dplyr::mutate(type=&quot;QC2&quot;) repetition_sample &lt;- mydata_AB_LOCAL_repetition[,c(1,grep(&quot;id_[0-9]+&quot;,names(mydata_AB_LOCAL_repetition)))] repetition_sample[4,1] &lt;- &quot;Kynurenine.1&quot; repetition_sample[5,1] &lt;- &quot;L-Carnitine.1&quot; repetition_sample[6,1] &lt;- &quot;Trigonelline.1&quot; repetition_sample_melt &lt;- repetition_sample %&gt;% reshape2::melt(id=&quot;Metabolites&quot;) %&gt;% dplyr::mutate(type=&quot;sample&quot;) repetition_melt &lt;- rbind(repetition_QC1_melt,repetition_QC2_melt,repetition_sample_melt) png(&quot;/Users/guituantuan/Desktop/projects/junyu/result/serum_2021/negative/0.repetition_metabolites_boxplot.png&quot;, width = 12, height = 7, units = &#39;in&#39;, res = 200 ) ggplot(repetition_melt,aes(type,log(as.numeric(value))))+ geom_boxplot(aes(fill=Metabolites))+ theme_bw() dev.off() ##其实ab和local重复的物质是完全一样的 QC1_mean &lt;- mydata_AB_LOCAL_temp[,grep(&quot;QC1&quot;,names(mydata_AB_LOCAL_temp))] %&gt;% dplyr::mutate_if(is.character, as.numeric) %&gt;% rowMeans(na.rm=TRUE) mydata_AB_LOCAL &lt;- cbind(mydata_AB_LOCAL_temp,QC1_mean) %&gt;% dplyr::arrange(desc(QC1_mean)) %&gt;% dplyr::distinct(Metabolites,.keep_all=TRUE) %&gt;% dplyr::select(-&quot;QC1_mean&quot;) QC1 &lt;- mydata_AB_LOCAL[,grep(&quot;QC1&quot;,names(mydata_AB_LOCAL))] %&gt;% dplyr::mutate_if(is.character, as.numeric) rownames(QC1) &lt;- mydata_AB_LOCAL$Metabolites QC1_melt &lt;- reshape2::melt(QC1) %&gt;% dplyr::mutate(type=&quot;QC1&quot;) QC1_mean &lt;- QC1 %&gt;% rowMeans(na.rm=TRUE) QC2 &lt;- mydata_AB_LOCAL[,grep(&quot;QC2&quot;,names(mydata_AB_LOCAL))] %&gt;% mutate_if(is.character, as.numeric) rownames(QC2) &lt;- mydata_AB_LOCAL$Metabolites QC2_melt &lt;- reshape2::melt(QC2) %&gt;% dplyr::mutate(type=&quot;QC2&quot;) QC2_mean &lt;- QC2 %&gt;% rowMeans(na.rm=TRUE) blk &lt;- mydata_AB_LOCAL[,grep(&quot;blk&quot;,names(mydata_AB_LOCAL))] %&gt;% mutate_if(is.character, as.numeric) rownames(blk) &lt;- mydata_AB_LOCAL$Metabolites sample &lt;- mydata_AB_LOCAL[,grep(&quot;id_[0-9]+&quot;,names(mydata_AB_LOCAL))] %&gt;% mutate_if(is.character, as.numeric) rownames(sample) &lt;- mydata_AB_LOCAL$Metabolites #定义如果空白所占比例&gt;50%,直接保留 blk_retained &lt;- mydata_AB_LOCAL$Metabolites[which(rowSums(is.na(blk))/ncol(blk)&gt;0.5)] blk_melt &lt;- reshape2::melt(blk) %&gt;% dplyr::mutate(type=&quot;blk&quot;) blk_mean &lt;- blk %&gt;% rowMeans(na.rm=TRUE) #定义如果qc1的平均值比blk的平均值&gt;50%,保留 qc1_blk_retained &lt;- mydata_AB_LOCAL$Metabolites[which(blk_mean/QC1_mean&lt;0.5)] all_mean &lt;- cbind(QC1_mean,QC2_mean,blk_mean) write.table(all_mean,&quot;/Users/guituantuan/Desktop/projects/junyu/result/serum_2021/negative/QC1_QC2_blk_mean.txt&quot;,sep=&quot;\\t&quot;,quote=F) all_melt &lt;- rbind(QC1_melt,QC2_melt,blk_melt) ggplot(all_melt,aes(type,log(value)))+ geom_boxplot() #保留下的代谢物 metabolites_retained &lt;- unique(c(blk_retained,qc1_blk_retained)) #删除的代谢物拿出来看一下 metabolites_filter_out &lt;- setdiff(mydata_AB_LOCAL$Metabolites,metabolites_retained) QC1_filter &lt;- QC1 %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) %&gt;% reshape2::melt(id=&quot;Metabolites&quot;) %&gt;% dplyr::filter(Metabolites %in% metabolites_filter_out) %&gt;% dplyr::mutate(type=&quot;QC1&quot;) QC2_filter &lt;- QC2 %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) %&gt;% reshape2::melt(id=&quot;Metabolites&quot;) %&gt;% dplyr::filter(Metabolites %in% metabolites_filter_out) %&gt;% dplyr::mutate(type=&quot;QC2&quot;) blk_filter &lt;- blk %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) %&gt;% reshape2::melt(id=&quot;Metabolites&quot;) %&gt;% dplyr::filter(Metabolites %in% metabolites_filter_out) %&gt;% dplyr::mutate(type=&quot;blk&quot;) sample_filter &lt;- sample %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) %&gt;% reshape2::melt(id=&quot;Metabolites&quot;) %&gt;% dplyr::filter(Metabolites %in% metabolites_filter_out) %&gt;% dplyr::mutate(type=&quot;sample&quot;) all_filter &lt;- rbind(QC1_filter,QC2_filter,blk_filter,sample_filter) png(&quot;/Users/guituantuan/Desktop/projects/junyu/result/serum_2021/negative/0.filterout_metabolites_boxplot.png&quot;, width = 12, height = 7, units = &#39;in&#39;, res = 200) ggplot(all_filter,aes(Metabolites,log(as.numeric(value))))+ geom_boxplot(aes(fill=type))+ theme_bw()+ theme(axis.text.x = element_text(angle = 90, hjust = 1)) dev.off() #重新定义mydata_AB_LOCAL，qc1,qc2 mydata_AB_LOCAL &lt;- mydata_AB_LOCAL %&gt;% dplyr::filter(Metabolites %in% metabolites_retained) QC1 &lt;- mydata_AB_LOCAL[,grep(&quot;QC1&quot;,names(mydata_AB_LOCAL))] %&gt;% dplyr::mutate_if(is.character, as.numeric) QC2 &lt;- mydata_AB_LOCAL[,grep(&quot;QC2&quot;,names(mydata_AB_LOCAL))] %&gt;% mutate_if(is.character, as.numeric) sample &lt;- mydata_AB_LOCAL[,grep(&quot;id_[0-9]+&quot;,names(mydata_AB_LOCAL))] %&gt;% mutate_if(is.character, as.numeric) ##impute, QC1 using QC1 metabolites&#39; mean, QC2 using QC2 metabolites&#39; mean, other using 0.1*min in every sample QC1_impute &lt;- t(apply(QC1,1,function(x){Hmisc::impute(x,mean)})) QC2_impute &lt;- t(apply(QC2,1,function(x){Hmisc::impute(x,mean)})) sample_impute &lt;- apply(sample,2,function(x){x[which(is.na(x))] &lt;- 0.1*min(x,na.rm=T);return(x)}) raw_data &lt;- cbind(QC1_impute,QC2_impute,sample_impute) %&gt;% as.data.frame() %&gt;% dplyr::mutate(Metabolites=mydata_AB_LOCAL$Metabolites) %&gt;% tibble::column_to_rownames(&quot;Metabolites&quot;) %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) ##添加内标 interior &lt;- data.table::fread(&quot;/Users/guituantuan/Desktop/projects/junyu/raw_data/serum_2021/PSnegALLchecked_IS.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(-c(&quot;Sample Name&quot;,&quot;Sample Type&quot;)) %&gt;% tidyr::separate(&quot;Original Filename&quot;,sep=&quot;\\\\\\\\&quot;,c(NA,NA,NA,&quot;temp&quot;)) %&gt;% tidyr::separate(&quot;temp&quot;,sep=&quot;[.]&quot;,&quot;name&quot;) %&gt;% dplyr::mutate(name=paste0(&quot;id_&quot;,name)) %&gt;% dplyr::rename(sample_id=name) %&gt;% dplyr::distinct(sample_id,.keep_all=T) %&gt;% tibble::column_to_rownames(&quot;sample_id&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;Metabolites&quot;) %&gt;% dplyr::select(names(raw_data)) raw_1_data &lt;- rbind(raw_data,interior) write.table(raw_1_data,&quot;/Users/guituantuan/Desktop/projects/junyu/result/serum_2021/1.raw.AB.negative.txt&quot;,sep=&quot;\\t&quot;,quote=F,row.names=F) ##positive是在sheet1里，negative在sheet2 negative_order &lt;- readxl::read_excel(&quot;/Users/guituantuan/Desktop/projects/junyu/raw_data/serum_2021/2021PS上机顺序RAW.xlsx&quot;,sheet=2) %&gt;% as.data.frame() %&gt;% tidyr::separate(ID,sep=&quot;\\\\\\\\&quot;,c(&quot;batch&quot;,NA,&quot;ID&quot;)) %&gt;% dplyr::mutate(ID=paste0(&quot;id_&quot;,ID)) %&gt;% dplyr::mutate(type1=ifelse(grepl(&quot;blk&quot;,ID),&quot;blk&quot;, ifelse(grepl(&quot;QC1&quot;,ID),&quot;QC1&quot;, ifelse(grepl(&quot;QC2&quot;,ID),&quot;QC2&quot;,&quot;sample&quot;)))) %&gt;% dplyr::mutate(type=ifelse(grepl(&quot;blk&quot;,ID),&quot;blk&quot;, ifelse(grepl(&quot;QC1&quot;,ID),&quot;QC&quot;,&quot;sample&quot;))) %&gt;% dplyr::filter(!type==&quot;blk&quot;) %&gt;% dplyr::arrange(ORDER_NEG) %&gt;% dplyr::select(-&quot;...3&quot;) negative_order &lt;- negative_order %&gt;% dplyr::mutate(order=seq(1,nrow(negative_order))) %&gt;% dplyr::select(-&quot;ORDER_NEG&quot;) %&gt;% dplyr::rename(sample_id=ID) %&gt;% dplyr::mutate(batch=ifelse(batch==&quot;1116&quot;,&quot;A&quot;, ifelse(batch==&quot;1122&quot;,&quot;B&quot;, ifelse(batch==&quot;1125&quot;,&quot;C&quot;, ifelse(batch==&quot;1129&quot;,&quot;D&quot;, ifelse(batch==&quot;1203&quot;,&quot;E&quot;, ifelse(batch==&quot;1207&quot;,&quot;F&quot;,NA))))))) raw_data_melt &lt;- reshape2::melt(raw_data) %&gt;% dplyr::left_join(negative_order,by=c(&quot;variable&quot;=&quot;sample_id&quot;)) raw_data_melt$variable &lt;- factor(raw_data_melt$variable,levels=negative_order$sample_id) p &lt;- ggplot(raw_data_melt,aes(variable,log(value)))+ geom_boxplot(aes(fill=type1))+ coord_flip()+ theme_bw()+ theme(axis.text.y = element_text(size=3)) ggsave(&quot;/Users/guituantuan/Desktop/projects/junyu/result/serum_2021/negative/boxplot_order.pdf&quot;,width=10,height = 30) raw_data_melt$variable &lt;- factor(raw_data_melt$variable,levels=unique(raw_data_melt$variable)) p &lt;- ggplot(raw_data_melt,aes(variable,log(value)))+ geom_boxplot(aes(fill=type1))+ coord_flip()+ theme_bw()+ theme(axis.text.y = element_text(size=3)) ggsave(&quot;/Users/guituantuan/Desktop/projects/junyu/result/serum_2021/negative/boxplot_qc_sample.pdf&quot;,width=10,height = 30) negative_order_new_temp &lt;- negative_order negative_order_new &lt;- negative_order_new_temp %&gt;% dplyr::arrange(order) %&gt;% dplyr::mutate(order=seq(1,nrow(negative_order_new_temp))) write.table(negative_order_new,&quot;/Users/guituantuan/Desktop/projects/junyu/result/serum_2021/1.negative_qc_intersect.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names = F) "],["serum-metid-data-anatation.html", "Chapter 4 serum: metID data anatation 4.1 serum 2020 4.2 serum 2021", " Chapter 4 serum: metID data anatation 4.1 serum 2020 args=commandArgs(T) source(&quot;/public/home/rp1008csj/rp1008gtt/MetaboClinical/R/metID_anno.R&quot;) source(&quot;/public/home/rp1008csj/rp1008gtt/MetaboClinical/R/functions.R&quot;) dir1=paste0(&quot;/public/home/rp1008csj/rp1008gtt/projects/metabolism//junyu/metID_2021/BM_2020/&quot;,args[1]) dir_database=&quot;/public/home/rp1008csj/rp1008gtt/MetaboClinical/database/&quot; for (file in list.files(dir_database)) { file.copy(paste0(dir_database,&quot;/&quot;,file),dir1) } setwd(dir1) #用metID对代谢物做注释 metID_anno &lt;- metID_annotation(paste0(args[1],&quot;_peak_name.csv&quot;),paste0(&quot;QC6_&quot;,args[1],&quot;.mgf&quot;),args[1],path=dir1) write.table(metID_anno$filter,paste0(args[1],&quot;_metID_annotation_table_filter.txt&quot;),quote=F,row.names=F,sep=&quot;\\t&quot;) source(&quot;/public/home/rp1008csj/rp1008gtt/MetaboClinical/R/metID_anno.R&quot;) source(&quot;/public/home/rp1008csj/rp1008gtt/MetaboClinical/R/functions.R&quot;) dir1=paste0(&quot;/public/home/rp1008csj/rp1008gtt/projects/metabolism//junyu/metID_2021/serum_2020/&quot;,args[1]) dir_database=&quot;/public/home/rp1008csj/rp1008gtt/MetaboClinical/database/&quot; for (file in list.files(dir_database)) { file.copy(paste0(dir_database,&quot;/&quot;,file),dir1) } setwd(dir1) #用metID对代谢物做注释 metID_anno &lt;- metID_annotation(paste0(args[1],&quot;_peak_name.csv&quot;),paste0(&quot;QC6_&quot;,args[1],&quot;.mgf&quot;),args[1],path=dir1) write.table(metID_anno$filter,paste0(args[1],&quot;_metID_annotation_table_filter.txt&quot;),quote=F,row.names=F,sep=&quot;\\t&quot;) 4.2 serum 2021 serum 2021 metID data anatation using 3 QC source(&quot;/public/home/rp1008csj/rp1008gtt/MetaboClinical/R/metID_anno.R&quot;) source(&quot;/public/home/rp1008csj/rp1008gtt/MetaboClinical/R/functions.R&quot;) dir1=paste0(&quot;/public/home/rp1008csj/rp1008gtt/projects/metabolism/junyu/serum_2021/negative/1&quot;) dir_database=&quot;/public/home/rp1008csj/rp1008gtt/MetaboClinical/database/&quot; for (file in list.files(dir_database)) { file.copy(paste0(dir_database,&quot;/&quot;,file),dir1) } setwd(dir1) #用metID对代谢物做注释 metID_anno &lt;- metID_annotation(&quot;negative_1_peak_table.csv&quot;,&quot;QC1_15.mgf&quot;,&quot;negative&quot;,path=dir1) readr::write_csv(metID_anno$all,paste0(&quot;QC1-15&quot;,&quot;_metID_annotation_table.csv&quot;)) write.table(metID_anno$filter,paste0(&quot;QC1-15&quot;,&quot;_metID_annotation_table_filter.txt&quot;),quote=F,row.names=F,sep=&quot;\\t&quot;) serum 2021 3 QC anatation filter args=commandArgs(T) library(dplyr) QC_1 &lt;- data.table::fread(paste0(&quot;/Users/guituantuan/Desktop/projects/junyu/result/serum_2021/&quot;,args[1],&quot;_QC1_34_metID_annotation_table_filter.txt&quot;)) %&gt;% as.data.frame() QC_2 &lt;- data.table::fread(paste0(&quot;/Users/guituantuan/Desktop/projects/junyu/result/serum_2021/&quot;,args[1],&quot;_QC1_55_metID_annotation_table_filter.txt&quot;)) %&gt;% as.data.frame() QC_3 &lt;- data.table::fread(paste0(&quot;/Users/guituantuan/Desktop/projects/junyu/result/serum_2021/&quot;,args[1],&quot;_QC1_15_metID_annotation_table_filter.txt&quot;)) %&gt;% as.data.frame() temp1 &lt;- merge(QC_1,QC_2,by=&quot;name&quot;,all.x=T,all.y=T) temp2 &lt;- merge(temp1,QC_3,by=&quot;name&quot;,all.x=T,all.y=T) temp3 &lt;- temp2[which(rowSums(is.na(temp2))&lt;2),] %&gt;% dplyr::mutate(Compound_name=ifelse(!is.na(Compound.name.x),Compound.name.x,Compound.name.y)) %&gt;% dplyr::select(c(&quot;name&quot;,&quot;Compound_name&quot;)) write.table(temp3,paste0(&quot;/Users/guituantuan/Desktop/projects/junyu/result/serum_2021/&quot;,args[1],&quot;_metID_annotation_table_filter.txt&quot;),quote=F,row.names=F,sep=&quot;\\t&quot;) "],["serum-combine-data-from-ab-metid-and-metdna-of-serum-2020-and-serum-2021.html", "Chapter 5 serum: combine data from AB, metID and metDNA of serum 2020 and serum 2021", " Chapter 5 serum: combine data from AB, metID and metDNA of serum 2020 and serum 2021 combine data from AB metID metDNA for serum 2020 and serum 2021 Rscript 50-combine_AB_metID_metDNA_v0223.R positive result/v0224_serum_2021 Rscript 50-combine_AB_metID_metDNA_v0223.R positive result/v0224_serum_2020 Rscript 50-combine_AB_metID_metDNA_v0223.R positive result/BM_2020 Rscript 50-combine_AB_metID_metDNA_v0223.R negative result/v0224_serum_2021 Rscript 50-combine_AB_metID_metDNA_v0223.R negative result/v0224_serum_2020 Rscript 50-combine_AB_metID_metDNA_v0223.R negative result/BM_2020 args=commandArgs(T) source(&quot;/Users/guituantuan/Desktop/projects/script/functions_v0211.R&quot;) #setwd(&quot;/Users/guituantuan/Desktop/projects/junyu/result/serum_2021&quot;) setwd(args[2]) dir.create(&quot;temp/&quot;) #读入所需的数据 AB_data &lt;- data.table::fread(paste0(&quot;1.raw.AB.&quot;,args[1],&quot;.txt&quot;,sep=&quot;&quot;)) %&gt;% as.data.frame() peak_data &lt;- data.table::fread(paste0(args[1],&quot;_peak_table.csv&quot;)) %&gt;% as.data.frame() metID_annotation &lt;- data.table::fread(paste0(args[1],&quot;_metID_annotation_table_filter.txt&quot;)) %&gt;% as.data.frame() metID_annotation$Compound_name &lt;- compound_name_process(metID_annotation$Compound_name) metDNA_annotation &lt;- read.csv(paste0(args[1],&quot;_MRN.annotation.result.csv&quot;),header=T) %&gt;% filter(!is.na(compound.name)) %&gt;% as.data.frame() %&gt;% tidyr::separate(score,sep=&quot;;&quot;,&quot;Total.score&quot;) %&gt;% ### if the compound.name have more than 1 name, then preserve the first one tidyr::separate(adduct,sep=&quot;;&quot;,&quot;new_adduct&quot;) %&gt;% tidyr::separate(compound.name,sep=&quot;;&quot;,&quot;Compound.name&quot;) qc_intersect &lt;- data.table::fread(paste0(args[1],&quot;_qc_intersect.txt&quot;)) %&gt;% as.data.frame() #称转化为refmet名称 intersect_sample &lt;- intersect(names(AB_data),qc_intersect$sample_id) AB_data_impute &lt;- AB_data %&gt;% dplyr::select(c(&quot;Metabolites&quot;,intersect_sample)) metabolites_name &lt;- AB_data_impute$Metabolites AB_data_impute_name2refmet &lt;- name2refmet(metabolites_name) AB_name2refmet_result &lt;- merge(AB_data_impute_name2refmet,AB_data_impute,by.x=&quot;Input name&quot;,by.y=&quot;Metabolites&quot;,all.y=T) write.table(AB_name2refmet_result,paste0(&quot;temp/&quot;,args[1],&quot;_AB_imputed_name2refmet.txt&quot;),quote=F,row.names=F,sep=&quot;\\t&quot;) ### metID结果和peak value对应上 metID_peak_data_filter &lt;- peak_data %&gt;% dplyr::filter(name %in% metID_annotation$name) %&gt;% dplyr::select(c(&quot;name&quot;,&quot;mz&quot;,&quot;rt&quot;,intersect_sample)) metID_data &lt;- merge(metID_annotation,metID_peak_data_filter,by=&quot;name&quot;,all.y=T) write.table(metID_data,paste0(&quot;temp/&quot;,args[1],&quot;_metID_peak_table_filter.txt&quot;),quote=F,sep=&quot;\\t&quot;,row.names=F) #把metID名称转化为refmet名称 metID_data &lt;- data.table::fread(paste0(&quot;temp/&quot;,args[1],&quot;_metID_peak_table_filter.txt&quot;)) %&gt;% as.data.frame() metabolites_name &lt;- metID_data$Compound_name metID_name2refmet &lt;- name2refmet(metabolites_name) metID_name2refmet_result &lt;- merge(metID_name2refmet,metID_data,by.x=&quot;Input name&quot;,by.y=&quot;Compound_name&quot;,all.y=T) write.table(metID_name2refmet_result,paste0(&quot;temp/&quot;,args[1],&quot;_metID_name2refmet.txt&quot;),quote=F,row.names=F,sep=&quot;\\t&quot;) #对metDNA对应到peak上 ### if the compound.name have more than 1 name, then preserve the first one if (args[1] == &quot;negative&quot;) { metDNA_annotation_filter_temp &lt;- metDNA_annotation %&gt;% dplyr::filter(Total.score&gt;0.9) }else if (args[1] == &quot;positive&quot;) { metDNA_annotation_filter_temp &lt;- metDNA_annotation %&gt;% dplyr::filter(Total.score&gt;0.9) } ## then unique the compound.name from the max score metDNA_annotation_filter &lt;- metDNA_annotation_filter_temp %&gt;% as.data.frame() %&gt;% dplyr::arrange(desc(Total.score)) %&gt;% dplyr::distinct(Compound.name,.keep_all = TRUE) %&gt;% dplyr::filter(!Compound.name==&quot;NA&quot;) %&gt;% dplyr::select(c(&quot;Compound.name&quot;,&quot;name&quot;)) write.table(metDNA_annotation_filter,paste0(&quot;temp/&quot;,args[1],&quot;_MRN.annotation.filter.txt&quot;),quote=F,sep=&quot;\\t&quot;,row.names=F) metDNA_peak_data_filter &lt;- peak_data %&gt;% dplyr::filter(!name %in% metID_data$name) %&gt;% dplyr::filter(name %in% metDNA_annotation_filter$name) %&gt;% dplyr::select(c(&quot;name&quot;,&quot;mz&quot;,&quot;rt&quot;,intersect_sample)) metDNA_data &lt;- merge(metDNA_annotation_filter,metDNA_peak_data_filter,by=&quot;name&quot;,all.y=T) write.table(metDNA_data,paste0(&quot;temp/&quot;,args[1],&quot;_metDNA_peak_table_filter.txt&quot;),quote=F,sep=&quot;\\t&quot;,row.names=F) #把metDNA名称转化为refmet名称 metDNA_data &lt;- data.table::fread(paste0(&quot;temp/&quot;,args[1],&quot;_metDNA_peak_table_filter.txt&quot;)) %&gt;% as.data.frame() metabolites_name &lt;- metDNA_data$Compound.name metDNA_name2refmet &lt;- name2refmet(metabolites_name) metDNA_name2refmet_result &lt;- merge(metDNA_name2refmet,metDNA_data,by.x=&quot;Input name&quot;,by.y=&quot;Compound.name&quot;,all.y=T) write.table(metDNA_name2refmet_result,paste0(&quot;temp/&quot;,args[1],&quot;_metDNA_name2refmet.txt&quot;),quote=F,row.names=F,sep=&quot;\\t&quot;) ## 名字换了之后又出现了一些重复的代谢物，需要把这些代谢物uniq AB_name2refmet_result &lt;- data.table::fread(paste0(&quot;temp/&quot;,args[1],&quot;_AB_imputed_name2refmet.txt&quot;)) %&gt;% as.data.frame() AB_name2refmet_result_uniq &lt;- uniq_refmet(AB_name2refmet_result) write.table(AB_name2refmet_result_uniq,paste0(&quot;temp/&quot;,args[1],&quot;_AB_imputed_name2refmet_uniq.txt&quot;),quote=F,sep=&quot;\\t&quot;,row.names=F) metID_name2refmet_result &lt;- data.table::fread(paste0(&quot;temp/&quot;,args[1],&quot;_metID_name2refmet.txt&quot;)) %&gt;% as.data.frame() metID_name2refmet_result_uniq &lt;- uniq_refmet(metID_name2refmet_result) write.table(metID_name2refmet_result_uniq,paste0(&quot;temp/&quot;,args[1],&quot;_metID_name2refmet_uniq.txt&quot;),quote=F,sep=&quot;\\t&quot;,row.names=F) metDNA_name2refmet_result &lt;- data.table::fread(paste0(&quot;temp/&quot;,args[1],&quot;_metDNA_name2refmet.txt&quot;)) %&gt;% as.data.frame() metDNA_name2refmet_result_uniq &lt;- uniq_refmet(metDNA_name2refmet_result) write.table(metDNA_name2refmet_result_uniq,paste0(&quot;temp/&quot;,args[1],&quot;_metDNA_name2refmet_uniq.txt&quot;),quote=F,sep=&quot;\\t&quot;,row.names=F) #合并ab，metid和metdna结果 AB_name2refmet_result_uniq &lt;- data.table::fread(paste0(&quot;temp/&quot;,args[1],&quot;_AB_imputed_name2refmet_uniq.txt&quot;)) %&gt;% as.data.frame() %&gt;% mutate(level=1) metID_name2refmet_result_uniq &lt;- data.table::fread(paste0(&quot;temp/&quot;,args[1],&quot;_metID_name2refmet_uniq.txt&quot;)) %&gt;% as.data.frame() %&gt;% filter(!refmet_name %in% AB_name2refmet_result_uniq$refmet_name) %&gt;% mutate(level=2) metDNA_name2refmet_result_uniq &lt;- data.table::fread(paste0(&quot;temp/&quot;,args[1],&quot;_metDNA_name2refmet_uniq.txt&quot;)) %&gt;% as.data.frame() %&gt;% filter(!refmet_name %in% c(AB_name2refmet_result_uniq$refmet_name,metID_name2refmet_result_uniq$refmet_name)) %&gt;% mutate(level=4) uniq_name &lt;- Reduce(intersect,list(names(AB_name2refmet_result_uniq),names(metID_name2refmet_result_uniq),names(metDNA_name2refmet_result_uniq))) AB_name2refmet_result_uniq &lt;- AB_name2refmet_result_uniq %&gt;% dplyr::select(uniq_name) metID_name2refmet_result_uniq &lt;- metID_name2refmet_result_uniq %&gt;% dplyr::select(uniq_name) metDNA_name2refmet_result_uniq &lt;- metDNA_name2refmet_result_uniq %&gt;% dplyr::select(uniq_name) all &lt;- rbind(AB_name2refmet_result_uniq,metID_name2refmet_result_uniq,metDNA_name2refmet_result_uniq) write.table(all,paste0(&quot;temp/&quot;,args[1],&quot;_all_result.txt&quot;),quote=F,row.names = F,sep=&quot;\\t&quot;) all &lt;- data.table::fread(paste0(&quot;temp/&quot;,args[1],&quot;_all_result.txt&quot;)) %&gt;% as.data.frame() level_result &lt;- all %&gt;% dplyr::select(c(&quot;refmet_name&quot;,&quot;level&quot;,&quot;formula&quot;,&quot;exactmass&quot;,&quot;super_class&quot;,&quot;main_class&quot;,&quot;sub_class&quot;,&quot;class_index&quot;)) write.table(level_result,paste0(&quot;temp/&quot;,args[1],&quot;_level_anno.txt&quot;),quote=F,row.names = F,sep=&quot;\\t&quot;) #把数据调成serrf所需要的样子 all_for_serrf &lt;- all %&gt;% dplyr::select(-c(&quot;Input name&quot;,&quot;formula&quot;,&quot;exactmass&quot;,&quot;super_class&quot;,&quot;main_class&quot;,&quot;sub_class&quot;,&quot;class_index&quot;)) names(all_for_serrf)[1] &lt;- &quot;label&quot; qc_intersect_filter &lt;- qc_intersect %&gt;% dplyr::filter(sample_id %in% intersect_sample) %&gt;% dplyr::arrange(time) qc_intersect_filter$time &lt;- seq(1,nrow(qc_intersect_filter)) all_for_serrf_filter &lt;- all_for_serrf %&gt;% dplyr::select(c(&quot;label&quot;,qc_intersect_filter$sample_id)) batch &lt;- c(&quot;batch&quot;,qc_intersect_filter$batch) type &lt;- c(&quot;type&quot;,qc_intersect_filter$type) time &lt;- c(&quot;time&quot;,qc_intersect_filter$time) label &lt;- c(colnames(all_for_serrf_filter)) all_result_temp &lt;- rbind(batch,type,time,label,all_for_serrf_filter) number &lt;- c(&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;No&quot;,c(1:(nrow(all_for_serrf_filter)))) serrf_data &lt;- cbind(number,all_result_temp) write.table(serrf_data,paste0(args[1],&quot;_for_serrf.txt&quot;),quote=F,row.names=F,col.names=F,sep=&quot;\\t&quot;) "],["serum-combine-data-from-positive-and-negative.html", "Chapter 6 serum: combine data from positive and negative", " Chapter 6 serum: combine data from positive and negative Rscript 51-combine_positive_negative_raw.R result/v0224_serum_2020/ Rscript 51-combine_positive_negative_raw.R result/v0224_serum_2021/ args=commandArgs(T) source(&quot;/Users/guituantuan/Desktop/projects/script/correction.R&quot;) library(dplyr) library(data.table) setwd(args[1]) ##read the negative negative &lt;- data.table::fread(&quot;negative_for_serrf.txt&quot;) %&gt;% as.data.frame() ####negative level info negative_level_raw &lt;- data.table::fread(&quot;temp/negative_level_anno.txt&quot;) %&gt;% as.data.frame() ##read the positive positive &lt;- data.table::fread(&quot;positive_for_serrf.txt&quot;) %&gt;% as.data.frame() ####positive level info positive_level_raw &lt;- data.table::fread(&quot;temp/positive_level_anno.txt&quot;) %&gt;% as.data.frame() negative_level &lt;- negative_level_raw %&gt;% dplyr::select(c(&quot;refmet_name&quot;,&quot;level&quot;)) names(negative_level)[1] &lt;- &quot;label&quot; negative_qc &lt;- negative[-c(1,2,3,4),c(2,which(negative[2,]==&quot;QC&quot;))] negative_sample &lt;- negative[-c(1,2,3,4),c(2,which(negative[2,]==&quot;sample&quot;))] negative_rsd &lt;- apply(negative_qc[,-1],1,function(x){sd(as.numeric(x),na.rm=T)/mean(as.numeric(x),na.rm=T)}) negative_sample_mean &lt;- apply(negative_sample[,-1],1,function(x){mean(as.numeric(x),na.rm=T)}) negative$V1 &lt;- c(&quot;NA&quot;,&quot;NA&quot;,&quot;NA&quot;,&quot;rsd&quot;,negative_rsd) negative$sample_mean &lt;- c(&quot;NA&quot;,&quot;NA&quot;,&quot;NA&quot;,&quot;sample_mean&quot;,negative_sample_mean) colnames(negative) &lt;- as.character(negative[4,]) negative_merge &lt;- merge(negative,negative_level,by=&quot;label&quot;,all.x=T,sort=F) %&gt;% dplyr::arrange(match(label,negative$label)) %&gt;% dplyr::filter(!label %in% c(&quot;batch&quot;,&quot;type&quot;,&quot;time&quot;,&quot;label&quot;)) negative_filter &lt;- negative_merge #negative_filter &lt;- negative_merge %&gt;% # dplyr::filter(rsd&lt;0.3) positive_level &lt;- positive_level_raw %&gt;% dplyr::select(c(&quot;refmet_name&quot;,&quot;level&quot;)) names(positive_level)[1] &lt;- &quot;label&quot; positive_qc &lt;- positive[-c(1,2,3,4),c(2,which(positive[2,]==&quot;QC&quot;))] positive_sample &lt;- positive[-c(1,2,3,4),c(2,which(positive[2,]==&quot;sample&quot;))] positive_rsd &lt;- apply(positive_qc[,-1],1,function(x){sd(as.numeric(x),na.rm=T)/mean(as.numeric(x),na.rm=T)}) positive_sample_mean &lt;- apply(positive_sample[,-1],1,function(x){mean(as.numeric(x),na.rm=T)}) positive$V1 &lt;- c(&quot;NA&quot;,&quot;NA&quot;,&quot;NA&quot;,&quot;rsd&quot;,positive_rsd) positive$sample_mean &lt;- c(&quot;NA&quot;,&quot;NA&quot;,&quot;NA&quot;,&quot;sample_mean&quot;,positive_sample_mean) colnames(positive) &lt;- as.character(positive[4,]) positive_merge &lt;- merge(positive,positive_level,by=&quot;label&quot;,all.x=T,sort=F) %&gt;% dplyr::arrange(match(label,positive$label)) %&gt;% dplyr::filter(!label %in% c(&quot;batch&quot;,&quot;type&quot;,&quot;time&quot;,&quot;label&quot;)) #positive_filter &lt;- positive_merge %&gt;% # dplyr::filter(rsd&lt;0.3) positive_filter &lt;- positive_merge ##get the positive and negative overlap sample positive_negative_intersect_id &lt;- intersect(colnames(positive_filter),colnames(negative_filter)) positive_intersect &lt;- positive_filter %&gt;% dplyr::select(all_of(positive_negative_intersect_id)) positive_intersect &lt;- cbind(type=&quot;positive&quot;,positive_intersect) negative_intersect &lt;- negative_filter %&gt;% dplyr::select(all_of(positive_negative_intersect_id)) negative_intersect &lt;- cbind(type=&quot;negative&quot;,negative_intersect) positive_negative_combine &lt;- rbind(positive_intersect,negative_intersect) %&gt;% dplyr::select(!&quot;rsd&quot;) ##unique the metabolite and get the max positive_negative_combine_temp &lt;- as.data.frame(apply(positive_negative_combine[,-c(1,2)],2,as.numeric)) positive_negative_combine_temp$label &lt;- positive_negative_combine$label positive_negative_combine_temp$type &lt;- positive_negative_combine$type ####留下小level的代谢物及相同level留下sample值最大的模式数据 positive_negative_combine_uniq &lt;- positive_negative_combine_temp %&gt;% dplyr::arrange(desc(sample_mean)) %&gt;% dplyr::arrange(level) %&gt;% dplyr::distinct(label,.keep_all=TRUE)%&gt;% dplyr::select(!&quot;sample_mean&quot;) all_level &lt;- rbind(positive_level_raw,negative_level_raw) %&gt;% dplyr::select(-&quot;level&quot;) %&gt;% unique() all_result &lt;- merge(all_level,positive_negative_combine_uniq,by.y=&quot;label&quot;,by.x=&quot;refmet_name&quot;,all.y=T) all_result &lt;- all_result %&gt;% dplyr::select(c(&quot;type&quot;,&quot;level&quot;,names(all_result))) %&gt;% dplyr::arrange(level) write.table(all_result,&quot;3.positive_negative_combine_uniq_raw.txt&quot;,sep=&quot;\\t&quot;,quote=F,row.names=F,col.names=T) "],["serum-batch-effection-of-data-from-serum-2020-and-serum-2021-using-sva.html", "Chapter 7 serum: batch effection of data from serum 2020 and serum 2021 using sva", " Chapter 7 serum: batch effection of data from serum 2020 and serum 2021 using sva Rscript 55-combine_2020_2021_raw_sva_v0222.R result/v0224_serum_2020/ result/v0224_serum_2021/ result/v0224_serum_combine_2020_2021/ args=commandArgs(T) library(dplyr) serum_2020 &lt;- data.table::fread(paste0(args[1],&quot;/3.positive_negative_combine_uniq_raw.txt&quot;)) %&gt;% as.data.frame() serum_2021 &lt;- data.table::fread(paste0(args[2],&quot;/3.positive_negative_combine_uniq_raw.txt&quot;)) %&gt;% as.data.frame() ###取出2020和2021 overlap的代谢物 metabolites_2020_2021_overlap &lt;- intersect(serum_2020$refmet_name,serum_2021$refmet_name) ###筛选出2020的代谢物 serum_2020_filter &lt;- serum_2020 %&gt;% dplyr::filter(refmet_name %in% metabolites_2020_2021_overlap) %&gt;% dplyr::select(-c(&quot;type&quot;,&quot;level&quot;,&quot;formula&quot;,&quot;exactmass&quot;,&quot;super_class&quot;,&quot;main_class&quot;,&quot;sub_class&quot;,&quot;class_index&quot;)) ###筛选出2021的代谢物 serum_2021_filter &lt;- serum_2021 %&gt;% dplyr::filter(refmet_name %in% metabolites_2020_2021_overlap) %&gt;% dplyr::select(-c(&quot;type&quot;,&quot;level&quot;,&quot;formula&quot;,&quot;exactmass&quot;,&quot;super_class&quot;,&quot;main_class&quot;,&quot;sub_class&quot;,&quot;class_index&quot;)) ###对2020的样本名称前加y2020_,对2021的样本名称前加y2021_ names(serum_2020_filter) &lt;- paste0(&quot;y2020_&quot;,names(serum_2020_filter)) names(serum_2021_filter) &lt;- paste0(&quot;y2021_&quot;,names(serum_2021_filter)) names(serum_2020_filter)[1] &lt;- &quot;refmet_name&quot; names(serum_2021_filter)[1] &lt;- &quot;refmet_name&quot; clinical_2020 &lt;- data.table::fread(paste0(args[1],&quot;/positive_qc_intersect.txt&quot;)) %&gt;% as.data.frame() %&gt;% dplyr::mutate(sample_id=paste0(&quot;y2020_&quot;,sample_id)) %&gt;% dplyr::arrange(time) %&gt;% dplyr::filter(sample_id %in% names(serum_2020_filter)) %&gt;% dplyr::select(c(&quot;sample_id&quot;,&quot;batch&quot;,&quot;type&quot;,&quot;group&quot;)) clinical_2021 &lt;- data.table::fread(paste0(args[2],&quot;/positive_qc_intersect.txt&quot;)) %&gt;% as.data.frame() %&gt;% dplyr::mutate(sample_id=paste0(&quot;y2021_&quot;,sample_id)) %&gt;% dplyr::arrange(time) %&gt;% dplyr::filter(sample_id %in% names(serum_2021_filter)) %&gt;% dplyr::mutate(batch=ifelse(batch==&quot;F&quot;,&quot;J&quot;, ifelse(batch==&quot;E&quot;,&quot;I&quot;, ifelse(batch==&quot;D&quot;,&quot;H&quot;, ifelse(batch==&quot;C&quot;,&quot;G&quot;, ifelse(batch==&quot;B&quot;,&quot;F&quot;, ifelse(batch==&quot;A&quot;,&quot;E&quot;,NA))))))) %&gt;% dplyr::mutate(type=ifelse(type1==&quot;QC2&quot;,&quot;QC&quot;,&quot;sample&quot;)) %&gt;% dplyr::select(c(&quot;sample_id&quot;,&quot;batch&quot;,&quot;type&quot;,&quot;group&quot;)) clinical_all &lt;- rbind(clinical_2020,clinical_2021) %&gt;% dplyr::mutate(group=ifelse(is.na(group),&quot;QC&quot;,group)) clinical_all$time &lt;- seq(1,nrow(clinical_all)) ###合并2020和2021数据 all_data &lt;- merge(serum_2020_filter,serum_2021_filter,by=&quot;refmet_name&quot;) %&gt;% dplyr::select(c(&quot;refmet_name&quot;,clinical_all$sample_id)) %&gt;% tibble::column_to_rownames(&quot;refmet_name&quot;) clinical_all$group &lt;- as.factor(clinical_all$group) model &lt;- model.matrix(~group, data = clinical_all) combat_edata &lt;- sva::ComBat(dat = as.matrix(log2(all_data)), batch = clinical_all$batch,mod = model) dat &lt;- 2** combat_edata clinical_all1 &lt;- clinical_all %&gt;% dplyr::select(c(&quot;batch&quot;,&quot;type&quot;,&quot;time&quot;,&quot;sample_id&quot;)) %&gt;% dplyr::rename(&quot;label&quot;=&quot;sample_id&quot;) %&gt;% t() all_dat &lt;- rbind(clinical_all1,dat) %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;a&quot;) v1 &lt;- c(&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;No&quot;,seq(1,nrow(all_dat)-4)) all_dat_need &lt;- cbind(v1=v1,all_dat) write.table(all_dat_need,paste0(args[3],&quot;/serum_raw_sva_for_serrf.txt&quot;),quote=F,sep=&quot;\\t&quot;,row.names = F,col.names=F) "],["cell-ab-data-process.html", "Chapter 8 Cell: AB data process 8.1 filter the metabolites (too much NA) and impute the NA 8.2 transform the metabolite name to refmet name 8.3 filter the metabolite based on the library hit 8.4 filter metabolite by manual check", " Chapter 8 Cell: AB data process 8.1 filter the metabolites (too much NA) and impute the NA 8.1.1 positive library(dplyr) library(MNet) dat &lt;- data.table::fread(&quot;raw_data/matric table-ALL-allsamples-POS.txt&quot;,skip=1) %&gt;% dplyr::filter(!`Original Filename` %in% &quot;Sample Type&quot;) %&gt;% tibble::column_to_rownames(&quot;Original Filename&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;Original Filename&quot;) %&gt;% dplyr::mutate(`Original Filename`=gsub(&quot;0911\\\\\\\\pos\\\\\\\\QC&quot;,&quot;0911\\\\\\\\pos\\\\\\\\2QC&quot;,`Original Filename`)) %&gt;% tidyr::separate(`Original Filename`,sep=&quot;pos&quot;,c(NA,&quot;n&quot;)) %&gt;% tidyr::separate(n,sep=&quot;\\\\\\\\&quot;,c(NA,&quot;n&quot;)) %&gt;% tidyr::separate(n,sep=&quot;[.]&quot;,&quot;Sample Name&quot;) %&gt;% dplyr::distinct(`Sample Name`,.keep_all = T) %&gt;% tibble::remove_rownames() %&gt;% tibble::column_to_rownames(&quot;Sample Name&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;label&quot;) %&gt;% unique() %&gt;% dplyr::mutate(label=stringr::str_to_title(label)) %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::mutate_if(is.character,as.numeric) n &lt;- rowSums(is.na(dat)) dat$n &lt;- n dat_filter &lt;- dat %&gt;% dplyr::filter(n&lt;32.6) %&gt;% dplyr::select(-n) dat_impute &lt;- meta_impute(dat_filter,method=&quot;min&quot;) %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;label&quot;) write.table(dat_impute,&quot;result/1.AB_positive_impute.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 8.1.2 negative library(dplyr) library(MNet) dat &lt;- data.table::fread(&quot;raw_data/matric table-ALL-allsamples-NEG.txt&quot;,skip=1) %&gt;% dplyr::filter(!`Original Filename` %in% &quot;Sample Type&quot;) %&gt;% unique() %&gt;% tibble::column_to_rownames(&quot;Original Filename&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;Original Filename&quot;) %&gt;% # dplyr::mutate(`Original Filename`=gsub(&quot;0911\\\\\\\\pos\\\\\\\\QC&quot;,&quot;0911\\\\\\\\pos\\\\\\\\2QC&quot;,`Original Filename`)) %&gt;% tidyr::separate(`Original Filename`,sep=&quot;neg&quot;,c(NA,&quot;n&quot;)) %&gt;% tidyr::separate(n,sep=&quot;\\\\\\\\&quot;,c(NA,&quot;n&quot;)) %&gt;% tidyr::separate(n,sep=&quot;[.]&quot;,&quot;Sample Name&quot;) %&gt;% dplyr::distinct(`Sample Name`,.keep_all = T) %&gt;% tibble::remove_rownames() %&gt;% tibble::column_to_rownames(&quot;Sample Name&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;label&quot;) %&gt;% dplyr::mutate(label=stringr::str_to_title(label)) %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::mutate_if(is.character,as.numeric) n &lt;- rowSums(is.na(dat)) dat$n &lt;- n dat_filter &lt;- dat %&gt;% dplyr::filter(n&lt; 0.2*ncol(dat)) %&gt;% dplyr::select(-n) dat_impute &lt;- meta_impute(dat_filter,method=&quot;min&quot;) %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;label&quot;) write.table(dat_impute,&quot;result/1.AB_negative_impute.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 8.2 transform the metabolite name to refmet name 8.2.1 positive library(dplyr) dat &lt;- data.table::fread(&quot;result/1.AB_positive_impute.txt&quot;) %&gt;% as.data.frame() dat_name2refmet &lt;- MNet::name2refmet(dat$label) result &lt;- dat %&gt;% dplyr::left_join(dat_name2refmet,by=c(&quot;label&quot;=&quot;Input name&quot;)) %&gt;% dplyr::select(`label`,refmet_name,formula,super_class,main_class,sub_class,everything()) write.table(result,&quot;result/1.AB_positive_name2refmet.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 8.2.2 negative library(dplyr) dat &lt;- data.table::fread(&quot;result/1.AB_negative_impute.txt&quot;) %&gt;% as.data.frame() dat_name2refmet &lt;- MNet::name2refmet(dat$label) result &lt;- dat %&gt;% dplyr::left_join(dat_name2refmet,by=c(&quot;label&quot;=&quot;Input name&quot;)) %&gt;% dplyr::select(`label`,refmet_name,formula,super_class,main_class,sub_class,everything()) write.table(result,&quot;result/1.AB_negative_name2refmet.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 8.3 filter the metabolite based on the library hit 8.3.1 positive library(dplyr) dat_library &lt;- data.table::fread(&quot;raw_data/ALL-allsamples-pos.txt&quot;) %&gt;% dplyr::select(`Component Name`,`Library Hit`) %&gt;% dplyr::mutate(`Component Name`=stringr::str_to_title(`Component Name`)) %&gt;% unique() %&gt;% dplyr::group_by(`Component Name`) %&gt;% dplyr::summarise(paste(`Library Hit`,collapse = &quot;;&quot;)) names(dat_library)[2]=&quot;Library Hit&quot; result &lt;- data.table::fread(&quot;result/1.AB_positive_name2refmet.txt&quot;) %&gt;% dplyr::left_join(dat_library,by=c(&quot;label&quot;=&quot;Component Name&quot;)) %&gt;% dplyr::select(label,`Library Hit`,everything()) write.table(result,&quot;result/1.AB_positive_name2refmet_library.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 8.3.2 negative library(dplyr) dat_library &lt;- data.table::fread(&quot;raw_data/ALL-allsamples-neg-9018.txt&quot;) %&gt;% dplyr::select(`Component Name`,`Library Hit`) %&gt;% dplyr::mutate(`Component Name`=stringr::str_to_title(`Component Name`)) %&gt;% unique() %&gt;% dplyr::group_by(`Component Name`) %&gt;% dplyr::summarise(paste(`Library Hit`,collapse = &quot;;&quot;)) names(dat_library)[2]=&quot;Library Hit&quot; result &lt;- data.table::fread(&quot;result/1.AB_negative_name2refmet.txt&quot;) %&gt;% dplyr::left_join(dat_library,by=c(&quot;label&quot;=&quot;Component Name&quot;)) %&gt;% dplyr::select(label,`Library Hit`,everything()) write.table(result,&quot;result/1.AB_negative_name2refmet_library.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 8.4 filter metabolite by manual check 接下来人工对一些相同的物质进行del，其中写在了filter列，最终文件名为result/1.AB_positive_name2refmet_library_result.txt和result/1.AB_negative_name2refmet_library_result.txt "],["cell-annotation.html", "Chapter 9 Cell: annotation 9.1 metID 9.2 metDNA 9.3 combine the data from metID and metDNA 9.4 transform metabolite name to refmet name", " Chapter 9 Cell: annotation 9.1 metID 服务器上用metID对各个QC样本代谢物做鉴定，鉴定后对鉴定的代谢物做筛选 9.1.1 positive library(dplyr) file=list.files(&quot;positive/&quot;) result &lt;- data.table::fread(paste0(&quot;positive/&quot;,file[1])) names(result)[2] &lt;- file[1] for (i in file[2:20]) { dat &lt;- data.table::fread(paste0(&quot;positive/&quot;,i)) names(dat)[2] &lt;- i result &lt;- result %&gt;% dplyr::full_join(dat,by=&quot;name&quot;) } result$n &lt;- rowSums(is.na(result)) result_filter &lt;- result %&gt;% dplyr::filter(n&lt;19) %&gt;% dplyr::select(-n) n &lt;- as.numeric() name1 &lt;- as.character() for (i in 1:nrow(result_filter)) { n[i] &lt;- length(as.character(na.omit(unique(as.character(result_filter[i,2:ncol(result_filter)]))))) name1[i] &lt;- paste(as.character(na.omit(unique(as.character(result_filter[i,2:ncol(result_filter)])))),collapse=&quot;;&quot;) } result_filter$n &lt;- n result_filter$name1 &lt;- name1 result_filter1 &lt;- result_filter %&gt;% dplyr::mutate(result=ifelse(n==1,name1,NA)) %&gt;% dplyr::mutate(result1=ifelse(n!=1,name1,NA)) write.table(result_filter1,&quot;metID/positive_metID_v0920.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 9.1.2 negative library(dplyr) file=list.files(&quot;negative/&quot;) result &lt;- data.table::fread(paste0(&quot;negative/&quot;,file[1])) names(result)[2] &lt;- file[1] for (i in file[2:21]) { dat &lt;- data.table::fread(paste0(&quot;negative/&quot;,i)) names(dat)[2] &lt;- i result &lt;- result %&gt;% dplyr::full_join(dat,by=&quot;name&quot;) } result$n &lt;- rowSums(is.na(result)) result_filter &lt;- result %&gt;% dplyr::filter(n&lt;19) %&gt;% dplyr::select(-n) n &lt;- as.numeric() name1 &lt;- as.character() for (i in 1:nrow(result_filter)) { n[i] &lt;- length(as.character(na.omit(unique(as.character(result_filter[i,2:ncol(result_filter)]))))) name1[i] &lt;- paste(as.character(na.omit(unique(as.character(result_filter[i,2:ncol(result_filter)])))),collapse=&quot;;&quot;) } result_filter$n &lt;- n result_filter$name1 &lt;- name1 result_filter1 &lt;- result_filter %&gt;% dplyr::mutate(result=ifelse(n==1,name1,NA)) %&gt;% dplyr::mutate(result1=ifelse(n!=1,name1,NA)) write.table(result_filter1,&quot;metID/negative_metID_v0920.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 9.2 metDNA 线上用metDNA进行代谢物做鉴定，接着对鉴定到的代谢物做筛选 9.2.1 positive library(dplyr) metDNA_annotation &lt;- read.csv(&quot;metDNA/positive_MRN.annotation.result.csv&quot;,header=T) %&gt;% dplyr::filter(!is.na(compound.name)) %&gt;% as.data.frame() %&gt;% tidyr::separate(score,sep=&quot;;&quot;,&quot;Total.score&quot;) %&gt;% ### if the compound.name have more than 1 name, then preserve the first one tidyr::separate(adduct,sep=&quot;;&quot;,&quot;new_adduct&quot;) %&gt;% tidyr::separate(compound.name,sep=&quot;;&quot;,&quot;Compound.name&quot;) #对metDNA对应到peak上 ### if the compound.name have more than 1 name, then preserve the first one metDNA_annotation_filter_temp &lt;- metDNA_annotation %&gt;% dplyr::filter(Total.score&gt;0.7) %&gt;% dplyr::filter(new_adduct %in% c(&quot;M+H&quot;,&quot;M+NH4&quot;)) ## then unique the compound.name from the max score metDNA_annotation_filter &lt;- metDNA_annotation_filter_temp %&gt;% as.data.frame() %&gt;% dplyr::arrange(desc(Total.score)) %&gt;% dplyr::distinct(Compound.name,.keep_all = TRUE) %&gt;% dplyr::filter(!Compound.name==&quot;NA&quot;) %&gt;% dplyr::select(`Compound.name`,name) write.table(metDNA_annotation_filter,&quot;metDNA/positive_MRN.annotation.filter.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) 9.2.2 negative library(dplyr) metDNA_annotation &lt;- read.csv(&quot;metDNA/negative_MRN.annotation.result.csv&quot;,header=T) %&gt;% dplyr::filter(!is.na(compound.name)) %&gt;% as.data.frame() %&gt;% tidyr::separate(score,sep=&quot;;&quot;,&quot;Total.score&quot;) %&gt;% ### if the compound.name have more than 1 name, then preserve the first one tidyr::separate(adduct,sep=&quot;;&quot;,&quot;new_adduct&quot;) %&gt;% tidyr::separate(compound.name,sep=&quot;;&quot;,&quot;Compound.name&quot;) #对metDNA对应到peak上 ### if the compound.name have more than 1 name, then preserve the first one metDNA_annotation_filter_temp &lt;- metDNA_annotation %&gt;% dplyr::filter(Total.score&gt;0.7) %&gt;% dplyr::filter(new_adduct==&quot;M-H&quot;) ## then unique the compound.name from the max score metDNA_annotation_filter &lt;- metDNA_annotation_filter_temp %&gt;% as.data.frame() %&gt;% dplyr::arrange(desc(Total.score)) %&gt;% dplyr::distinct(Compound.name,.keep_all = TRUE) %&gt;% dplyr::filter(!Compound.name==&quot;NA&quot;) %&gt;% dplyr::select(`Compound.name`,name) write.table(metDNA_annotation_filter,&quot;metDNA/negative_MRN.annotation.filter.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) 9.3 combine the data from metID and metDNA 9.3.1 positive library(dplyr) library(ggplot2) positive_metID &lt;- data.table::fread(&quot;metID/positive_metID_v0920.txt&quot;) %&gt;% as.data.frame() %&gt;% # dplyr::filter(!is.na(result_name)) %&gt;% dplyr::filter(result_name != &quot;&quot;) %&gt;% # dplyr::filter(!grepl(&quot;Tentative&quot;,result_high)) %&gt;% # dplyr::filter(!grepl(&quot;Glutathione&quot;,result)) %&gt;% dplyr::select(name,result_name) %&gt;% dplyr::rename(&quot;Compound.name&quot;=&quot;result_name&quot;) %&gt;% dplyr::mutate(level=&quot;metID&quot;) positive_metDNA &lt;- data.table::fread(&quot;metDNA/positive_MRN.annotation.filter.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(level=&quot;metDNA&quot;) result &lt;- rbind(positive_metID,positive_metDNA) %&gt;% dplyr::arrange(rev(level)) %&gt;% dplyr::distinct(name,.keep_all = TRUE) dat &lt;- data.table::fread(&quot;raw_data/XCMS-Report-SingleClass_positive.csv&quot;) %&gt;% as.data.frame() %&gt;% dplyr::inner_join(result,by=&quot;name&quot;) %&gt;% as.data.frame() %&gt;% rowwise() %&gt;% dplyr::mutate(sum=sum(`2QC10-Sample167`,`2QC11-Sample177`)) %&gt;% dplyr::arrange(desc(sum)) %&gt;% dplyr::select(-sum) %&gt;% dplyr::distinct(`Compound.name`,.keep_all = TRUE) %&gt;% dplyr::select(name,mz,rt,Compound.name,level,everything()) write.table(dat,&quot;result/2.positive_data_xcms_filter.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 9.3.2 negative library(dplyr) library(ggplot2) negative_metID &lt;- data.table::fread(&quot;metID/negative_metID_v0920.txt&quot;) %&gt;% as.data.frame() %&gt;% # dplyr::filter(!is.na(result_name)) %&gt;% dplyr::filter(result_name != &quot;&quot;) %&gt;% # dplyr::filter(!grepl(&quot;Tentative&quot;,result_high)) %&gt;% # dplyr::filter(!grepl(&quot;Glutathione&quot;,result)) %&gt;% dplyr::select(name,result_name) %&gt;% dplyr::rename(&quot;Compound.name&quot;=&quot;result_name&quot;) %&gt;% dplyr::mutate(level=&quot;metID&quot;) negative_metDNA &lt;- data.table::fread(&quot;metDNA/negative_MRN.annotation.filter.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(level=&quot;metDNA&quot;) result &lt;- rbind(negative_metID,negative_metDNA) %&gt;% dplyr::arrange(rev(level)) %&gt;% dplyr::distinct(name,.keep_all = TRUE) dat &lt;- data.table::fread(&quot;raw_data/XCMS-Report-SingleClass_negative.csv&quot;) %&gt;% as.data.frame() %&gt;% dplyr::inner_join(result,by=&quot;name&quot;) %&gt;% as.data.frame() %&gt;% rowwise() %&gt;% dplyr::mutate(sum=sum(`2QC10-Sample065`,`2QC11-Sample075`)) %&gt;% dplyr::arrange(desc(sum)) %&gt;% dplyr::select(-sum) %&gt;% dplyr::distinct(`Compound.name`,.keep_all = TRUE) %&gt;% dplyr::select(name,mz,rt,Compound.name,level,everything()) write.table(dat,&quot;result/2.negative_data_xcms_filter.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 9.4 transform metabolite name to refmet name 9.4.1 positive library(dplyr) dat &lt;- data.table::fread(&quot;result/2.positive_data_xcms_filter.txt&quot;) %&gt;% as.data.frame() dat_name2refmet &lt;- MNet::name2refmet(dat$Compound.name) result &lt;- dat %&gt;% dplyr::left_join(dat_name2refmet,by=c(&quot;Compound.name&quot;=&quot;Input name&quot;)) %&gt;% dplyr::select(name,mz,rt,`Compound.name`,refmet_name,formula,super_class,main_class,sub_class,everything()) %&gt;% rowwise() %&gt;% dplyr::mutate(sum=sum(`2QC10-Sample167`,`2QC11-Sample177`)) %&gt;% dplyr::arrange(desc(sum)) %&gt;% dplyr::arrange(desc(level)) %&gt;% dplyr::select(-sum) %&gt;% dplyr::distinct(refmet_name,.keep_all = T) write.table(result,&quot;result/2.positive_xcms_name2refmet.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 9.4.2 negative library(dplyr) dat &lt;- data.table::fread(&quot;result/2.negative_data_xcms_filter.txt&quot;) %&gt;% as.data.frame() dat_name2refmet &lt;- MNet::name2refmet(dat$Compound.name) result &lt;- dat %&gt;% dplyr::left_join(dat_name2refmet,by=c(&quot;Compound.name&quot;=&quot;Input name&quot;)) %&gt;% dplyr::select(name,mz,rt,`Compound.name`,refmet_name,formula,super_class,main_class,sub_class,everything()) %&gt;% rowwise() %&gt;% dplyr::mutate(sum=sum(`2QC10-Sample065`,`2QC11-Sample075`)) %&gt;% dplyr::arrange(desc(sum)) %&gt;% dplyr::arrange(desc(level)) %&gt;% dplyr::select(-sum) %&gt;% dplyr::distinct(refmet_name,.keep_all = T) write.table(result,&quot;result/2.negative_xcms_name2refmet.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) "],["cell-combine-the-data-from-ab-and-xcms.html", "Chapter 10 Cell: combine the data from AB and xcms 10.1 combine the data from AB and xcms 10.2 transform the format to serrf 10.3 RSD", " Chapter 10 Cell: combine the data from AB and xcms 10.1 combine the data from AB and xcms 10.1.1 positive 输出结果后需要人工对refmet name做修正,修正后的文件名为result/positive_all.txt library(dplyr) data_ab_positive &lt;- data.table::fread(&quot;result/1.AB_positive_name2refmet_library_result.txt&quot;) %&gt;% dplyr::filter(filter!=&quot;del&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(-`Library Hit`,-filter) %&gt;% dplyr::mutate(level=&quot;AB&quot;) %&gt;% dplyr::select(level,everything()) data_metid_positive &lt;- data.table::fread(&quot;result/2.positive_xcms_name2refmet.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(-name,-mz,-rt) %&gt;% dplyr::rename(&quot;label&quot;=&quot;Compound.name&quot;) %&gt;% dplyr::select(level,everything()) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;a&quot;) %&gt;% tidyr::separate(a,sep=&quot;-&quot;,&quot;a&quot;) %&gt;% tibble::column_to_rownames(&quot;a&quot;) %&gt;% t() %&gt;% as.data.frame() overlap_sample &lt;- intersect(names(data_ab_positive),names(data_metid_positive)) data_metid_positive_filter &lt;- data_metid_positive %&gt;% dplyr::select(overlap_sample) %&gt;% dplyr::filter(!refmet_name %in% data_ab_positive$refmet_name) data_ab_positive_filter &lt;- data_ab_positive %&gt;% dplyr::select(overlap_sample) dat &lt;- rbind(data_ab_positive_filter,data_metid_positive_filter) %&gt;% unique() write.table(dat,&quot;result/positive_all_temp.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 10.1.2 negative 输出结果后需要人工对refmet name做修正,修正后的文件名为result/negative_all.txt library(dplyr) data_ab_negative &lt;- data.table::fread(&quot;result/1.AB_negative_name2refmet_library_result.txt&quot;) %&gt;% dplyr::filter(filter!=&quot;del&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(-`Library Hit`,-filter) %&gt;% dplyr::mutate(level=&quot;AB&quot;) %&gt;% dplyr::select(level,everything()) data_metid_negative &lt;- data.table::fread(&quot;result/2.negative_xcms_name2refmet.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(-name,-mz,-rt) %&gt;% dplyr::rename(&quot;label&quot;=&quot;Compound.name&quot;) %&gt;% dplyr::select(level,everything()) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;a&quot;) %&gt;% tidyr::separate(a,sep=&quot;-&quot;,&quot;a&quot;) %&gt;% tibble::column_to_rownames(&quot;a&quot;) %&gt;% t() %&gt;% as.data.frame() overlap_sample &lt;- intersect(names(data_ab_negative),names(data_metid_negative)) data_metid_negative_filter &lt;- data_metid_negative %&gt;% dplyr::select(overlap_sample) %&gt;% dplyr::filter(!refmet_name %in% data_ab_negative$refmet_name) data_ab_negative_filter &lt;- data_ab_negative %&gt;% dplyr::select(overlap_sample) dat &lt;- rbind(data_ab_negative_filter,data_metid_negative_filter) %&gt;% unique() write.table(dat,&quot;result/negative_all_temp.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 10.2 transform the format to serrf 10.2.1 positive dat &lt;- data.table::fread(&quot;result/positive_all.txt&quot;) %&gt;% as.data.frame() %&gt;% rowwise() %&gt;% mutate(mean = mean(c_across(contains(&quot;QC&quot;)))) %&gt;% dplyr::arrange(desc(mean)) %&gt;% dplyr::arrange(match(level,c(&quot;AB&quot;,&quot;metID&quot;,&quot;metDNA&quot;))) %&gt;% dplyr::distinct(label,.keep_all = TRUE) %&gt;% dplyr::select(-mean) order_intersect &lt;- data.table::fread(&quot;raw_data/positive_qc_intersect.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(!sample_id %in% c(&quot;QC11&quot;,&quot;QC12&quot;,&quot;2QC3&quot;,&quot;2QC6&quot;,&quot;2QC9&quot;,&quot;2QC12&quot;)) %&gt;% dplyr::mutate(type=ifelse(type==&quot;QC&quot;,&quot;qc&quot;,type)) #把数据调成serrf所需要的样子 all_for_serrf &lt;- dat %&gt;% dplyr::select(-level,-label,-refmet_name_raw,-formula,-super_class,-main_class,-sub_class) %&gt;% dplyr::rename(&quot;label&quot;=&quot;refmet_name&quot;) overlap_sample &lt;- intersect(names(all_for_serrf),order_intersect$sample_id) qc_intersect_filter &lt;- order_intersect %&gt;% dplyr::filter(sample_id %in% overlap_sample) %&gt;% dplyr::arrange(time) qc_intersect_filter$time &lt;- seq(1,nrow(qc_intersect_filter)) all_for_serrf_filter &lt;- all_for_serrf %&gt;% dplyr::select(c(&quot;label&quot;,qc_intersect_filter$sample_id)) batch &lt;- c(&quot;batch&quot;,qc_intersect_filter$batch) type &lt;- c(&quot;sampleType&quot;,qc_intersect_filter$type) time &lt;- c(&quot;time&quot;,qc_intersect_filter$time) label &lt;- c(colnames(all_for_serrf_filter)) all_result_temp &lt;- rbind(batch,type,time,label,all_for_serrf_filter) number &lt;- c(&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;No&quot;,c(1:(nrow(all_for_serrf_filter)))) serrf_data &lt;- cbind(number,all_result_temp) write.table(serrf_data,&quot;result/positive_for_serrf.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 10.2.2 negative library(ggplot2) library(dplyr) dat &lt;- data.table::fread(&quot;result/negative_all.txt&quot;) %&gt;% as.data.frame() %&gt;% rowwise() %&gt;% mutate(mean = mean(c_across(contains(&quot;QC&quot;)))) %&gt;% dplyr::arrange(desc(mean)) %&gt;% dplyr::arrange(match(level,c(&quot;AB&quot;,&quot;metID&quot;,&quot;metDNA&quot;))) %&gt;% dplyr::distinct(label,.keep_all = TRUE) %&gt;% dplyr::select(-mean) order_intersect &lt;- data.table::fread(&quot;raw_data/negative_qc_intersect.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(!sample_id %in% c(&quot;2QC3&quot;,&quot;2QC6&quot;,&quot;2QC9&quot;,&quot;2QC12&quot;)) %&gt;% dplyr::mutate(type=ifelse(type==&quot;QC&quot;,&quot;qc&quot;,type)) #把数据调成serrf所需要的样子 all_for_serrf &lt;- dat %&gt;% dplyr::select(-level,-label,-refmet_name_raw,-formula,-super_class,-main_class,-sub_class) %&gt;% dplyr::rename(&quot;label&quot;=&quot;refmet_name&quot;) overlap_sample &lt;- intersect(names(all_for_serrf),order_intersect$sample_id) qc_intersect_filter &lt;- order_intersect %&gt;% dplyr::filter(sample_id %in% overlap_sample) %&gt;% dplyr::arrange(time) qc_intersect_filter$time &lt;- seq(1,nrow(qc_intersect_filter)) all_for_serrf_filter &lt;- all_for_serrf %&gt;% dplyr::select(c(&quot;label&quot;,qc_intersect_filter$sample_id)) batch &lt;- c(&quot;batch&quot;,qc_intersect_filter$batch) type &lt;- c(&quot;sampleType&quot;,qc_intersect_filter$type) time &lt;- c(&quot;time&quot;,qc_intersect_filter$time) label &lt;- c(colnames(all_for_serrf_filter)) all_result_temp &lt;- rbind(batch,type,time,label,all_for_serrf_filter) number &lt;- c(&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;No&quot;,c(1:(nrow(all_for_serrf_filter)))) serrf_data &lt;- cbind(number,all_result_temp) write.table(serrf_data,&quot;result/negative_for_serrf.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 10.3 RSD dat_positive_rsd&lt;- data.table::fread(&quot;result/SERRF/positive_QC-RSDs.csv&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(SERRF&lt;= 0.3) dat_negative_rsd &lt;- data.table::fread(&quot;result/SERRF/negative_QC-RSDs.csv&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(SERRF &lt;= 0.3) positive &lt;- data.table::fread(&quot;result/SERRF/positive_normalized_SERRF.csv&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(label %in% dat_positive_rsd$label) negative &lt;- data.table::fread(&quot;result/SERRF/negative_normalized_SERRF.csv&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(label %in% dat_negative_rsd$label) write.table(positive,&quot;result/positive_after_SERRF.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) write.table(negative,&quot;result/negative_after_SERRF.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) "],["cell-combine-positive.html", "Chapter 11 Cell: combine positive", " Chapter 11 Cell: combine positive positive_all &lt;- data.table::fread(&quot;result/positive_all.txt&quot;) %&gt;% as.data.frame() %&gt;% rowwise() %&gt;% mutate(mean = mean(c_across(contains(&quot;QC&quot;)))) %&gt;% dplyr::arrange(desc(mean)) %&gt;% dplyr::arrange(match(level,c(&quot;AB&quot;,&quot;metID&quot;,&quot;metDNA&quot;))) %&gt;% dplyr::distinct(refmet_name,.keep_all = TRUE) %&gt;% dplyr::select(-mean) %&gt;% dplyr::select(level,refmet_name) positive &lt;- data.table::fread(&quot;result/positive_after_SERRF.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(ion=&quot;positive&quot;) %&gt;% dplyr::left_join(positive_all,by=c(&quot;label&quot;=&quot;refmet_name&quot;)) %&gt;% dplyr::select(level,ion,everything()) negative_all &lt;- data.table::fread(&quot;result/negative_all.txt&quot;) %&gt;% as.data.frame() %&gt;% rowwise() %&gt;% mutate(mean = mean(c_across(contains(&quot;QC&quot;)))) %&gt;% dplyr::arrange(desc(mean)) %&gt;% dplyr::arrange(match(level,c(&quot;AB&quot;,&quot;metID&quot;,&quot;metDNA&quot;))) %&gt;% dplyr::distinct(refmet_name,.keep_all = TRUE) %&gt;% dplyr::select(-mean) %&gt;% dplyr::select(level,refmet_name) negative &lt;- data.table::fread(&quot;result/negative_after_SERRF.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(ion=&quot;negative&quot;) %&gt;% dplyr::left_join(negative_all,by=c(&quot;label&quot;=&quot;refmet_name&quot;)) %&gt;% dplyr::select(level,ion,everything()) sample_overlap &lt;- intersect(names(positive),names(negative)) dat &lt;- rbind(positive %&gt;% dplyr::select(all_of(sample_overlap)),negative %&gt;% dplyr::select(all_of(sample_overlap))) dat_filter &lt;- dat %&gt;% rowwise() %&gt;% mutate(mean = mean(c_across(contains(&quot;QC&quot;)))) %&gt;% dplyr::arrange(desc(mean)) %&gt;% dplyr::arrange(match(level,c(&quot;AB&quot;,&quot;metID&quot;,&quot;metDNA&quot;))) %&gt;% dplyr::distinct(label,.keep_all = TRUE) %&gt;% dplyr::filter(!label %in% c(&quot;3&#39;,5&#39; cyclic AMP&quot;,&quot;beta-Tyrosine&quot;)) %&gt;% dplyr::select(-mean) write.table(dat_filter,&quot;result/dat_final.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) "],["cell-metabolite-info.html", "Chapter 12 Cell: metabolite info 12.1 AB 12.2 metID 12.3 metDNA 12.4 combine the data from AB,metID and metDNA 12.5 compare with the local CAS ID", " Chapter 12 Cell: metabolite info 12.1 AB 12.1.1 positive library(dplyr) dat &lt;- data.table::fread(&quot;../raw_data/ALL-allsamples-pos.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(component=toupper(`Component Name`)) %&gt;% dplyr::mutate(library1=toupper(`Library Hit`)) %&gt;% dplyr::filter(component==library1) dat_rt &lt;- dat %&gt;% dplyr::group_by(`Component Name`,Formula) %&gt;% dplyr::summarise(rt_median=60*median(`Retention Time`)) dat_theor &lt;- dat %&gt;% dplyr::group_by(`Component Name`) %&gt;% dplyr::summarise(theor_median=median(`Precursor Mass`)) dat_found &lt;- dat %&gt;% dplyr::group_by(`Component Name`) %&gt;% dplyr::summarise(found_median=median(`Found At Mass`)) dat_ppm &lt;- dat %&gt;% dplyr::group_by(`Component Name`) %&gt;% dplyr::summarise(mass_error_median=median(`Mass Error (ppm)`)) dat_score &lt;- dat %&gt;% dplyr::group_by(`Component Name`) %&gt;% dplyr::summarise(score_median=median(`Library Score`)/100) dat_ab_positive &lt;- dat_rt %&gt;% dplyr::left_join(dat_theor,by=&quot;Component Name&quot;) %&gt;% dplyr::left_join(dat_found,by=&quot;Component Name&quot;) %&gt;% dplyr::left_join(dat_ppm,by=&quot;Component Name&quot;) %&gt;% dplyr::left_join(dat_score,by=&quot;Component Name&quot;) %&gt;% dplyr::mutate(`Component Name`=stringr::str_to_title(`Component Name`)) dat &lt;- data.table::fread(&quot;result/dat_final.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(level==&quot;AB&quot;) positive_all &lt;- data.table::fread(&quot;result/positive_all.txt&quot;) %&gt;% as.data.frame() %&gt;% rowwise() %&gt;% mutate(mean = mean(c_across(contains(&quot;QC&quot;)))) %&gt;% dplyr::arrange(desc(mean)) %&gt;% dplyr::arrange(match(level,c(&quot;AB&quot;,&quot;metID&quot;,&quot;metDNA&quot;))) %&gt;% dplyr::distinct(refmet_name,.keep_all = TRUE) %&gt;% dplyr::select(-mean) %&gt;% dplyr::filter(level==&quot;AB&quot;) %&gt;% dplyr::select(level,label,refmet_name,formula) dat_positive &lt;- dat %&gt;% dplyr::filter(ion==&quot;positive&quot;) %&gt;% dplyr::select(ion,label) %&gt;% dplyr::left_join(positive_all,by=c(&quot;label&quot;=&quot;refmet_name&quot;)) %&gt;% dplyr::rename(&quot;metabolite name&quot;=&quot;label.y&quot;) %&gt;% dplyr::rename(&quot;refmet name&quot;=&quot;label&quot;) %&gt;% dplyr::select(ion,level,`metabolite name`,`refmet name`,formula) dat_ab_positive_result &lt;- dat_positive %&gt;% dplyr::left_join(dat_ab_positive,by=c(&quot;metabolite name&quot;=&quot;Component Name&quot;)) write.table(dat_ab_positive_result,&quot;result/metabolite_info/AB_positive_metabolite.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 12.1.2 negative dat &lt;- data.table::fread(&quot;../raw_data/ALL-allsamples-neg-9018.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(component=toupper(`Component Name`)) %&gt;% dplyr::mutate(library1=toupper(`Library Hit`)) %&gt;% dplyr::filter(component==library1) dat_rt &lt;- dat %&gt;% dplyr::group_by(`Component Name`,Formula) %&gt;% dplyr::summarise(rt_median=60*median(`Retention Time`)) dat_theor &lt;- dat %&gt;% dplyr::group_by(`Component Name`) %&gt;% dplyr::summarise(theor_median=median(`Precursor Mass`)) dat_found &lt;- dat %&gt;% dplyr::group_by(`Component Name`) %&gt;% dplyr::summarise(found_median=median(`Found At Mass`)) dat_ppm &lt;- dat %&gt;% dplyr::group_by(`Component Name`) %&gt;% dplyr::summarise(mass_error_median=median(`Mass Error (ppm)`)) dat_score &lt;- dat %&gt;% dplyr::group_by(`Component Name`) %&gt;% dplyr::summarise(score_median=median(`Library Score`)/100) dat_ab_negative &lt;- dat_rt %&gt;% dplyr::left_join(dat_theor,by=&quot;Component Name&quot;) %&gt;% dplyr::left_join(dat_found,by=&quot;Component Name&quot;) %&gt;% dplyr::left_join(dat_ppm,by=&quot;Component Name&quot;) %&gt;% dplyr::left_join(dat_score,by=&quot;Component Name&quot;) %&gt;% dplyr::mutate(`Component Name`=stringr::str_to_title(`Component Name`)) dat &lt;- data.table::fread(&quot;result/dat_final.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(level==&quot;AB&quot;) negative_all &lt;- data.table::fread(&quot;result/negative_all.txt&quot;) %&gt;% as.data.frame() %&gt;% rowwise() %&gt;% mutate(mean = mean(c_across(contains(&quot;QC&quot;)))) %&gt;% dplyr::arrange(desc(mean)) %&gt;% dplyr::arrange(match(level,c(&quot;AB&quot;,&quot;metID&quot;,&quot;metDNA&quot;))) %&gt;% dplyr::distinct(refmet_name,.keep_all = TRUE) %&gt;% dplyr::select(-mean) %&gt;% dplyr::filter(level==&quot;AB&quot;) %&gt;% dplyr::select(level,label,refmet_name,formula) dat_negative &lt;- dat %&gt;% dplyr::filter(ion==&quot;negative&quot;) %&gt;% dplyr::select(ion,label) %&gt;% dplyr::left_join(negative_all,by=c(&quot;label&quot;=&quot;refmet_name&quot;)) %&gt;% dplyr::rename(&quot;metabolite name&quot;=&quot;label.y&quot;) %&gt;% dplyr::rename(&quot;refmet name&quot;=&quot;label&quot;) %&gt;% dplyr::select(ion,level,`metabolite name`,`refmet name`,formula) dat_ab_negative_result &lt;- dat_negative %&gt;% dplyr::left_join(dat_ab_negative,by=c(&quot;metabolite name&quot;=&quot;Component Name&quot;)) write.table(dat_ab_negative_result,&quot;result/metabolite_info/AB_negative_metabolite.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 12.2 metID 12.2.1 positive ### all metID information library(dplyr) metID_positive_QC &lt;- data.table::fread(&quot;metID/QC_positive_all.txt&quot;,sep=&quot;\\t&quot;,fill=TRUE,header = T) %&gt;% as.data.frame() %&gt;% dplyr::mutate(`Compound.name`=stringr::str_to_title(`Compound.name`)) %&gt;% dplyr::mutate(`Compound.name`= gsub(&quot;[(]1[)]$|[(]2[)]$|[(]3[)]$&quot;,&quot;&quot;,`Compound.name`)) %&gt;% tidyr::separate(`Compound.name`,sep=&quot;;&quot;,&quot;Compound.name&quot;) %&gt;% dplyr::mutate(`Compound.name`=ifelse(`Compound.name` %in% c(&quot;Tris(1,3-Dichlorisopropyl)Phosphate (Tdcpp)&quot;,&quot;Tdcpp&quot;),&quot;Tris(1,3-Dichlorisopropyl)Phosphate&quot;, ifelse(`Compound.name` %in% c(&quot;C16:4 Fa (Hexadecatetraenoic Acid)&quot;,&quot;C16:4 Fa&quot;),&quot;Hexadecatetraenoic Acid&quot;, ifelse(`Compound.name` %in% c(&quot;C5:0 Ac (2-Methylbutyrylcarnitine|Isovalerylcarnitine)&quot;,&quot;C5:0 Ac&quot;),&quot;2-Methylbutyrylcarnitine|Isovalerylcarnitine&quot;, ifelse(`Compound.name` %in% c(&quot;C12:0 Ac (Dodecanoylcarnitine)&quot;,&quot;C12:0 Ac&quot;),&quot;Dodecanoylcarnitine&quot;,`Compound.name`))))) positive_all &lt;- data.table::fread(&quot;result/positive_all.txt&quot;) %&gt;% as.data.frame() %&gt;% rowwise() %&gt;% mutate(mean = mean(c_across(contains(&quot;QC&quot;)))) %&gt;% dplyr::arrange(desc(mean)) %&gt;% dplyr::arrange(match(level,c(&quot;AB&quot;,&quot;metID&quot;,&quot;metDNA&quot;))) %&gt;% dplyr::distinct(refmet_name,.keep_all = TRUE) %&gt;% dplyr::select(-mean) %&gt;% dplyr::filter(level==&quot;metID&quot;) %&gt;% dplyr::select(level,label,refmet_name,formula) dat_positive &lt;- data.table::fread(&quot;result/dat_final.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(level==&quot;metID&quot;) %&gt;% dplyr::filter(ion==&quot;positive&quot;) %&gt;% dplyr::select(ion,label) %&gt;% dplyr::left_join(positive_all,by=c(&quot;label&quot;=&quot;refmet_name&quot;)) %&gt;% dplyr::rename(&quot;metabolite name&quot;=&quot;label.y&quot;) %&gt;% dplyr::rename(&quot;refmet_name&quot;=&quot;label&quot;) %&gt;% dplyr::select(ion,level,`metabolite name`,`refmet_name`,formula) metID_positive &lt;- data.table::fread(&quot;result/2.positive_data_xcms_filter.txt&quot;) %&gt;% dplyr::select(name,mz,rt,Compound.name) %&gt;% dplyr::right_join(dat_positive,by=c(&quot;Compound.name&quot;=&quot;metabolite name&quot;)) %&gt;% dplyr::select(ion,name,`Compound.name`,level,formula,`refmet_name`) %&gt;% dplyr::left_join(metID_positive_QC,by=c(&quot;Compound.name&quot;,&quot;name&quot;)) %&gt;% dplyr::arrange(desc(Total.score)) %&gt;% dplyr::distinct(name,Compound.name,.keep_all = T) %&gt;% dplyr::select(ion,name,`Compound.name`,`refmet_name`,level,mz,rt,formula,`MS2.spectra.name`,CAS.ID,HMDB.ID,KEGG.ID,Lab.ID,Total.score,Database) write.table(metID_positive,&quot;result/metabolite_info/metID_positive_metabolite.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) 12.2.2 negative ### all metID information library(dplyr) metID_negative_QC &lt;- data.table::fread(&quot;metID/QC_negative_all.txt&quot;,sep=&quot;\\t&quot;,fill=TRUE,header = T) %&gt;% as.data.frame() %&gt;% dplyr::mutate(`Compound.name`=stringr::str_to_title(`Compound.name`)) %&gt;% dplyr::mutate(`Compound.name`= gsub(&quot;[(]1[)]$|[(]2[)]$|[(]3[)]$|[(]4[)]$&quot;,&quot;&quot;,`Compound.name`)) %&gt;% tidyr::separate(`Compound.name`,sep=&quot;;&quot;,&quot;Compound.name&quot;) %&gt;% dplyr::mutate(`Compound.name`=ifelse(`Compound.name` %in% c(&quot;C17:4,Oh Fa (Hydroxy-Heptadecatetraenoic Acid)&quot;),&quot;Hydroxy-Heptadecatetraenoic Acid&quot;, ifelse(`Compound.name` %in% c(&quot;C16:0,Oh Fa&quot;,&quot;C16:0,Oh Fa(2) (Hydroxy-Hexadecanoic Acid)&quot;,&quot;C16:0,Oh Fa(1) (Hydroxy-Hexadecanoic Acid)&quot;),&quot;Hydroxy-Hexadecanoic Acid&quot;, ifelse(`Compound.name` %in% c(&quot;Thymidine-5&#39;-Monophosphate&quot;,&quot;Tmp (Thymidine 5&#39;-Monophosphate Disodium Salt Hydrate)&quot;),&quot;Tmp&quot;, ifelse(`Compound.name` %in% c(&quot;C13:0,Dc Fa&quot;,&quot;C13:0,Dc Fa(1) (Tridecanedicarboxylic Acid)&quot;),&quot;Tridecanedicarboxylic Acid&quot;,`Compound.name`))))) negative_all &lt;- data.table::fread(&quot;result/negative_all.txt&quot;) %&gt;% as.data.frame() %&gt;% rowwise() %&gt;% mutate(mean = mean(c_across(contains(&quot;QC&quot;)))) %&gt;% dplyr::arrange(desc(mean)) %&gt;% dplyr::arrange(match(level,c(&quot;AB&quot;,&quot;metID&quot;,&quot;metDNA&quot;))) %&gt;% dplyr::distinct(refmet_name,.keep_all = TRUE) %&gt;% dplyr::select(-mean) %&gt;% dplyr::filter(level==&quot;metID&quot;) %&gt;% dplyr::select(level,label,refmet_name,formula) dat_negative &lt;- data.table::fread(&quot;result/dat_final.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(level==&quot;metID&quot;) %&gt;% dplyr::filter(ion==&quot;negative&quot;) %&gt;% dplyr::select(ion,label) %&gt;% dplyr::left_join(negative_all,by=c(&quot;label&quot;=&quot;refmet_name&quot;)) %&gt;% dplyr::rename(&quot;metabolite name&quot;=&quot;label.y&quot;) %&gt;% dplyr::rename(&quot;refmet_name&quot;=&quot;label&quot;) %&gt;% dplyr::select(ion,level,`metabolite name`,`refmet_name`,formula) metID_negative &lt;- data.table::fread(&quot;result/2.negative_data_xcms_filter.txt&quot;) %&gt;% dplyr::select(name,mz,rt,Compound.name) %&gt;% dplyr::right_join(dat_negative,by=c(&quot;Compound.name&quot;=&quot;metabolite name&quot;)) %&gt;% dplyr::select(ion,name,`Compound.name`,level,formula,refmet_name) %&gt;% dplyr::left_join(metID_negative_QC,by=c(&quot;Compound.name&quot;,&quot;name&quot;)) %&gt;% dplyr::arrange(desc(Total.score)) %&gt;% dplyr::distinct(name,Compound.name,.keep_all = T) %&gt;% dplyr::select(ion,name,`Compound.name`,refmet_name,level,mz,rt,formula,`MS2.spectra.name`,CAS.ID,HMDB.ID,KEGG.ID,Lab.ID,Total.score,Database) write.table(metID_negative,&quot;result/metabolite_info/metID_negative_metabolite.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) 12.3 metDNA 12.3.1 positive ### all metDNA information library(dplyr) metDNA_info &lt;- data.table::fread(&quot;metDNA/positive_MRN.annotation.result.csv&quot;) %&gt;% dplyr::filter(!is.na(compound.name)) %&gt;% as.data.frame() %&gt;% tidyr::separate(score,sep=&quot;;&quot;,&quot;Total.score&quot;) %&gt;% ### if the compound.name have more than 1 name, then preserve the first one tidyr::separate(adduct,sep=&quot;;&quot;,&quot;new_adduct&quot;) %&gt;% tidyr::separate(compound.name,sep=&quot;;&quot;,&quot;Compound.name&quot;) %&gt;% tidyr::separate(Formula,sep=&quot;;&quot;,&quot;Formula&quot;) %&gt;% dplyr::filter(Total.score&gt;0.7) %&gt;% dplyr::filter(new_adduct %in% c(&quot;M+H&quot;,&quot;M+NH4&quot;)) %&gt;% dplyr::select(name,mz,rt,Formula,Compound.name,Total.score) positive_all &lt;- data.table::fread(&quot;result/positive_all.txt&quot;) %&gt;% as.data.frame() %&gt;% rowwise() %&gt;% mutate(mean = mean(c_across(contains(&quot;QC&quot;)))) %&gt;% dplyr::arrange(desc(mean)) %&gt;% dplyr::arrange(match(level,c(&quot;AB&quot;,&quot;metID&quot;,&quot;metDNA&quot;))) %&gt;% dplyr::distinct(refmet_name,.keep_all = TRUE) %&gt;% dplyr::select(-mean) %&gt;% dplyr::filter(level==&quot;metDNA&quot;) %&gt;% dplyr::select(level,label,refmet_name,formula) dat_positive &lt;- data.table::fread(&quot;result/dat_final.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(level==&quot;metDNA&quot;) %&gt;% dplyr::filter(ion==&quot;positive&quot;) %&gt;% dplyr::select(ion,label) %&gt;% dplyr::left_join(positive_all,by=c(&quot;label&quot;=&quot;refmet_name&quot;)) %&gt;% dplyr::rename(&quot;metabolite name&quot;=&quot;label.y&quot;) %&gt;% dplyr::rename(&quot;refmet_name&quot;=&quot;label&quot;) %&gt;% dplyr::select(ion,level,`metabolite name`,`refmet_name`,formula) metDNA_positive &lt;- data.table::fread(&quot;result/2.positive_data_xcms_filter.txt&quot;) %&gt;% dplyr::filter(level==&quot;metDNA&quot;) %&gt;% dplyr::select(name,mz,rt,Compound.name) %&gt;% dplyr::right_join(dat_positive,by=c(&quot;Compound.name&quot;=&quot;metabolite name&quot;)) %&gt;% #dplyr::filter(`Compound.name` %in% dat_positive$`metabolite name`) %&gt;% dplyr::select(ion,name,`Compound.name`,`refmet_name`,level,formula) %&gt;% dplyr::left_join(metDNA_info,by=c(&quot;name&quot;,&quot;Compound.name&quot;)) write.table(metDNA_positive,&quot;result/metabolite_info/metDNA_positive_metabolite.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) 12.3.2 negative ### all metDNA information library(dplyr) metDNA_info &lt;- data.table::fread(&quot;metDNA/negative_MRN.annotation.result.csv&quot;) %&gt;% dplyr::filter(!is.na(compound.name)) %&gt;% as.data.frame() %&gt;% tidyr::separate(score,sep=&quot;;&quot;,&quot;Total.score&quot;) %&gt;% ### if the compound.name have more than 1 name, then preserve the first one tidyr::separate(adduct,sep=&quot;;&quot;,&quot;new_adduct&quot;) %&gt;% tidyr::separate(compound.name,sep=&quot;;&quot;,&quot;Compound.name&quot;) %&gt;% tidyr::separate(Formula,sep=&quot;;&quot;,&quot;Formula&quot;) %&gt;% dplyr::filter(Total.score&gt;0.7) %&gt;% dplyr::filter(new_adduct==&quot;M-H&quot;) %&gt;% dplyr::select(name,mz,rt,Formula,Compound.name,Total.score) negative_all &lt;- data.table::fread(&quot;result/negative_all.txt&quot;) %&gt;% as.data.frame() %&gt;% rowwise() %&gt;% mutate(mean = mean(c_across(contains(&quot;QC&quot;)))) %&gt;% dplyr::arrange(desc(mean)) %&gt;% dplyr::arrange(match(level,c(&quot;AB&quot;,&quot;metID&quot;,&quot;metDNA&quot;))) %&gt;% dplyr::distinct(refmet_name,.keep_all = TRUE) %&gt;% dplyr::select(-mean) %&gt;% dplyr::filter(level==&quot;metDNA&quot;) %&gt;% dplyr::select(level,label,refmet_name,formula) dat_negative &lt;- data.table::fread(&quot;result/dat_final.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(level==&quot;metDNA&quot;) %&gt;% dplyr::filter(ion==&quot;negative&quot;) %&gt;% dplyr::select(ion,label) %&gt;% dplyr::left_join(negative_all,by=c(&quot;label&quot;=&quot;refmet_name&quot;)) %&gt;% dplyr::rename(&quot;metabolite name&quot;=&quot;label.y&quot;) %&gt;% dplyr::rename(&quot;refmet_name&quot;=&quot;label&quot;) %&gt;% dplyr::select(ion,level,`metabolite name`,`refmet_name`,formula) metDNA_negative &lt;- data.table::fread(&quot;result/2.negative_data_xcms_filter.txt&quot;) %&gt;% dplyr::filter(level==&quot;metDNA&quot;) %&gt;% dplyr::select(name,mz,rt,Compound.name) %&gt;% dplyr::right_join(dat_negative,by=c(&quot;Compound.name&quot;=&quot;metabolite name&quot;)) %&gt;% dplyr::select(ion,name,`Compound.name`,`refmet_name`,level,formula) %&gt;% dplyr::left_join(metDNA_info,by=c(&quot;name&quot;,&quot;Compound.name&quot;)) write.table(metDNA_negative,&quot;result/metabolite_info/metDNA_negative_metabolite.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) 12.4 combine the data from AB,metID and metDNA ab_positive &lt;- data.table::fread(&quot;result/metabolite_info/AB_positive_metabolite.txt&quot;) %&gt;% as.data.frame() ab_negative &lt;- data.table::fread(&quot;result/metabolite_info/AB_negative_metabolite.txt&quot;) %&gt;% as.data.frame() AB &lt;- rbind(ab_positive,ab_negative) %&gt;% dplyr::rename(&quot;Compound.name&quot;=&quot;metabolite name&quot;) %&gt;% dplyr::rename(&quot;refmet_name&quot;=&quot;refmet name&quot;) %&gt;% dplyr::rename(&quot;rt&quot;=&quot;rt_median&quot;) %&gt;% dplyr::rename(&quot;mz&quot;=&quot;theor_median&quot;) %&gt;% ## FOUND? THEOR dplyr::rename(&quot;Total.score&quot;=&quot;score_median&quot;) %&gt;% dplyr::mutate(name=NA) %&gt;% dplyr::mutate(MS2.spectra.name=NA) %&gt;% dplyr::mutate(CAS.ID=NA) %&gt;% dplyr::mutate(HMDB.ID=NA) %&gt;% dplyr::mutate(KEGG.ID=NA) %&gt;% dplyr::mutate(Lab.ID=NA) %&gt;% dplyr::mutate(Database=&quot;AB&quot;) metID_positive &lt;- data.table::fread(&quot;result/metabolite_info/metID_positive_metabolite.txt&quot;) %&gt;% as.data.frame() metID_negative &lt;- data.table::fread(&quot;result/metabolite_info/metID_negative_metabolite.txt&quot;) %&gt;% as.data.frame() metID &lt;- rbind(metID_positive,metID_negative) %&gt;% dplyr::rename(&quot;Formula&quot;=&quot;formula&quot;) %&gt;% dplyr::mutate(formula=NA) %&gt;% dplyr::mutate(found_median=NA) %&gt;% dplyr::mutate(mass_error_median=NA) metDNA_positive &lt;- data.table::fread(&quot;result/metabolite_info/metDNA_positive_metabolite.txt&quot;) %&gt;% as.data.frame() metDNA_negative &lt;- data.table::fread(&quot;result/metabolite_info/metDNA_negative_metabolite.txt&quot;) %&gt;% as.data.frame() metDNA &lt;- rbind(metDNA_positive,metDNA_negative) %&gt;% dplyr::mutate(found_median=NA) %&gt;% dplyr::mutate(mass_error_median=NA) %&gt;% dplyr::mutate(MS2.spectra.name=NA) %&gt;% dplyr::mutate(CAS.ID=NA) %&gt;% dplyr::mutate(HMDB.ID=NA) %&gt;% dplyr::mutate(KEGG.ID=NA) %&gt;% dplyr::mutate(Lab.ID=NA) %&gt;% dplyr::mutate(Database=&quot;metDNA&quot;) kegg_id &lt;- readxl::read_excel(&quot;../result/all_metabolites_name_v0927.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(refmet_name,class,kegg_id) metabolite_info &lt;- rbind(AB,metID,metDNA) %&gt;% dplyr::select(ion,level,name,mz,rt,Compound.name,refmet_name,formula,Formula,found_median,mass_error_median,MS2.spectra.name,Total.score,everything()) %&gt;% dplyr::left_join(kegg_id,by=&quot;refmet_name&quot;) write.table(metabolite_info,&quot;result/metabolite_info_all.txt&quot;,quote=F,sep=&quot;\\t&quot;,row.names=F) 12.5 compare with the local CAS ID raw &lt;- readxl::read_excel(&quot;raw_data/LibView_20231019_164313.xls&quot;) %&gt;% dplyr::select(`Compound:Name`,`Compound:CAS`) %&gt;% dplyr::mutate(`Compound:Name`=toupper(`Compound:Name`)) %&gt;% dplyr::filter(!is.na(`Compound:CAS`)) %&gt;% unique() %&gt;% dplyr::group_by(`Compound:Name`) %&gt;% dplyr::summarise(paste(`Compound:CAS`,collapse = &quot;;&quot;)) names(raw)[2] &lt;- &quot;CAS_ID_all&quot; dat &lt;- data.table::fread(&quot;result/metabolite_info_all.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(`Compound.name1`=toupper(`Compound.name`)) %&gt;% dplyr::left_join(raw,by=c(&quot;Compound.name1&quot;=&quot;Compound:Name&quot;)) %&gt;% dplyr::mutate(`CAS.ID`=ifelse(is.na(`CAS.ID`),`CAS_ID_all`,`CAS.ID`)) %&gt;% dplyr::select(-`Compound.name1`) openxlsx::write.xlsx(dat,&quot;result/metabolite_info_all_v1023.xlsx&quot;) "],["cell-qc.html", "Chapter 13 Cell: QC 13.1 PCA 13.2 the distribution of every metabolite", " Chapter 13 Cell: QC 13.1 PCA 13.1.1 positive library(dplyr) library(ggplot2) before_normalization_raw &lt;- data.table::fread(&quot;result/positive_for_serrf.txt&quot;) %&gt;% as.data.frame() before_normalization &lt;- before_normalization_raw %&gt;% t() %&gt;% as.data.frame() %&gt;% filter(!V4 %in% c(&quot;No&quot;,&quot;label&quot;)) names(before_normalization) &lt;- as.character(before_normalization_raw[,2]) names(before_normalization)[4] &lt;- &quot;sample_id&quot; # pca before_batch &lt;- as.character(before_normalization_raw[1,-c(1,2)]) before_type &lt;- as.character(before_normalization_raw[2,-c(1,2)]) before_sample_id &lt;- as.character(before_normalization_raw[4,-c(1,2)]) dd &lt;- data.frame(type=before_type,batch=before_batch,sample_id=before_sample_id) mydata_pca &lt;- apply(before_normalization[,5:ncol(before_normalization)],2,as.numeric) pca &lt;- prcomp(log2(mydata_pca+1), center = T, scale. = T) variance = pca$sdev^2/sum(pca$sdev^2) pca.data = data.frame(pca$x,type=before_type,batch=before_batch,sample_id=before_sample_id) #col &lt;- hue_pal()(4) p1 &lt;- ggplot(pca.data,aes(PC1,PC2,color=type,shape=before_batch))+ geom_point()+ scale_color_manual(values=c(&quot;red&quot;,&quot;#3e68a0&quot;))+ scale_shape_manual(values=seq(0,length(unique(before_batch))-1))+ #geom_text(aes(label=sample_id))+ theme_bw()+ theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+ labs(x=paste0(&quot;PC1 (&quot;,signif(variance[1]*100,3),&quot;%)&quot;), y=paste0(&quot;PC2 (&quot;,signif(variance[2]*100,3),&quot;%)&quot;)) after_normalization_raw &lt;- read.csv(&quot;result/SERRF/positive_normalized_SERRF.csv&quot;) %&gt;% as.data.frame() %&gt;% dplyr::distinct(label,.keep_all = T) %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;sample&quot;) %&gt;% dplyr::mutate(sample=gsub(&quot;X&quot;,&quot;&quot;,sample)) %&gt;% tibble::column_to_rownames(&quot;sample&quot;) after_sample_id &lt;- rownames(after_normalization_raw) after_dd &lt;- data.frame(sample_id=after_sample_id) %&gt;% dplyr::left_join(dd,by=&quot;sample_id&quot;) mydata_pca &lt;- apply(after_normalization_raw,2,as.numeric) pca &lt;- prcomp(log2(mydata_pca+1), center = T, scale. = T) variance = pca$sdev^2/sum(pca$sdev^2) pca.data = cbind(pca$x,after_dd) p2 &lt;- ggplot(pca.data,aes(PC1,PC2,color=type,shape=batch))+ geom_point()+ scale_color_manual(values=c(&quot;red&quot;,&quot;#3e68a0&quot;))+ scale_shape_manual(values=seq(0,1))+ #geom_text(aes(label=sample_id))+ theme_bw()+ theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+ labs(x=paste0(&quot;PC1 (&quot;,signif(variance[1]*100,3),&quot;%)&quot;), y=paste0(&quot;PC2 (&quot;,signif(variance[2]*100,3),&quot;%)&quot;)) ggsave(&quot;result/QC/3.pca_positive_raw.pdf&quot;,p1,width=5,height=4) ggsave(&quot;result/QC/3.pca_positive_normalization.pdf&quot;,p2,width=5,height=4) 13.1.2 negative library(dplyr) library(ggplot2) before_normalization_raw &lt;- data.table::fread(&quot;result/negative_for_serrf.txt&quot;) %&gt;% as.data.frame() before_normalization &lt;- before_normalization_raw %&gt;% t() %&gt;% as.data.frame() %&gt;% filter(!V4 %in% c(&quot;No&quot;,&quot;label&quot;)) names(before_normalization) &lt;- as.character(before_normalization_raw[,2]) names(before_normalization)[4] &lt;- &quot;sample_id&quot; # pca before_batch &lt;- as.character(before_normalization_raw[1,-c(1,2)]) before_type &lt;- as.character(before_normalization_raw[2,-c(1,2)]) before_sample_id &lt;- as.character(before_normalization_raw[4,-c(1,2)]) dd &lt;- data.frame(type=before_type,batch=before_batch,sample_id=before_sample_id) mydata_pca &lt;- apply(before_normalization[,5:ncol(before_normalization)],2,as.numeric) pca &lt;- prcomp(log2(mydata_pca+1), center = T, scale. = T) variance = pca$sdev^2/sum(pca$sdev^2) pca.data = data.frame(pca$x,type=before_type,batch=before_batch,sample_id=before_sample_id) p1 &lt;- ggplot(pca.data,aes(PC1,PC2,color=type,shape=before_batch))+ geom_point()+ scale_color_manual(values=c(&quot;red&quot;,&quot;#3e68a0&quot;))+ scale_shape_manual(values=seq(0,length(unique(before_batch))-1))+ #geom_text(aes(label=sample_id))+ theme_bw()+ theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+ labs(x=paste0(&quot;PC1 (&quot;,signif(variance[1]*100,3),&quot;%)&quot;), y=paste0(&quot;PC2 (&quot;,signif(variance[2]*100,3),&quot;%)&quot;)) after_normalization_raw &lt;- read.csv(&quot;result/SERRF/negative_normalized_SERRF.csv&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;sample&quot;) %&gt;% dplyr::mutate(sample=gsub(&quot;X&quot;,&quot;&quot;,sample)) %&gt;% tibble::column_to_rownames(&quot;sample&quot;) after_sample_id &lt;- rownames(after_normalization_raw) after_dd &lt;- data.frame(sample_id=after_sample_id) %&gt;% dplyr::left_join(dd,by=&quot;sample_id&quot;) mydata_pca &lt;- apply(after_normalization_raw,2,as.numeric) pca &lt;- prcomp(log2(mydata_pca+1), center = T, scale. = T) variance = pca$sdev^2/sum(pca$sdev^2) pca.data = cbind(pca$x,after_dd) #col &lt;- hue_pal()(4) p2 &lt;- ggplot(pca.data,aes(PC1,PC2,color=type,shape=batch))+ geom_point()+ scale_color_manual(values=c(&quot;red&quot;,&quot;#3e68a0&quot;))+ scale_shape_manual(values=seq(0,1))+ #geom_text(aes(label=sample_id))+ theme_bw()+ theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+ labs(x=paste0(&quot;PC1 (&quot;,signif(variance[1]*100,3),&quot;%)&quot;), y=paste0(&quot;PC2 (&quot;,signif(variance[2]*100,3),&quot;%)&quot;)) ggsave(&quot;result/QC/3.pca_negative_raw.pdf&quot;,p1,width=5,height=4) ggsave(&quot;result/QC/3.pca_negative_normalization.pdf&quot;,p2,width=5,height=4) 13.2 the distribution of every metabolite 13.2.1 positive library(dplyr) library(ggplot2) dat_before &lt;- data.table::fread(&quot;result/positive_for_serrf.txt&quot;) %&gt;% dplyr::select(-number) %&gt;% dplyr::filter(!label %in% c(&quot;time&quot;,&quot;batch&quot;,&quot;sampleType&quot;,&quot;label&quot;)) %&gt;% dplyr::distinct(label,.keep_all = T) %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::mutate_if(is.character,as.numeric) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;sample&quot;) %&gt;% dplyr::mutate(group=ifelse(grepl(&quot;QC&quot;,sample),&quot;QC&quot;,&quot;sample&quot;)) %&gt;% dplyr::mutate(sample=factor(sample,levels = sample)) dat_after &lt;- read.csv(&quot;result/SERRF/positive_normalized_SERRF.csv&quot;) %&gt;% dplyr::distinct(label,.keep_all = T) %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;sample&quot;) %&gt;% dplyr::mutate(group=ifelse(grepl(&quot;QC&quot;,sample),&quot;QC&quot;,&quot;sample&quot;)) %&gt;% dplyr::mutate(sample=factor(sample,levels = sample)) metabolite_name &lt;- setdiff(names(dat_after),c(&quot;sample&quot;,&quot;group&quot;)) for (i in metabolite_name) { dat_before_filter &lt;- dat_before %&gt;% dplyr::select(sample,group,all_of(i)) names(dat_before_filter)[3] &lt;- &quot;label&quot; p1 &lt;- ggplot(dat_before_filter,aes(sample,label))+ geom_point(aes(color=group))+ theme_bw()+ theme(axis.text.x = element_text(angle = 90, hjust = 1,size=5,face=&quot;bold&quot;))+ labs(y=i) dat_after_filter &lt;- dat_after %&gt;% dplyr::select(sample,group,all_of(i)) names(dat_after_filter)[3] &lt;- &quot;label&quot; p3 &lt;- ggplot(dat_after_filter,aes(sample,label))+ geom_point(aes(color=group))+ theme_bw()+ theme(axis.text.x = element_text(angle = 90, hjust = 1,size=5,face=&quot;bold&quot;))+ labs(y=i) p &lt;- cowplot::plot_grid(plotlist = list(p1,p3),nrow=2) n &lt;- sub(&quot;[/]&quot;,&quot;&quot;,i) ggsave(paste0(&quot;result/QC/metabolite/positive_&quot;,n,&quot;.pdf&quot;),p,width=12,height = 8) } 13.2.2 negative library(dplyr) library(ggplot2) dat_before &lt;- data.table::fread(&quot;result/negative_for_serrf.txt&quot;) %&gt;% dplyr::select(-number) %&gt;% dplyr::filter(!label %in% c(&quot;time&quot;,&quot;batch&quot;,&quot;sampleType&quot;,&quot;label&quot;)) %&gt;% dplyr::distinct(label,.keep_all = T) %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::mutate_if(is.character,as.numeric) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;sample&quot;) %&gt;% dplyr::mutate(group=ifelse(grepl(&quot;QC&quot;,sample),&quot;QC&quot;,&quot;sample&quot;)) %&gt;% dplyr::mutate(sample=factor(sample,levels = sample)) dat_after &lt;- read.csv(&quot;result/SERRF/negative_normalized_SERRF.csv&quot;) %&gt;% dplyr::distinct(label,.keep_all = T) %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;sample&quot;) %&gt;% dplyr::mutate(group=ifelse(grepl(&quot;QC&quot;,sample),&quot;QC&quot;,&quot;sample&quot;)) %&gt;% dplyr::mutate(sample=factor(sample,levels = sample)) metabolite_name &lt;- setdiff(names(dat_after),c(&quot;sample&quot;,&quot;group&quot;)) for (i in metabolite_name) { dat_before_filter &lt;- dat_before %&gt;% dplyr::select(sample,group,all_of(i)) names(dat_before_filter)[3] &lt;- &quot;label&quot; p1 &lt;- ggplot(dat_before_filter,aes(sample,label))+ geom_point(aes(color=group))+ theme_bw()+ theme(axis.text.x = element_text(angle = 90, hjust = 1,size=5,face=&quot;bold&quot;))+ labs(y=i) dat_after_filter &lt;- dat_after %&gt;% dplyr::select(sample,group,all_of(i)) names(dat_after_filter)[3] &lt;- &quot;label&quot; p3 &lt;- ggplot(dat_after_filter,aes(sample,label))+ geom_point(aes(color=group))+ theme_bw()+ theme(axis.text.x = element_text(angle = 90, hjust = 1,size=5,face=&quot;bold&quot;))+ labs(y=i) p &lt;- cowplot::plot_grid(plotlist = list(p1,p3),nrow=2) n &lt;- sub(&quot;[/]&quot;,&quot;&quot;,i) ggsave(paste0(&quot;result/QC/metabolite/negative/negative_&quot;,n,&quot;.pdf&quot;),p,width=12,height = 8) } "],["cell-filter-metabolites-and-samples.html", "Chapter 14 Cell: filter metabolites and samples 14.1 filter out C053 14.2 filter compound", " Chapter 14 Cell: filter metabolites and samples 14.1 filter out C053 library(dplyr) dat &lt;- data.table::fread(&quot;result/dat_final.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(-C053) write.table(dat,&quot;result/dat_final_1.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 14.2 filter compound library(dplyr) dat &lt;- data.table::fread(&quot;/Users/guituantuan/Desktop/ALL_Bone_Cell/data_process/result/dat_final.txt&quot;) %&gt;% dplyr::filter(!label %in% c(&quot;L-Methionine&quot;,&quot;Dioctyl Phathalate&quot;,&quot;Inositol&quot;,&quot;UDP-alpha-D-galactose&quot;,&quot;alpha-Aminoadipic acid&quot;)) %&gt;% dplyr::mutate(label=ifelse(label==&quot;Glycochenodeoxycholic acid&quot;,&quot;Glycoursodeoxycholic Acid&quot;,label)) write.table(dat,&quot;/Users/guituantuan/Desktop/ALL_Bone_Cell/data_process/result/dat_final_v1027.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 14.2.1 filter compound in 2023.11.08 dat &lt;- data.table::fread(&quot;/Users/guituantuan/Desktop/ALL_Bone_Cell/data_process/result/dat_final_v1109.txt&quot;) %&gt;% dplyr::filter(!label %in% c(&quot;Inositol&quot;,&quot;UDP-alpha-D-galactose&quot;,&quot;alpha-Aminoadipic acid&quot;,&quot;Glutamic Acid&quot;,&quot;GDP-L-fucose&quot;,&quot;UDP-alpha-D-galactose&quot;,&quot;Aspartic acid&quot;)) write.table(dat,&quot;/Users/guituantuan/Desktop/ALL_Bone_Cell/data_process/result/dat_final.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) "],["cell-rsd.html", "Chapter 15 Cell: RSD 15.1 after 15.2 RSD", " Chapter 15 Cell: RSD library(dplyr) library(ggplot2) before_normalization_raw &lt;- data.table::fread(&quot;result/positive_for_serrf.txt&quot;) %&gt;% as.data.frame() before_normalization &lt;- before_normalization_raw %&gt;% t() %&gt;% as.data.frame() %&gt;% filter(!V4 %in% c(&quot;No&quot;,&quot;label&quot;)) names(before_normalization) &lt;- as.character(before_normalization_raw[,2]) names(before_normalization)[4] &lt;- &quot;sample_id&quot; # pca before_batch &lt;- as.character(before_normalization_raw[1,-c(1,2)]) before_type &lt;- as.character(before_normalization_raw[2,-c(1,2)]) before_sample_id &lt;- as.character(before_normalization_raw[4,-c(1,2)]) dd &lt;- data.frame(type=before_type,batch=before_batch,sample_id=before_sample_id) mydata_pca &lt;- apply(before_normalization[,5:ncol(before_normalization)],2,as.numeric) rownames(mydata_pca) &lt;- before_sample_id aa_positive &lt;- cbind(before_type,before_batch,before_sample_id) %&gt;% as.data.frame() mydata_pca_positive &lt;- mydata_pca %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;sampleid&quot;) ### negative before_normalization_raw &lt;- data.table::fread(&quot;result/negative_for_serrf.txt&quot;) %&gt;% as.data.frame() before_normalization &lt;- before_normalization_raw %&gt;% t() %&gt;% as.data.frame() %&gt;% filter(!V4 %in% c(&quot;No&quot;,&quot;label&quot;)) names(before_normalization) &lt;- as.character(before_normalization_raw[,2]) names(before_normalization)[4] &lt;- &quot;sample_id&quot; # pca before_batch &lt;- as.character(before_normalization_raw[1,-c(1,2)]) before_type &lt;- as.character(before_normalization_raw[2,-c(1,2)]) before_sample_id &lt;- as.character(before_normalization_raw[4,-c(1,2)]) dd &lt;- data.frame(type=before_type,batch=before_batch,sample_id=before_sample_id) mydata_pca_negative &lt;- apply(before_normalization[,5:ncol(before_normalization)],2,as.numeric) rownames(mydata_pca_negative) &lt;- before_sample_id mydata_pca_negative &lt;- mydata_pca_negative %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;sampleid&quot;) aa_negative &lt;- cbind(before_type,before_batch,before_sample_id) %&gt;% as.data.frame() result &lt;- mydata_pca_positive %&gt;% dplyr::inner_join(mydata_pca_negative,by=&quot;sampleid&quot;) %&gt;% tibble::column_to_rownames(&quot;sampleid&quot;) aa &lt;- aa_positive %&gt;% dplyr::inner_join(aa_negative,by=&quot;before_sample_id&quot;) pca &lt;- prcomp(log2(result+1), center = T, scale. = T) variance = pca$sdev^2/sum(pca$sdev^2) pca.data = data.frame(pca$x,type=aa$`before_type.x`,batch=aa$before_batch.x,sample_id=aa$before_sample_id) #col &lt;- hue_pal()(4) p1 &lt;- ggplot(pca.data,aes(PC1,PC2,color=type,shape=batch))+ geom_point()+ scale_color_manual(values=c(&quot;red&quot;,&quot;#3e68a0&quot;))+ scale_shape_manual(values=seq(0,length(unique(aa$before_batch.x))-1))+ #geom_text(aes(label=sample_id))+ theme_bw()+ theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+ labs(x=paste0(&quot;PC1 (&quot;,signif(variance[1]*100,3),&quot;%)&quot;), y=paste0(&quot;PC2 (&quot;,signif(variance[2]*100,3),&quot;%)&quot;)) 15.1 after library(dplyr) library(ggplot2) after_normalization_raw &lt;- read.csv(&quot;result/SERRF/positive_normalized_SERRF.csv&quot;) %&gt;% as.data.frame() %&gt;% dplyr::distinct(label,.keep_all = T) %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;sample&quot;) %&gt;% dplyr::mutate(sample=gsub(&quot;X&quot;,&quot;&quot;,sample)) %&gt;% tibble::column_to_rownames(&quot;sample&quot;) after_sample_id &lt;- rownames(after_normalization_raw) after_dd &lt;- data.frame(sample_id=after_sample_id) %&gt;% dplyr::left_join(dd,by=&quot;sample_id&quot;) mydata_pca &lt;- apply(after_normalization_raw,2,as.numeric) rownames(mydata_pca) &lt;- after_dd$sample_id mydata_pca &lt;- mydata_pca %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;sampleid&quot;) after_normalization_raw_negative &lt;- read.csv(&quot;result/SERRF/negative_normalized_SERRF.csv&quot;) %&gt;% as.data.frame() %&gt;% dplyr::distinct(label,.keep_all = T) %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;sample&quot;) %&gt;% dplyr::mutate(sample=gsub(&quot;X&quot;,&quot;&quot;,sample)) %&gt;% tibble::column_to_rownames(&quot;sample&quot;) after_sample_id_negative &lt;- rownames(after_normalization_raw_negative) after_dd_negative &lt;- data.frame(sample_id=after_sample_id_negative) %&gt;% dplyr::left_join(dd,by=&quot;sample_id&quot;) mydata_pca_negative &lt;- apply(after_normalization_raw_negative,2,as.numeric) rownames(mydata_pca_negative) &lt;- after_dd_negative$sample_id mydata_pca_negative &lt;- mydata_pca_negative %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;sampleid&quot;) result &lt;- mydata_pca %&gt;% dplyr::inner_join(mydata_pca_negative,by=&quot;sampleid&quot;) %&gt;% tibble::column_to_rownames(&quot;sampleid&quot;) ss &lt;- after_dd_negative %&gt;% dplyr::filter(sample_id %in% rownames(result)) %&gt;% dplyr::arrange(match(sample_id,rownames(result))) pca &lt;- prcomp(log2(result), center = T, scale. = T) variance = pca$sdev^2/sum(pca$sdev^2) pca.data = cbind(pca$x,ss) p2 &lt;- ggplot(pca.data,aes(PC1,PC2,color=type,shape=batch))+ geom_point()+ scale_color_manual(values=c(&quot;red&quot;,&quot;#3e68a0&quot;))+ scale_shape_manual(values=seq(0,1))+ #geom_text(aes(label=sample_id))+ theme_bw()+ theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+ labs(x=paste0(&quot;PC1 (&quot;,signif(variance[1]*100,3),&quot;%)&quot;), y=paste0(&quot;PC2 (&quot;,signif(variance[2]*100,3),&quot;%)&quot;)) ggsave(&quot;result/QC/3.pca_normalization.pdf&quot;,p2,width=5,height=4) 15.2 RSD library(ggplot2) dat_positive_rsd&lt;- data.table::fread(&quot;result/SERRF/positive_QC-RSDs.csv&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(SERRF&lt;= 0.3) dat_negative_rsd &lt;- data.table::fread(&quot;result/SERRF/negative_QC-RSDs.csv&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(SERRF &lt;= 0.3) dat &lt;- rbind(dat_positive_rsd,dat_negative_rsd) dat_melt &lt;- reshape2::melt(dat,id=&quot;label&quot;) %&gt;% dplyr::mutate(variable=ifelse(variable==&quot;none&quot;,&quot;Raw&quot;,&quot;Normalization&quot;)) %&gt;% dplyr::mutate(variable=factor(variable,levels = c(&quot;Raw&quot;,&quot;Normalization&quot;))) p &lt;- ggplot(dat_melt,aes(x=variable,y=value))+ geom_violin(col=&quot;#D01910&quot;,width=.9)+ geom_jitter(width=.2,col=&quot;#00599F&quot;,size=0.5)+ theme_bw()+ labs(x=NULL,y=&quot;RSD&quot;) ggsave(&quot;result/QC/3.RSD.pdf&quot;,p,width=3.5,height = 3) "],["figure-1.html", "Chapter 16 Figure 1 16.1 (B) Annotated metabolites 16.2 (C) Comprehensive metabolome overview 16.3 (S1 A) Clinical characteristics 16.4 (S1 B) Venn plot 16.5 (S1 C) Waterfall plot 16.6 (S1 D) Scatter plot 16.7 (S2 A) PCA 16.8 (S2 B) Volcano Plot 16.9 (S2 C) MSEA 16.10 (S2 D) Ageing-related metabolites 16.11 (S2 E) Box plot 16.12 (S2 F) Overall Survival analysis 16.13 (S2 G) Box plot 16.14 (S2 H) Metabolism Set Enrichment Analysis", " Chapter 16 Figure 1 Figure 1: Construction of a multi-omics landscape of the adult ALL cohort centering on the metabolome. A. Overview of the experimental design and the number of samples for metabolome and RNA-seq analyses. * Among the 106 samples subject to intracellular metabolome investigation on D0 of induction therapy, BMMC samples were used in 100 cases and PBMC samples were available in 6 cases. B. Number of annotated metabolites in serum and intracellular samples, grouped by metabolites functional category, mainly based on KEGG. C. (Middle Panel) The heatmap provides a comprehensive overview of the metabolome in BCP-ALL and T-ALL patients at specified time points, further grouped by D28 status. The entire metabolome pattern is categorized into nine clusters, with significantly enriched pathways for clustered metabolites annotated on the right (P &lt; 0.05). Each row represents a metabolite, each column corresponds to a sample, and each score reflects its relative abundance compared to HC levels, calculated as the median within each subgroup. (Left Panel) The correlation between each cluster and clinical parameters assessed on Day 0 (D0) is displayed (P-value &lt; 0.01). UA: uric acid; CREA: creatine; HDL: high-density lipoprotein; PAB: Prealbumin; AST: Aspartate Aminotransferase; ALP: Alkaline Phosphatase; WBC: White Blood Cell count; TBIL: Total Bilirubin; GGT: Gamma-Glutamyl Transferase; BUN: Blood Urea Nitrogen; PLT: Platelet count; DBIL: Direct Bilirubin; TP: Total Protein; ALB: Albumin; CHOL: Cholesterol; GLU: Glucose; Hb: Hemoglobin. 16.1 (B) Annotated metabolites Number of annotated metabolites in serum and intracellular samples, grouped by metabolites functional category, mainly based on KEGG. library(dplyr) library(ggplot2) #------------------------------------------------------------------------------- # Step 1: Load metabolomics data and set parameters #------------------------------------------------------------------------------- dat_cell &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(label=stringr::str_to_title(label)) dim(dat_cell) kidc &lt;- openxlsx::read.xlsx(&quot;raw_data/cell_metabolite_info_all_v1109.xlsx&quot;) %&gt;% dplyr::mutate(label=refmet_name) %&gt;% dplyr::mutate(label=stringr::str_to_title(label)) %&gt;% dplyr::select(label,class) %&gt;% dplyr::mutate(class=ifelse(class==&quot;Nucleic acids&quot;,&quot;Nucleotides&quot;,class)) cell.data &lt;- kidc %&gt;% dplyr::filter(label %in% dat_cell$label) %&gt;% dplyr::inner_join(dat_cell,by=&quot;label&quot;) %&gt;% dplyr::rename(super.class=class) %&gt;% group_by(super.class) %&gt;% summarise(count = n()) kid &lt;- data.table::fread(&quot;raw_data/serum_metabolites_id_v240328.txt&quot;) dataRAW &lt;- data.table::fread(&quot;raw_data/serum_raw_sva_data_v240328.txt&quot;) %&gt;% as.data.frame() data_raw &lt;- dataRAW %&gt;% dplyr::mutate(label=stringr::str_to_title(label)) %&gt;% dplyr::rename(&quot;Metabolites&quot;=&quot;label&quot;) serum.data &lt;- kid %&gt;% dplyr::filter(query %in% dataRAW$label) %&gt;% group_by(super.class) %&gt;% summarise(count = n()) #------------------------------------------------------------------------------- # Step 2: Barplot and Venn Diagram #------------------------------------------------------------------------------- ## Barplot for annotated metabolites pie.s &lt;- serum.data pie.c &lt;- cell.data group &lt;- rep(c(&quot;serum&quot;),8) pie.s$group &lt;- group group &lt;- rep(c(&quot;cell&quot;),8) pie.c$group &lt;- group pie &lt;- rbind(pie.c,pie.s) %&gt;% dplyr::arrange(desc(count)) pie_sort &lt;- pie %&gt;% dplyr::filter(group==&quot;cell&quot;) pie$super.class &lt;- factor(pie$super.class,level=c(&quot;Lipids&quot;,&quot;Amino acids and peptides&quot;,&quot;Nucleotides&quot;,&quot;Carbohydrates&quot;,&quot;Cofactors and Vitamins&quot;,&quot;Energy&quot;,&quot;Xenobiotics&quot;,&quot;Other&quot;)) cs &lt;- c(&quot;serum&quot;=&quot;#2b6a99&quot;,&quot;cell&quot;=&quot;#f16c23&quot;) p1 &lt;- ggplot(pie, aes(x=super.class, weight=count,fill=factor(group)))+ geom_bar(position = &#39;dodge&#39;) + theme_classic() + scale_fill_manual(values=c(&quot;serum&quot;=&quot;#2b6a99&quot;,&quot;cell&quot;=&quot;#f16c23&quot;))+ scale_y_continuous(expand = c(0, 0))+ theme(axis.text.x = element_text(angle = 45, hjust = 1)) ggsave(p1,filename = &quot;result/Figure1/1B.barplot.pdf&quot;,width = 8,height = 8) ## Venn cell &lt;- dat_cell$label serum &lt;- data_raw$Metabolites library(VennDiagram) a&lt;-venn.diagram(list(cell=cell,serum=serum),filename=NULL,fill=c(&quot;#f16c23&quot;,&quot;#2b6a99&quot;),alpha =1) pdf(&quot;result/Figure1/1B.pie.pdf&quot;,width=5,height = 5) grid.draw(a) dev.off() 16.2 (C) Comprehensive metabolome overview (Middle Panel) The heatmap provides a comprehensive overview of the metabolome in BCP-ALL and T-ALL patients at specified time points, further grouped by D28 status. The entire metabolome pattern is categorized into nine clusters, with significantly enriched pathways for clustered metabolites annotated on the right (P &lt; 0.05). Each row represents a metabolite, each column corresponds to a sample, and each score reflects its relative abundance compared to HC levels, calculated as the median within each subgroup. (Left Panel) The correlation between each cluster and clinical parameters assessed on Day 0 (D0) is displayed (P-value &lt; 0.01). UA: uric acid; CREA: creatine; HDL: high-density lipoprotein; PAB: Prealbumin; AST: Aspartate Aminotransferase; ALP: Alkaline Phosphatase; WBC: White Blood Cell count; TBIL: Total Bilirubin; GGT: Gamma-Glutamyl Transferase; BUN: Blood Urea Nitrogen; PLT: Platelet count; DBIL: Direct Bilirubin; TP: Total Protein; ALB: Albumin; CHOL: Cholesterol; GLU: Glucose; Hb: Hemoglobin. library(dplyr) library(MNet) library(ComplexHeatmap) library(maSigPro) library(ggplot2) library(ggpubr) #------------------------------------------------------------------------------- # Step 1: Use maSigPro for time series data analysis #------------------------------------------------------------------------------- sample_patient_A &lt;- readxl::read_excel(&quot;raw_data/Supplementary Tables.xlsx&quot;,sheet=1,skip=1) %&gt;% as.data.frame() %&gt;% dplyr::filter(!is.na(METs_D0_ID)) %&gt;% dplyr::select(Pid,METs_D0_ID,`D28_BM MRD status`) %&gt;% dplyr::rename(&quot;ID&quot;=&quot;METs_D0_ID&quot;) %&gt;% dplyr::mutate(type=&quot;D0&quot;) sample_patient_C &lt;- readxl::read_excel(&quot;raw_data/Supplementary Tables.xlsx&quot;,sheet=1,skip=1) %&gt;% as.data.frame() %&gt;% dplyr::filter(!is.na(METs_D14_ID)) %&gt;% dplyr::select(Pid,METs_D14_ID,`D28_BM MRD status`) %&gt;% dplyr::rename(&quot;ID&quot;=&quot;METs_D14_ID&quot;) %&gt;% dplyr::mutate(type=&quot;D14&quot;) sample_patient_E &lt;- readxl::read_excel(&quot;raw_data/Supplementary Tables.xlsx&quot;,sheet=1,skip=1) %&gt;% as.data.frame() %&gt;% dplyr::filter(!is.na(METs_D28_ID)) %&gt;% dplyr::select(Pid,METs_D28_ID,`D28_BM MRD status`) %&gt;% dplyr::rename(&quot;ID&quot;=&quot;METs_D28_ID&quot;) %&gt;% dplyr::mutate(type=&quot;D28&quot;) sample_patient_Cons &lt;- readxl::read_excel(&quot;raw_data/Supplementary Tables.xlsx&quot;,sheet=1,skip=1) %&gt;% as.data.frame() %&gt;% dplyr::filter(!is.na(METs_Cons_ID)) %&gt;% dplyr::select(Pid,METs_Cons_ID,`Cons_BM MRD status`) %&gt;% dplyr::rename(&quot;D28_BM MRD status&quot;=&quot;Cons_BM MRD status&quot;) %&gt;% dplyr::filter(! `D28_BM MRD status` %in% c(&quot;NR&quot;,&quot;PR&quot;)) %&gt;% dplyr::filter(`D28_BM MRD status` != &quot;CR&quot;) %&gt;% dplyr::rename(&quot;ID&quot;=&quot;METs_Cons_ID&quot;) %&gt;% dplyr::mutate(type=&quot;Cons&quot;) sample_patient_all &lt;- rbind(sample_patient_A,sample_patient_C, sample_patient_E,sample_patient_Cons) %&gt;% dplyr::mutate(`D28_BM MRD status`=ifelse(`D28_BM MRD status` %in% c(&quot;early death&quot;,&quot;PR&quot;,&quot;NR&quot;),&quot;NoCR&quot;, `D28_BM MRD status`)) dd &lt;- readxl::read_excel(&quot;raw_data/Supplementary Tables.xlsx&quot;,sheet=4,skip = 1) %&gt;% dplyr::select(Metabolite,all_of(sample_patient_all$ID)) %&gt;% tibble::column_to_rownames(&quot;Metabolite&quot;) %&gt;% log1p() %&gt;% as.data.frame() dat_design &lt;- data.frame(ID=names(dd)) %&gt;% dplyr::left_join(sample_patient_all,by=c(&quot;ID&quot;)) %&gt;% dplyr::mutate(type=ifelse(is.na(type),&quot;HC&quot;,type)) %&gt;% dplyr::mutate(`D28_BM MRD status`=ifelse(is.na(`D28_BM MRD status`),&quot;HC&quot;,`D28_BM MRD status`)) %&gt;% # dplyr::mutate(Control=ifelse(type==&quot;HC&quot;,1,0)) %&gt;% dplyr::mutate(POS=ifelse(`D28_BM MRD status`==&quot;POS&quot;,1,0)) %&gt;% dplyr::mutate(NEG=ifelse(`D28_BM MRD status`==&quot;NEG&quot;,1,0)) %&gt;% dplyr::mutate(NoCR=ifelse(`D28_BM MRD status`==&quot;NoCR&quot;,1,0)) %&gt;% dplyr::mutate(Time=type) %&gt;% dplyr::mutate(Replicate=ifelse(type==&quot;HC&quot;,1, ifelse(type==&quot;D0&quot; &amp; `D28_BM MRD status`==&quot;POS&quot;,2, ifelse(type==&quot;D0&quot; &amp; `D28_BM MRD status`==&quot;NEG&quot;,3, ifelse(type==&quot;D0&quot; &amp; `D28_BM MRD status`==&quot;NoCR&quot;,4, ifelse(type==&quot;D14&quot; &amp; `D28_BM MRD status`==&quot;POS&quot;,5, ifelse(type==&quot;D14&quot; &amp; `D28_BM MRD status`==&quot;NEG&quot;,6, ifelse(type==&quot;D14&quot; &amp; `D28_BM MRD status`==&quot;NoCR&quot;,7, ifelse(type==&quot;D28&quot; &amp; `D28_BM MRD status`==&quot;POS&quot;,8, ifelse(type==&quot;D28&quot; &amp; `D28_BM MRD status`==&quot;NEG&quot;,9, ifelse(type==&quot;D28&quot; &amp; `D28_BM MRD status`==&quot;NoCR&quot;,10, ifelse(type==&quot;Cons&quot; &amp; `D28_BM MRD status`==&quot;POS&quot;,11, ifelse(type==&quot;Cons&quot; &amp; `D28_BM MRD status`==&quot;NEG&quot;,12, ifelse(type==&quot;Cons&quot; &amp; `D28_BM MRD status`==&quot;NoCR&quot;,13,&quot;a&quot; )))))))))))))) %&gt;% dplyr::select(ID,Time,Replicate,NoCR,POS,NEG) %&gt;% tibble::column_to_rownames(&quot;ID&quot;) %&gt;% dplyr::mutate(Time=ifelse(Time==&quot;HC&quot;,1, ifelse(Time==&quot;D0&quot;,2, ifelse(Time==&quot;D14&quot;,3, ifelse(Time==&quot;D28&quot;,4, ifelse(Time==&quot;Cons&quot;,5,NA)))))) %&gt;% as.matrix() dat_design1=apply(dat_design,2,as.numeric) rownames(dat_design1) &lt;- rownames(dat_design) dat_design &lt;- dat_design1 dd_scale &lt;- myscale(dd ,method=&quot;raw_zscore&quot;) design &lt;- make.design.matrix(dat_design, degree = 2) set.seed(1) fit &lt;- p.vector(dd_scale, design, Q = 0.05, MT.adjust = &quot;BH&quot;, min.obs = 50) fit$i # returns the number of significant genes fit$alfa # gives p-value at the Q false discovery control level ## 4. Difference Analysis set.seed(1) tstep &lt;- T.fit(fit, step.method = &quot;backward&quot;, alfa = 0.05) ## 5. Extract differentially expressed genes set.seed(1) sigs &lt;- get.siggenes(tstep, rsq = 0.05, vars = &quot;all&quot;) #suma2Venn(sigs$summary[, c(1:3)]) #suma2Venn(sigs$summary[, c(1:4)]) pdf(&quot;result/Figure1/1C.all_0.05.pdf&quot;) a &lt;- see.genes(sigs$sig.genes, edesign=design$edesign,show.fit = T, dis =design$dis, cluster.method=&quot;hclust&quot; ,cluster.data = 1, k.mclust=TRUE) dev.off() write.table(data.frame(nn=a$cut),&quot;result/Figure1/1C.all_0.05.txt&quot;,quote=F,sep=&quot;\\t&quot;) #------------------------------------------------------------------------------- # Step 2: The comprehensive metabolome overview of BCP-ALL/T-ALL patients at denoted time points and further grouped by D28 status #------------------------------------------------------------------------------- mark_meta &lt;- &quot;Taurocholic acid&quot; sample_patient_all &lt;- rbind(sample_patient_A,sample_patient_C, sample_patient_E,sample_patient_Cons) %&gt;% dplyr::mutate(`D28_BM MRD status`=ifelse(`D28_BM MRD status` %in% c(&quot;early death&quot;,&quot;PR&quot;,&quot;NR&quot;),&quot;NoCR&quot;, `D28_BM MRD status`)) %&gt;% dplyr::arrange(`D28_BM MRD status`) met &lt;- data.table::fread(&quot;result/Figure1/1C.all_0.05.txt&quot;) %&gt;% as.data.frame() dd &lt;- readxl::read_excel(&quot;raw_data/Supplementary Tables.xlsx&quot;,sheet=4,skip = 1) %&gt;% dplyr::select(Metabolite,starts_with(&quot;H&quot;),all_of(sample_patient_all$ID)) %&gt;% dplyr::filter(Metabolite %in% met$V1) %&gt;% dplyr::arrange(match(Metabolite,met$V1)) %&gt;% tibble::column_to_rownames(&quot;Metabolite&quot;) %&gt;% log1p() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;Metabolite&quot;) sample_all &lt;- data.frame(ID=names(dd)) %&gt;% dplyr::filter(ID != &quot;Metabolite&quot;) %&gt;% dplyr::left_join(sample_patient_all,by=&quot;ID&quot;) %&gt;% dplyr::mutate(type=ifelse(is.na(type),&quot;HC&quot;,type)) %&gt;% dplyr::mutate(`D28_BM MRD status`=ifelse(is.na(`D28_BM MRD status`),&quot;HC&quot;,`D28_BM MRD status`)) dd_melt &lt;- reshape2::melt(dd,id=&quot;Metabolite&quot;) %&gt;% dplyr::left_join(sample_all,by=c(&quot;variable&quot;=&quot;ID&quot;)) dd_median &lt;- dd_melt %&gt;% dplyr::group_by(Metabolite,`D28_BM MRD status`, type) %&gt;% dplyr::summarise(n=median(value)) %&gt;% as.data.frame() %&gt;% dplyr::mutate(a=paste0(`D28_BM MRD status`,&quot;_&quot;,type)) %&gt;% dplyr::select(Metabolite,a,n) dd_dcast &lt;- reshape2::dcast(dd_median,Metabolite~a) %&gt;% dplyr::arrange(match(Metabolite,met$V1)) %&gt;% tibble::column_to_rownames(&quot;Metabolite&quot;) dd_scale &lt;- log2(dd_dcast/dd_dcast$HC_HC) %&gt;% dplyr::select(-HC_HC) sample_all &lt;- data.frame(ID=names(dd_scale)) %&gt;% dplyr::mutate(a=ID) %&gt;% tidyr::separate(ID,sep=&quot;_&quot;,c(&quot;status&quot;,&quot;type&quot;)) %&gt;% dplyr::mutate(status=ifelse(status==&quot;NEG&quot;,&quot;MRD-&quot;, ifelse(status==&quot;POS&quot;,&quot;MRD+&quot;,status))) %&gt;% dplyr::arrange(match(status,c(&quot;HC&quot;,&quot;MRD-&quot;,&quot;MRD+&quot;,&quot;NoCR&quot;))) dd_result &lt;- dd_scale %&gt;% dplyr::select(sample_all$a) overlap_met &lt;- intersect(stringr::str_to_title(mark_meta),stringr::str_to_title(rownames(dd_result))) gene_pos &lt;- as.numeric() for (i in 1:length(overlap_met)) { gene_pos_temp &lt;- which(stringr::str_to_title(rownames(dd_result)) == overlap_met[i]) gene_pos &lt;- c(gene_pos,gene_pos_temp) } length(gene_pos) setdiff(stringr::str_to_title(overlap_met),stringr::str_to_title(rownames(dd_result))) right_anno &lt;- rowAnnotation(mark_gene = anno_mark(at = gene_pos, labels = overlap_met, labels_gp = gpar(fontsize = 5))) top_annotation = HeatmapAnnotation( Type=sample_all$type, status=sample_all$`status`, col=list(`Type`=c(&quot;D0&quot;=&quot;#D01910&quot;,&quot;D14&quot;=&quot;#FE7F2D&quot;,&quot;D28&quot;=&quot;#006633&quot;,&quot;Cons&quot;=&quot;#330066&quot;), status=c(&quot;MRD-&quot;=&quot;#00468BFF&quot;,&quot;MRD+&quot;=&quot;#0099B4FF&quot;,&quot;NoCR&quot;=&quot;#AD002AFF&quot;))) col_fun = circlize::colorRamp2(c(-0.3, 0, 0.3), c(&quot;#00599F&quot;, &quot;white&quot;, &quot;#D01910&quot;)) p_metabolite &lt;- Heatmap(dd_result,height=unit(12,&quot;cm&quot;),name=&quot;Serum Metabolite&quot;, cluster_row_slices = F,border=T, cluster_column_slices = F, clustering_method_rows = &quot;ward.D&quot;, cluster_columns = F,right_annotation = right_anno, # clustering_method_columns = &quot;ward.D2&quot;, column_split = factor(sample_all$type,levels=c(&quot;D0&quot;,&quot;D14&quot;,&quot;D28&quot;,&quot;Cons&quot;)), row_split = met$nn, col = col_fun, top_annotation =top_annotation, show_column_names = F,show_row_names = T, row_names_gp = gpar(fontsize = 2),column_names_gp = gpar(fontsize = 3)) pdf(&quot;result/Figure1/1C.heatmap-haveHC-0.05-final.pdf&quot;,width = 10,height = 8) p_metabolite dev.off() #------------------------------------------------------------------------------- # Step 3: Enriched pathways for clustered metabolites #------------------------------------------------------------------------------- kid &lt;- readxl::read_excel(&quot;raw_data/Supplementary Tables.xlsx&quot;,sheet=6,skip=1) %&gt;% as.data.frame() %&gt;% dplyr::select(Refmet_name,Library,`Annotated category`,`KEGG ID`) dd &lt;- data.table::fread(&quot;result/Figure1/1C.all_0.05.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::left_join(kid,by=c(&quot;V1&quot;=&quot;Refmet_name&quot;)) %&gt;% dplyr::filter(`KEGG ID` != &quot;None&quot;) pathway_result &lt;- data.frame() for (i in 1:9) { dd_1 &lt;- dd %&gt;% dplyr::filter(nn==i) %&gt;% dplyr::distinct(`KEGG ID`,.keep_all = T) dd_1_result &lt;- ePEAlyser(dd_1$`KEGG ID`,out=&quot;metabolite&quot;, p_cutoff = 0.05,noverlap_cutoff = 1,test = &quot;hypergeo&quot;) dd_1_result_mutate &lt;- dd_1_result$output %&gt;% dplyr::mutate(group=paste0(&quot;C&quot;,i)) pathway_result &lt;- rbind(pathway_result,dd_1_result_mutate) } pathway_result1 &lt;- pathway_result %&gt;% dplyr::mutate(pvalue=ifelse(pvalue &lt; 8.9e-08,8.9e-08,pvalue)) %&gt;% dplyr::arrange(desc(pvalue)) %&gt;% dplyr::mutate(name=factor(name,levels=unique(name))) p1 &lt;- ggplot(pathway_result1,aes(x=name,y=factor(1)))+ geom_point(aes(size=nOverlap,color=-log10(pvalue)))+ scale_x_discrete(position = &quot;top&quot;)+ scale_color_gradient(low=&quot;yellow&quot;,high=&quot;red&quot;)+ coord_flip()+ facet_grid(group~.,scales = &quot;free&quot;,space=&quot;free&quot;,switch=&quot;y&quot;)+ theme_bw()+ theme(panel.grid = element_blank(),axis.text.x=element_blank(),axis.ticks.x = element_blank())+ labs(x=NULL,y=NULL) ggsave(&quot;result/Figure1/1C.pathway_all.pdf&quot;,p1,width=5.5,height = 7.5) #------------------------------------------------------------------------------- # Step 4: The correlation between each cluster with clinical parameters #------------------------------------------------------------------------------- AH.var &lt;- c(&quot;Hb&quot;, &quot;PLT&quot;, &quot;GLU.mM&quot;, &quot;PAB.mg.L&quot;, &quot;ALT.U.L&quot;, &quot;AST.U.L&quot;, &quot;ALP.IU.L&quot;, &quot;GGT.IU.L&quot;, &quot;TBIL.uM&quot;, &quot;DBIL.uM&quot;, &quot;TP.g.L&quot;, &quot;ALB.g.L&quot;, &quot;A.G&quot;, &quot;TBA.uM&quot;, &quot;BUN.mM&quot;, &quot;CREA.uM&quot;, &quot;UA.μM&quot;, &quot;TG.B.mM&quot;, &quot;CHOL.mM&quot;, &quot;HDL.mM&quot;, &quot;LDL.mM&quot;) clin_index &lt;- readxl::read_excel(&quot;raw_data/05 2019ALL代谢组收样临床资料v0606.xlsx&quot;,sheet = &quot;initial&quot;) %&gt;% dplyr::distinct(bianhao,.keep_all = T) %&gt;% dplyr::select(bianhao_new,all_of(AH.var)) %&gt;% unique() %&gt;% dplyr::mutate(Pid=paste0(&quot;RJ-&quot;,bianhao_new)) %&gt;% dplyr::select(-bianhao_new) %&gt;% dplyr::mutate(CHOL.mM=as.numeric(CHOL.mM)) %&gt;% dplyr::mutate(HDL.mM=as.numeric(HDL.mM)) sample_patient_A &lt;- readxl::read_excel(&quot;raw_data/Supplementary Tables.xlsx&quot;,sheet=1,skip=1) %&gt;% as.data.frame() %&gt;% dplyr::filter(!is.na(METs_D0_ID)) %&gt;% dplyr::left_join(clin_index,by=&quot;Pid&quot;) %&gt;% dplyr::select(Pid,METs_D0_ID,Lineage,Subtype,Age,WBC, BMI,HBP,OS_stat,OS,EFS_stat,EFS,RFS_stat,RFS, all_of(AH.var)) %&gt;% dplyr::mutate(OS=OS/30,OS_status=OS_stat, RFS=RFS/30,RFS_status=RFS_stat, EFS=EFS/30,EFS_status=EFS_stat) for (n in 1:9) { a &lt;- data.table::fread(&quot;result/Figure1/1C.all_0.05.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(nn==n) dd &lt;- readxl::read_excel(&quot;raw_data/Supplementary Tables.xlsx&quot;,sheet=4,skip = 1) %&gt;% dplyr::select(Metabolite,all_of(sample_patient_A$METs_D0_ID)) %&gt;% dplyr::filter(Metabolite %in% a$V1) %&gt;% tibble::column_to_rownames(&quot;Metabolite&quot;) %&gt;% log1p() %&gt;% as.data.frame() module.name &lt;- rownames(dd) plot.name &lt;- c(&quot;Age&quot;,&quot;BMI&quot;,&quot;WBC&quot;,AH.var) plot.name[! plot.name %in% colnames(sample_patient_A)] plot.info.cat &lt;- NULL for (kkk in 1:length(plot.name)) { print(kkk) plot.data &lt;- sample_patient_A plot.data$Plot &lt;- plot.data[, which(colnames(plot.data) == plot.name[kkk])] plot.data &lt;- plot.data[which(!is.na(plot.data$Plot)), ] plot.info.cat.sub &lt;- NULL for (i in 1:length(module.name)) { plot.data$ME_score &lt;- dd[module.name[i], plot.data$METs_D0_ID] %&gt;% as.numeric() sub &lt;- c(module.name[i], plot.name[kkk], cor(plot.data$ME_score, plot.data$Plot, method = &quot;spearman&quot;), cor.test(plot.data$ME_score, plot.data$Plot, method = &quot;spearman&quot;)$p.value, &quot;Spearman&#39;s correlation&quot;) plot.info.cat.sub &lt;- rbind(plot.info.cat.sub, sub) } plot.info.cat.sub &lt;- as.data.frame(plot.info.cat.sub) colnames(plot.info.cat.sub) &lt;- c(&quot;Module&quot;, &quot;Factor&quot;, &quot;Type&quot;,&quot;P&quot;, &quot;Test&quot;) plot.info.cat.sub &lt;- plot.info.cat.sub %&gt;% mutate(Type=as.numeric(Type), P=as.numeric(P), Padj=p.adjust(P,method=&quot;fdr&quot;)) plot.info.cat &lt;- rbind(plot.info.cat, plot.info.cat.sub) } plot.info.cat &lt;- plot.info.cat %&gt;% mutate(Tag=case_when(Type&lt;0&amp;P&lt;0.01 ~ &quot;Negative&quot;, Type&gt;0&amp;P&lt;0.01 ~ &quot;Positive&quot;, .default=&quot;notSig&quot; )) AH.var1=strsplit(AH.var,&quot;[.]&quot;) AH.result &lt;- c() for (i in 1:length(AH.var1)){ AH.result &lt;- c(AH.result,AH.var1[[i]][1]) } plot.info &lt;- plot.info.cat plot.info &lt;- plot.info %&gt;% tidyr::separate(Factor,sep=&quot;[.]&quot;,&quot;Factor&quot;) %&gt;% #dplyr::mutate(Factor=ifelse(Factor==&quot;A&quot;,&quot;AG&quot;,Factor)) dplyr::mutate(LogP=-log10(P), Module=factor(as.character(Module)), Factor=factor(as.character(Factor), levels = c(&quot;OS&quot;,&quot;EFS&quot;,&quot;RFS&quot;, &quot;Age&quot;,&quot;BMI&quot;,&quot;WBC&quot;,AH.result, &quot;Gender&quot;,&quot;HBP&quot;,&quot;Lineage&quot;,&quot;Subtype&quot;,&quot;d28CR&quot;))) write.table(plot.info %&gt;% dplyr::mutate(group=paste0(&quot;C&quot;,n)),paste0(&quot;result/Figure1/1C.maSigPro/cluster&quot;,n,&quot;.txt&quot;),quote=F,row.names=F,sep=&quot;\\t&quot;) p &lt;- ggplot(plot.info, aes(Factor, Module)) + geom_point(aes(size = LogP, colour = Tag, fill = Tag), shape = 16) + xlab(&quot;&quot;) + ylab(&quot;&quot;) p &lt;- p + ggthemes::theme_base() + scale_size(range = c(0,10)) p &lt;- p + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 15)) p &lt;- p + theme(axis.text.y = element_text(size = 5)) p &lt;- p + scale_colour_manual(values = c(Favorable = &quot;#00599F&quot;, Unfavorable = &quot;#D01910&quot;, Negative = &quot;#009632&quot;, Positive = &quot;#8f00b7&quot;, Sig = &quot;#ed7a00&quot;, Basal = &quot;#ea6c59&quot;, Classical = &quot;#1288a5&quot;, notSig = &quot;#CCCCCC&quot;)) + theme(plot.background = element_blank()) ggsave(paste0(&quot;result/Figure1/1C.maSigPro/cluster&quot;,n,&quot;_clinical.pdf&quot;),p,width=12,height = 8) } a_result &lt;- data.frame() for (i in 1:9) { a &lt;- data.table::fread(paste0(&quot;result/Figure1/1C.maSigPro/cluster&quot;,i,&quot;.txt&quot;)) %&gt;% as.data.frame() a_count &lt;- a %&gt;% dplyr::filter(P &lt; 0.01) %&gt;% dplyr::group_by(Factor) %&gt;% dplyr::summarise(n=n()) %&gt;% dplyr::filter(n &gt; length(unique(a$Module))/3) if (i &gt;= 8) { a_filter &lt;- a %&gt;% as.data.frame() %&gt;% dplyr::filter(Tag != &quot;notSig&quot; | Factor == &quot;CHOL&quot;) %&gt;% dplyr::filter(Factor %in% c(a_count$Factor,&quot;CHOL&quot;)) %&gt;% dplyr::arrange(P) %&gt;% dplyr::select(P,Factor,group,Tag) %&gt;% dplyr::distinct(Factor,.keep_all = T) }else { a_filter &lt;- a %&gt;% as.data.frame() %&gt;% dplyr::filter(Tag != &quot;notSig&quot;) %&gt;% dplyr::filter(Factor %in% c(a_count$Factor)) %&gt;% dplyr::arrange(P) %&gt;% dplyr::select(P,Factor,group,Tag) %&gt;% dplyr::distinct(Factor,.keep_all = T) } a_result &lt;- rbind(a_result,a_filter) } a_result &lt;- a_result %&gt;% dplyr::mutate(P=ifelse(P &lt; 1.401873e-14,1.401873e-14,P)) %&gt;% dplyr::arrange(desc(P)) %&gt;% dplyr::mutate(Factor=factor(Factor,levels=unique(Factor))) p1 &lt;- ggplot(a_result,aes(x=Factor,y=factor(1)))+ geom_point(aes(size=-log10(P),color=Tag))+ scale_color_manual(values=c(Negative = &quot;#009632&quot;, Positive = &quot;#8f00b7&quot;))+ coord_flip()+ facet_grid(group~.,scales = &quot;free&quot;,space=&quot;free&quot;,switch=&quot;x&quot;)+ theme_bw()+ theme(panel.grid = element_blank(),axis.text.x=element_blank(),axis.ticks.x = element_blank())+ labs(x=NULL,y=NULL) ggsave(&quot;result/Figure1/1C.clinical_all-v1022.pdf&quot;,p1,width=2.5,height = 8.5) 16.3 (S1 A) Clinical characteristics Clinical characteristics of all involved ALL patients. Age &gt;=65: aged, 40~64 middle age, 15~39: AYA (adolescent and young adult); BMI (body mass index) &lt;18.5: underweight, 18.5~23.9: normal, 24~27.9: overweight, &gt;= 28: fat. HBP is blood pressure over 140/90 mmHg; BM blasts and PB blasts are represented by blasts cells percentage in BM and PB, respectively. library(dplyr) library(ggplot2) #------------------------------------------------------------------------------- # Step 1: Load clinical data and set parameters #------------------------------------------------------------------------------- dat_sample &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() ## Clinical characteristics dat &lt;- dat_sample %&gt;% dplyr::mutate(BMI_Type = ifelse(BMI &lt; 18.5,&quot;Underweight&quot;, ifelse(BMI &gt;= 18.5 &amp; BMI &lt; 24,&quot;Normal&quot;, ifelse(BMI &gt;= 24 &amp; BMI &lt; 28,&quot;Overweight&quot;, ifelse(BMI &gt;= 28,&quot;Fat&quot;,NA))))) %&gt;% dplyr::mutate(Age_Type = ifelse(Age &gt;= 65,&quot;Aged&quot;, ifelse(Age &gt;= 40 &amp; Age &lt; 65,&quot;Middle&quot;, ifelse(Age &lt; 40 &amp; Age &gt;= 15,&quot;AYA&quot;,NA)))) %&gt;% dplyr::mutate(BM_Blast=as.numeric(BM_Blast)) %&gt;% dplyr::mutate(PB_Blast=as.numeric(PB_Blast)) %&gt;% dplyr::mutate(BM_Blast_Type=ifelse(BM_Blast &gt;= 90,&quot;&gt;90%&quot;, ifelse(BM_Blast &gt;= 20 &amp; BM_Blast &lt; 90,&quot;20%~90%&quot;, ifelse(BM_Blast &lt; 20,&quot;&lt;20%&quot;,NA)))) %&gt;% dplyr::mutate(PB_Blast_Type=ifelse(PB_Blast &gt;= 90,&quot;high&quot;, ifelse(PB_Blast &lt; 90,&quot;low&quot;,NA))) %&gt;% dplyr::rename(&quot;Sex&quot; = &quot;Gender&quot;) %&gt;% dplyr::select(Pid,Lineage,BMI_Type,Age_Type,Sex,HBP,BM_Blast_Type,PB_Blast_Type) dat_melt &lt;- reshape2::melt(dat,id=c(&quot;Pid&quot;,&quot;Lineage&quot;)) %&gt;% dplyr::group_by(Lineage,variable,value) %&gt;% dplyr::summarise(n=n()) %&gt;% dplyr::mutate(vv=paste0(value,&quot; (&quot;,n,&quot;)&quot;)) %&gt;% dplyr::mutate(n=ifelse(Lineage==&quot;T&quot;,-n,n)) %&gt;% dplyr::mutate(value=factor(value,levels=c(&quot;Fat&quot;,&quot;Overweight&quot;,&quot;Normal&quot;,&quot;Underweight&quot;,&quot;Aged&quot;,&quot;Middle&quot;,&quot;AYA&quot;,&quot;M&quot;,&quot;F&quot;,&quot;N&quot;,&quot;Y&quot;,&quot;20%~90%&quot;,&quot;&lt;20%&quot;,&quot;&gt;90%&quot;,&quot;low&quot;,&quot;high&quot;))) #------------------------------------------------------------------------------- # Step 2: Visualization #------------------------------------------------------------------------------- p &lt;- ggplot(dat_melt,aes(variable,n,fill=value))+ geom_bar(stat=&quot;identity&quot;,width=.7)+ geom_text(aes(label=vv),size=2,position = position_stack(vjust=0.5))+ theme_bw()+ theme(panel.border = element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = &quot;black&quot;))+ scale_fill_manual(values=c(&quot;Underweight&quot;=&quot;#FDBF6F&quot;,&quot;Normal&quot;=&quot;#00C1E3&quot;, &quot;Overweight&quot;=&quot;#FD6AB0&quot;,&quot;Fat&quot;=&quot;#E5E059&quot;,&quot;Aged&quot;=&quot;#E5E059&quot;,&quot;Middle&quot;=&quot;#00C1E3&quot;,&quot;AYA&quot;=&quot;#FD6AB0&quot;,&quot;M&quot;=&quot;#00C1E3&quot;,&quot;F&quot;=&quot;#FD6AB0&quot;,&quot;N&quot;=&quot;#00C1E3&quot;,&quot;Y&quot;=&quot;#FD6AB0&quot;,&quot;20%~90%&quot;=&quot;#E5E059&quot;,&quot;&gt;90%&quot;=&quot;#FD6AB0&quot;,&quot;&lt;20%&quot;=&quot;#00C1E3&quot;,&quot;low&quot;=&quot;#00C1E3&quot;,&quot;high&quot;=&quot;#FD6AB0&quot;,&quot;normal&quot;=&quot;#E5E059&quot;))+ geom_hline(yintercept=c(0), linetype = &#39;solid&#39;)+ coord_flip() ggsave(&quot;result/Figure1/S1A_ClinicalCharacteristics.pdf&quot;,p,width=20,height = 8) 16.4 (S1 B) Venn plot The Venn plot of all primary cases involved in each omics study. library(dplyr) library(VennDiagram) #------------------------------------------------------------------------------- # Step 1: Load data and set parameters #------------------------------------------------------------------------------- dat &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() ## serum dat_serum &lt;- dat ## cell dat_cell &lt;- dat %&gt;% dplyr::filter(!is.na(METc_BM_D0_ID)|!is.na(`METc_BM_MRD-_ID`)|!is.na(METc_PB_D0_ID)) ## RNA_seq dat_RNA &lt;- dat %&gt;% dplyr::filter(!is.na(RNA_ID)) #------------------------------------------------------------------------------- # Step 2: Venn Diagram #------------------------------------------------------------------------------- venn.plot &lt;- venn.diagram( x = list( Serum = dat_serum$Pid, Cell = dat_cell$Pid, RNA = dat_RNA$Pid ), filename = NULL, col = &quot;transparent&quot;, fill = c(&quot;#E6AB02&quot;, &quot;#1F78B4&quot;, &quot;#E7298A&quot;), alpha = 0.5, label.col = c(&quot;black&quot;, &quot;black&quot;, &quot;black&quot;, &quot;black&quot;, &quot;black&quot;, &quot;black&quot;, &quot;black&quot;), cex = 2.5, fontfamily = &quot;serif&quot;, fontface = &quot;bold&quot;, cat.default.pos = &quot;text&quot;, cat.col = c(&quot;black&quot;, &quot;black&quot;, &quot;black&quot;), cat.cex = 2.5, cat.fontfamily = &quot;serif&quot;, cat.dist = c(0.06, 0.06, 0.03), cat.pos = 0 ) pdf(&quot;result/Figure1/S1B_Venn.pdf&quot;,width=10,height = 10) grid.draw(venn.plot) dev.off() 16.5 (S1 C) Waterfall plot Left, the waterfall plot of genetic alterations in each ALL patients. The upper panel represents mutation events, the middle panel indicates the expression of Ik6 transcripts and the lower panel corresponds to fusion/rearrangement events. Right, the upper boxplots represent the alteration frequencies of gene sequence variations in each case, and the types of mutations of indicated genes. The lower boxplot shows the number of gene fusion/rearrangement events in this series. The genetic alterations were mainly detected by RNA-seq while Ik6 transcripts were identified by RT-PCR (For details, see Methods). library(dplyr) library(ComplexHeatmap) #------------------------------------------------------------------------------- # Step 1: Load data and filter genetic alterations #------------------------------------------------------------------------------- dd &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(!is.na(RNA_ID)) %&gt;% dplyr::select(Pid,Lineage,RNA_id_raw) %&gt;% dplyr::rename(&quot;RNA_id&quot;=&quot;RNA_id_raw&quot;,&quot;Subtype&quot;=&quot;Lineage&quot;) ## Fusion fusion_T &lt;- readxl::read_excel(&quot;raw_data/fusion_T_v0803.xlsx&quot;,skip=1) %&gt;% as.data.frame() %&gt;% dplyr::select(RNA_id,final_check) %&gt;% dplyr::filter(!is.na(final_check)) %&gt;% tidyr::separate_rows(final_check,sep=&quot;;&quot;) fusion_B &lt;- readxl::read_excel(&quot;raw_data/fusion_B_v0803.xlsx&quot;,skip=1) %&gt;% as.data.frame() %&gt;% dplyr::select(RNA_id,fusion_group) %&gt;% dplyr::filter(!is.na(fusion_group)) %&gt;% tidyr::separate_rows(fusion_group,sep=&quot;;&quot;) %&gt;% dplyr::rename(&quot;final_check&quot;=&quot;fusion_group&quot;) fusion &lt;- rbind(fusion_T,fusion_B) %&gt;% dplyr::filter(RNA_id %in% dd$RNA_id) %&gt;% dplyr::arrange(match(RNA_id,dd$RNA_id)) ## Mutation mutation_T &lt;- data.table::fread(&quot;raw_data/mutation_T_v1114_all.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(V2,V17,V19) %&gt;% dplyr::rename(&quot;ID&quot;=&quot;V2&quot;,&quot;Gene.refGene&quot;=&quot;V17&quot;,&quot;ExonicFunc.refGene&quot;=&quot;V19&quot;) %&gt;% dplyr::select(ID,`Gene.refGene`,`ExonicFunc.refGene`) %&gt;% dplyr::mutate(`ExonicFunc.refGene`= ifelse(`ExonicFunc.refGene` %in% c(&quot;frameshift deletion&quot;,&quot;frameshift insertion&quot;,&quot;frameshift substitution&quot;),&quot;Frameshift&quot;, ifelse(`ExonicFunc.refGene` %in% c(&quot;nonframeshift deletion&quot;,&quot;nonframeshift insertion&quot;,&quot;nonframeshift substitution&quot;),&quot;Nonframeshift&quot;, ifelse(`ExonicFunc.refGene` %in% &quot;.&quot;,&quot;Splice&quot;, ifelse(`ExonicFunc.refGene` %in% &quot;nonsynonymous SNV&quot;,&quot;Missense&quot;, ifelse(`ExonicFunc.refGene`==&quot;startloss&quot;,&quot;Startloss&quot;, ifelse(`ExonicFunc.refGene`==&quot;stopgain&quot;,&quot;Stopgain&quot;, ifelse(`ExonicFunc.refGene`==&quot;synonymous SNV&quot;,&quot;Silent&quot;,`ExonicFunc.refGene`)))))))) %&gt;% unique() %&gt;% dplyr::mutate(`Gene.refGene` = ifelse(`Gene.refGene` %in% c(&quot;IDH1&quot;,&quot;IDH2&quot;),&quot;IDH1/2&quot;,`Gene.refGene`)) %&gt;% dplyr::group_by(Gene.refGene) mutation_B &lt;- data.table::fread(&quot;raw_data/mutation_B_v1114_all.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(V2,V17,V19) %&gt;% dplyr::rename(&quot;ID&quot;=&quot;V2&quot;,&quot;Gene.refGene&quot;=&quot;V17&quot;,&quot;ExonicFunc.refGene&quot;=&quot;V19&quot;) %&gt;% dplyr::select(ID,`Gene.refGene`,`ExonicFunc.refGene`) %&gt;% dplyr::mutate(`ExonicFunc.refGene`= ifelse(`ExonicFunc.refGene` %in% c(&quot;frameshift deletion&quot;,&quot;frameshift insertion&quot;,&quot;frameshift substitution&quot;),&quot;Frameshift&quot;, ifelse(`ExonicFunc.refGene` %in% c(&quot;nonframeshift deletion&quot;,&quot;nonframeshift insertion&quot;,&quot;nonframeshift substitution&quot;),&quot;Nonframeshift&quot;, ifelse(`ExonicFunc.refGene` %in% &quot;.&quot;,&quot;Splice&quot;, ifelse(`ExonicFunc.refGene` %in% &quot;nonsynonymous SNV&quot;,&quot;Missense&quot;, ifelse(`ExonicFunc.refGene`==&quot;startloss&quot;,&quot;Startloss&quot;, ifelse(`ExonicFunc.refGene`==&quot;stopgain&quot;,&quot;Stopgain&quot;, ifelse(`ExonicFunc.refGene`==&quot;synonymous SNV&quot;,&quot;Silent&quot;,`ExonicFunc.refGene`)))))))) %&gt;% unique() %&gt;% dplyr::mutate(`Gene.refGene` = ifelse(`Gene.refGene` %in% c(&quot;IDH1&quot;,&quot;IDH2&quot;),&quot;IDH1/2&quot;,`Gene.refGene`)) %&gt;% dplyr::group_by(Gene.refGene) mutation &lt;- rbind(mutation_T,mutation_B) %&gt;% dplyr::filter(ID %in% dd$RNA_id) %&gt;% dplyr::arrange(match(ID,dd$RNA_id)) %&gt;% as.data.frame() #------------------------------------------------------------------------------- # Step 2: Set sample order and set parameters #------------------------------------------------------------------------------- ## Set sample order sample_order &lt;- mutation %&gt;% dplyr::full_join(fusion,by=c(&quot;ID&quot;=&quot;RNA_id&quot;)) %&gt;% dplyr::right_join(dd,by=c(&quot;ID&quot;=&quot;RNA_id&quot;)) %&gt;% dplyr::arrange(match(Gene.refGene,c(&quot;NOTCH1&quot;,&quot;KMT2C&quot;,&quot;NRAS&quot;,&quot;RUNX1&quot;,&quot;SETD2&quot;,&quot;CTCF&quot;,&quot;DNMT3A&quot;,&quot;ETV6&quot;,&quot;FLT3&quot;,&quot;IDH1/2&quot;,&quot;KMT2D&quot;,&quot;PHF6&quot;,&quot;KMT2A&quot;,&quot;PAX5&quot;,&quot;TP53&quot;,&quot;JAK3&quot;,&quot;NCOR2&quot;,&quot;SUZ12&quot;,&quot;ARID1B&quot;,&quot;ATRX&quot;,&quot;IKZF1&quot;,&quot;KRAS&quot;,&quot;PTEN&quot;,&quot;EP300&quot;,&quot;SETD1B&quot;,&quot;ASXL1&quot;,&quot;ARID1A&quot;,&quot;NF1&quot;,&quot;JAK1&quot;,&quot;MGA&quot;,&quot;PTPN11&quot;,&quot;SACS&quot;,&quot;SH2B3&quot;,&quot;STAT5B&quot;,&quot;TET2&quot;))) %&gt;% dplyr::arrange(match(final_check,c(&quot;BCR-ABL1&quot;,&quot;ZNF384 fusion&quot;,&quot;DUX4 rearrangement&quot;,&quot;TCF3-PBX1&quot;,&quot;KMT2A rearrangement&quot;,&quot;PAX5-ETV6&quot;,&quot;MEF2D rearrangement&quot;,&quot;BCL2/MYC&quot;,&quot;MLLT10 rearrangement&quot;,&quot;SET-NUP214&quot;,&quot;STIL-TAL1&quot;))) %&gt;% dplyr::arrange(match(Subtype,c(&quot;B&quot;,&quot;T&quot;))) %&gt;% dplyr::distinct(ID,.keep_all = T) %&gt;% dplyr::mutate(Lineage=ifelse(Subtype==&quot;B&quot;,&quot;BCP-ALL&quot;, ifelse(Subtype==&quot;T&quot;,&quot;T-ALL&quot;,Subtype))) ## Ik6 Ik6 &lt;- readxl::read_excel(&quot;raw_data/Sample_RNA_190_fusion_mutation_v1130.xlsx&quot;) %&gt;% dplyr::filter(RNA_id %in% dd$RNA_id) %&gt;% dplyr::select(RNA_id,`备注...20`) %&gt;% dplyr::arrange(match(RNA_id,sample_order$RNA_id)) %&gt;% dplyr::mutate(Ik6=ifelse(is.na(`备注...20`),&quot;no&quot;, ifelse(`备注...20` %in% c(&quot;发现TLX1基因表达&quot;,&quot;发现TLX3基因表达&quot;,&quot;发现IKZF1基因Ik8转录本&quot;),&quot;no&quot;,&quot;yes&quot;))) ## Fusion clinical_fusion_dcast &lt;- reshape2::dcast(fusion,RNA_id ~ final_check) %&gt;% dplyr::right_join(dd,by=c(&quot;RNA_id&quot;)) %&gt;% dplyr::select(-Pid,-Subtype) %&gt;% tibble::column_to_rownames(&quot;RNA_id&quot;) %&gt;% dplyr::arrange(`STIL-TAL1`) %&gt;% dplyr::arrange(`SET-NUP214`) %&gt;% dplyr::arrange(`MLLT10 rearrangement`) %&gt;% dplyr::arrange(`BCL2/MYC`) %&gt;% dplyr::arrange(`MEF2D rearrangement`) %&gt;% dplyr::arrange(`PAX5-ETV6`) %&gt;% dplyr::arrange(`KMT2A rearrangement`) %&gt;% dplyr::arrange(`TCF3-PBX1`) %&gt;% dplyr::arrange(`DUX4 rearrangement`) %&gt;% dplyr::arrange(`ZNF384 fusion`) %&gt;% dplyr::arrange(`BCR-ABL1`) clinical_fusion_dcast[is.na(clinical_fusion_dcast)] &lt;- 0 clinical_fusion_dcast[clinical_fusion_dcast != 0] &lt;- 1 d_fusion &lt;- t(clinical_fusion_dcast) %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;fusion&quot;) %&gt;% dplyr::arrange(match(fusion,c(&quot;BCR-ABL1&quot;,&quot;ZNF384 fusion&quot;,&quot;DUX4 rearrangement&quot;,&quot;TCF3-PBX1&quot;,&quot;KMT2A rearrangement&quot;,&quot;PAX5-ETV6&quot;,&quot;MEF2D rearrangement&quot;,&quot;BCL2/MYC&quot;,&quot;MLLT10 rearrangement&quot;,&quot;SET-NUP214&quot;,&quot;STIL-TAL1&quot;))) %&gt;% dplyr::filter(fusion %in% c(&quot;BCR-ABL1&quot;,&quot;ZNF384 fusion&quot;,&quot;DUX4 rearrangement&quot;,&quot;TCF3-PBX1&quot;,&quot;KMT2A Group&quot;,&quot;PAX5-ETV6&quot;,&quot;MEF2D rearrangement&quot;,&quot;BCL2/MYC&quot;,&quot;MLLT10 rearrangement&quot;,&quot;SET-NUP214&quot;,&quot;STIL-TAL1&quot;,&quot;KMT2A rearrangement&quot;)) %&gt;% tibble::column_to_rownames(&quot;fusion&quot;) %&gt;% dplyr::select(unique(sample_order$ID)) %&gt;% dplyr::mutate_if(is.character,as.numeric) d_fusion_temp &lt;- t(d_fusion) d_fusion_temp[d_fusion_temp!=0] &lt;- 1 num=colSums(d_fusion_temp) rownames(d_fusion) &lt;- paste0(rownames(d_fusion),&quot; (n=&quot;,num,&quot;)&quot;) #------------------------------------------------------------------------------- # Step 3: Waterfall Plot #------------------------------------------------------------------------------- ## Right annotation fusion d &lt;- d_fusion %&gt;% tibble::rownames_to_column(var=&quot;fusion&quot;) d_fusion_melt &lt;- reshape2::melt(d) %&gt;% dplyr::group_by(fusion,value) %&gt;% dplyr::summarise(n=n()) %&gt;% dplyr::filter(value != 0) %&gt;% dplyr::rename(&quot;number&quot;=&quot;value&quot;) %&gt;% dplyr::rename(&quot;value&quot;=&quot;n&quot;) d_fusion_dcast &lt;- reshape2::dcast(d_fusion_melt,fusion ~ number) %&gt;% dplyr::arrange(match(fusion,rownames(d_fusion))) %&gt;% tibble::column_to_rownames(&quot;fusion&quot;) d_fusion_dcast[is.na(d_fusion_dcast)] &lt;- 0 right_annotation_fusion &lt;- rowAnnotation(freq=anno_barplot(100*d_fusion_dcast/182, gp=gpar(fill=c(&quot;#005B1D&quot;),col=NA),width = unit(2, &quot;cm&quot;))) fusion_annotation &lt;- Heatmap( d_fusion,right_annotation = right_annotation_fusion, rect_gp = gpar(col = &quot;gray&quot;, lwd = 2), col=c(&quot;#EEEEEE&quot;,&quot;#444444&quot;), height=unit(6,&quot;cm&quot;),border = TRUE, cluster_columns = F,cluster_rows = F,column_title = NULL, show_column_names = F, row_names_gp = gpar(fontsize = 10),column_names_gp=gpar(fontsize=6)) ## IK6 d_ik6 &lt;- Ik6 %&gt;% dplyr::select(RNA_id,Ik6) %&gt;% tibble::column_to_rownames(&quot;RNA_id&quot;) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::select(names(d_fusion)) ik6_annotation &lt;- Heatmap( d_ik6,height=unit(2,&quot;cm&quot;),border=TRUE, rect_gp = gpar(col = &quot;gray&quot;, lwd = 2), col=c(&quot;#EEEEEE&quot;,&quot;#EA644C&quot;)) ### Mutation hit_num &lt;- mutation %&gt;% dplyr::group_by(ID,`Gene.refGene`) %&gt;% dplyr::summarise(n=n()) %&gt;% dplyr::filter(n&gt;1) mutation &lt;- mutation %&gt;% dplyr::left_join(hit_num,by=c(&quot;ID&quot;,&quot;Gene.refGene&quot;)) %&gt;% dplyr::mutate(`ExonicFunc.refGene`=ifelse(!is.na(n),&quot;Multiple&quot;,`ExonicFunc.refGene`)) %&gt;% dplyr::select(-n) %&gt;% unique() %&gt;% dplyr::rename(&quot;RNA_id&quot;=&quot;ID&quot;) %&gt;% dplyr::arrange(match(Gene.refGene,c(&quot;NOTCH1&quot;,&quot;KMT2C&quot;,&quot;NRAS&quot;,&quot;RUNX1&quot;,&quot;SETD2&quot;,&quot;CTCF&quot;,&quot;DNMT3A&quot;,&quot;ETV6&quot;,&quot;FLT3&quot;,&quot;IDH1/2&quot;,&quot;KMT2D&quot;,&quot;PHF6&quot;,&quot;KMT2A&quot;,&quot;PAX5&quot;,&quot;TP53&quot;,&quot;JAK3&quot;,&quot;NCOR2&quot;,&quot;SUZ12&quot;,&quot;ARID1B&quot;,&quot;ATRX&quot;,&quot;IKZF1&quot;,&quot;KRAS&quot;,&quot;PTEN&quot;,&quot;EP300&quot;,&quot;SETD1B&quot;,&quot;ASXL1&quot;,&quot;ARID1A&quot;,&quot;NF1&quot;,&quot;JAK1&quot;,&quot;MGA&quot;,&quot;PTPN11&quot;,&quot;SACS&quot;,&quot;SH2B3&quot;,&quot;STAT5B&quot;,&quot;TET2&quot;))) mutation_gene_filter &lt;- mutation %&gt;% dplyr::select(RNA_id,Gene.refGene) %&gt;% unique() %&gt;% dplyr::group_by(`Gene.refGene`) %&gt;% dplyr::summarise(n=n()) %&gt;% dplyr::filter(n&gt;4) mutation_sort &lt;- rev(names(sort(table(mutation %&gt;% filter(`Gene.refGene` %in% mutation_gene_filter$Gene.refGene) %&gt;% pull(Gene.refGene))))) mutation &lt;- mutation %&gt;% dplyr::filter(`Gene.refGene` %in% mutation_gene_filter$Gene.refGene) %&gt;% as.data.frame() %&gt;% dplyr::distinct(RNA_id,Gene.refGene,.keep_all = T) mutation_dcast &lt;- reshape2::dcast(mutation,RNA_id ~ `Gene.refGene`) %&gt;% dplyr::right_join(sample_order,by=c(&quot;RNA_id&quot;=&quot;ID&quot;)) %&gt;% tibble::column_to_rownames(&quot;RNA_id&quot;) %&gt;% dplyr::select(all_of(mutation_sort)) mutation_dcast[is.na(mutation_dcast)] &lt;- 0 mutation_dcast[mutation_dcast==&quot;Missense&quot;] &lt;- 1 mutation_dcast[mutation_dcast==&quot;Frameshift&quot;] &lt;- 2 mutation_dcast[mutation_dcast==&quot;Nonframeshift&quot;] &lt;- 3 mutation_dcast[mutation_dcast==&quot;Silent&quot;] &lt;- 4 mutation_dcast[mutation_dcast==&quot;Splice&quot;] &lt;- 5 mutation_dcast[mutation_dcast==&quot;Stopgain&quot;] &lt;- 6 mutation_dcast[mutation_dcast==&quot;Multiple&quot;] &lt;- 7 mutation_dcast1 &lt;- mutation_dcast %&gt;% dplyr::mutate_if(is.character,as.numeric) %&gt;% rowwise() %&gt;% dplyr::select(c(&quot;NOTCH1&quot;,&quot;NRAS&quot;,&quot;SETD2&quot;,&quot;ETV6&quot;,&quot;RUNX1&quot;, &quot;PHF6&quot;,&quot;KMT2D&quot;,&quot;PAX5&quot;,&quot;IDH1/2&quot;,&quot;TP53&quot;,&quot;JAK3&quot;, &quot;SUZ12&quot;,&quot;DNMT3A&quot;,&quot;IKZF1&quot;,&quot;KRAS&quot;, &quot;EP300&quot;,&quot;SETD1B&quot;,&quot;NCOR2&quot;,&quot;FLT3&quot;,&quot;ARID1B&quot;,&quot;ASXL1&quot;,&quot;ARID1A&quot;, &quot;NF1&quot;,&quot;JAK1&quot;,&quot;SH2B3&quot;,&quot;TET2&quot;,&quot;MGA&quot;,&quot;PTPN11&quot;,&quot;PTEN&quot;,&quot;SACS&quot;, &quot;STAT5B&quot;),everything()) %&gt;% as.data.frame() rownames(mutation_dcast1) &lt;- rownames(mutation_dcast) mutation_dcast &lt;- mutation_dcast1 mutation_dcast_temp &lt;- mutation_dcast mutation_dcast_temp[mutation_dcast_temp!=0] &lt;- 1 num=colSums(mutation_dcast_temp) names(mutation_dcast) &lt;- paste0(names(mutation_dcast),&quot; (n=&quot;,num,&quot;)&quot;) d_mutation &lt;- t(mutation_dcast) %&gt;% as.data.frame() %&gt;% dplyr::select(sample_order$ID) ## Right annotation d &lt;- d_mutation %&gt;% tibble::rownames_to_column(var=&quot;mutation&quot;) d_mutation_melt &lt;- reshape2::melt(d) %&gt;% dplyr::group_by(mutation,value) %&gt;% dplyr::summarise(n=n()) %&gt;% dplyr::filter(value != 0) %&gt;% dplyr::rename(&quot;number&quot;=&quot;value&quot;) %&gt;% dplyr::rename(&quot;value&quot;=&quot;n&quot;) d_mutation_dcast &lt;- reshape2::dcast(d_mutation_melt,mutation ~ number) %&gt;% dplyr::arrange(match(mutation,rownames(d_mutation))) %&gt;% tibble::column_to_rownames(&quot;mutation&quot;) d_mutation_dcast[is.na(d_mutation_dcast)] &lt;- 0 right_annotation &lt;- rowAnnotation( freq=anno_barplot(100*d_mutation_dcast/182, gp=gpar(fill=c(&quot;#3987CC&quot;,&quot;#DB3D3D&quot;,&quot;#663FFB&quot;,&quot;#FF7F0E&quot;,&quot;#CC66FF&quot;,&quot;#8B564C&quot;,&quot;#339933&quot;),col=NA), width = unit(2, &quot;cm&quot;))) ## Top annotation d_mutation_melt_col &lt;- reshape2::melt(d) %&gt;% dplyr::group_by(variable,value) %&gt;% dplyr::summarise(n=n()) %&gt;% dplyr::rename(&quot;number&quot;=&quot;value&quot;) %&gt;% dplyr::rename(&quot;value&quot;=&quot;n&quot;) d_mutation_dcast_col &lt;- reshape2::dcast(d_mutation_melt_col,variable ~ number) %&gt;% dplyr::arrange(match(variable,colnames(d_mutation))) %&gt;% tibble::column_to_rownames(&quot;variable&quot;) %&gt;% dplyr::select(-`0`) d_mutation_dcast_col[is.na(d_mutation_dcast_col)] &lt;- 0 top_annotation &lt;- columnAnnotation( freq=anno_barplot(d_mutation_dcast_col,gp=gpar(fill=c(&quot;#3987CC&quot;,&quot;#DB3D3D&quot;,&quot;#663FFB&quot;,&quot;#FF7F0E&quot;,&quot;#CC66FF&quot;,&quot;#8B564C&quot;,&quot;#339933&quot;),col=NA),height = unit(2, &quot;cm&quot;)), Lineage=sample_order$Lineage,col=list(Lineage=c(&quot;BCP-ALL&quot;=&quot;#E5E059&quot;,&quot;T-ALL&quot;=&quot;#4B0082&quot;))) mutation_annotation &lt;- Heatmap( d_mutation,height=unit(18,&quot;cm&quot;), rect_gp = gpar(col = &quot;gray&quot;, lwd = 2), col=c(&quot;#EEEEEE&quot;,&quot;#3987CC&quot;,&quot;#DB3D3D&quot;,&quot;#663FFB&quot;,&quot;#FF7F0E&quot;,&quot;#CC66FF&quot;,&quot;#8B564C&quot;,&quot;#339933&quot;), cluster_columns = F,cluster_rows = F, border = TRUE,column_title = NULL,show_column_names = FALSE, top_annotation=top_annotation,right_annotation = right_annotation, row_names_gp = gpar(fontsize = 8)) pdf(&quot;result/Figure1/S1C_waterfall.pdf&quot;,width=12,height = 12) mutation_annotation %v% ik6_annotation %v% fusion_annotation dev.off() 16.6 (S1 D) Scatter plot A scatter plot suggests the existence of a potential relationship between aging and key mutations. The red line indicated the median age. library(dplyr) library(ggplot2) sample &lt;- readxl::read_excel(&quot;raw_data/Supplementary Tables.xlsx&quot;,sheet=1,skip=1) %&gt;% as.data.frame() %&gt;% filter(!is.na(RNA_ID_raw)) %&gt;% select(RNA_ID_raw,Age) ## mutation mutation_T &lt;- data.table::fread(&quot;raw_data/mutation_T_v1114_all.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(V2,V17,V19) %&gt;% dplyr::rename(&quot;ID&quot;=&quot;V2&quot;,&quot;Gene.refGene&quot;=&quot;V17&quot;,&quot;ExonicFunc.refGene&quot;=&quot;V19&quot;) %&gt;% dplyr::select(ID,`Gene.refGene`,`ExonicFunc.refGene`) %&gt;% dplyr::mutate(`ExonicFunc.refGene`=ifelse(`ExonicFunc.refGene` %in% c(&quot;frameshift deletion&quot;,&quot;frameshift insertion&quot;,&quot;frameshift substitution&quot;),&quot;Frameshift&quot;, ifelse(`ExonicFunc.refGene` %in% c(&quot;nonframeshift deletion&quot;,&quot;nonframeshift insertion&quot;,&quot;nonframeshift substitution&quot;),&quot;Nonframeshift&quot;, ifelse(`ExonicFunc.refGene` %in% &quot;.&quot;,&quot;Splice&quot;, ifelse(`ExonicFunc.refGene` %in% &quot;nonsynonymous SNV&quot;,&quot;Missense&quot;, ifelse(`ExonicFunc.refGene`==&quot;startloss&quot;,&quot;Startloss&quot;, ifelse(`ExonicFunc.refGene`==&quot;stopgain&quot;,&quot;Stopgain&quot;, ifelse(`ExonicFunc.refGene`==&quot;synonymous SNV&quot;,&quot;Silent&quot;,`ExonicFunc.refGene`)))))))) %&gt;% unique() %&gt;% dplyr::mutate(`Gene.refGene` = ifelse(`Gene.refGene` %in% c(&quot;IDH1&quot;,&quot;IDH2&quot;),&quot;IDH1/2&quot;,`Gene.refGene`)) %&gt;% dplyr::group_by(Gene.refGene) mutation_B &lt;- data.table::fread(&quot;raw_data/mutation_B_v1114_all.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(V2,V17,V19) %&gt;% dplyr::rename(&quot;ID&quot;=&quot;V2&quot;,&quot;Gene.refGene&quot;=&quot;V17&quot;,&quot;ExonicFunc.refGene&quot;=&quot;V19&quot;) %&gt;% dplyr::select(ID,`Gene.refGene`,`ExonicFunc.refGene`) %&gt;% dplyr::mutate(`ExonicFunc.refGene`=ifelse(`ExonicFunc.refGene` %in% c(&quot;frameshift deletion&quot;,&quot;frameshift insertion&quot;,&quot;frameshift substitution&quot;),&quot;Frameshift&quot;, ifelse(`ExonicFunc.refGene` %in% c(&quot;nonframeshift deletion&quot;,&quot;nonframeshift insertion&quot;,&quot;nonframeshift substitution&quot;),&quot;Nonframeshift&quot;, ifelse(`ExonicFunc.refGene` %in% &quot;.&quot;,&quot;Splice&quot;, ifelse(`ExonicFunc.refGene` %in% &quot;nonsynonymous SNV&quot;,&quot;Missense&quot;, ifelse(`ExonicFunc.refGene`==&quot;startloss&quot;,&quot;Startloss&quot;, ifelse(`ExonicFunc.refGene`==&quot;stopgain&quot;,&quot;Stopgain&quot;, ifelse(`ExonicFunc.refGene`==&quot;synonymous SNV&quot;,&quot;Silent&quot;,`ExonicFunc.refGene`)))))))) %&gt;% unique() %&gt;% dplyr::mutate(`Gene.refGene` = ifelse(`Gene.refGene` %in% c(&quot;IDH1&quot;,&quot;IDH2&quot;),&quot;IDH1/2&quot;,`Gene.refGene`)) %&gt;% dplyr::group_by(Gene.refGene) mutation &lt;- rbind(mutation_T,mutation_B) %&gt;% dplyr::filter(ID %in% sample$RNA_ID_raw) %&gt;% as.data.frame() %&gt;% select(ID,Gene.refGene) %&gt;% unique() %&gt;% left_join(sample,by=c(&quot;ID&quot;=&quot;RNA_ID_raw&quot;)) %&gt;% filter(`Gene.refGene` %in% c(&quot;NOTCH1&quot;,&quot;NRAS&quot;,&quot;SETD2&quot;,&quot;ETV6&quot;,&quot;RUNX1&quot;,&quot;PHF6&quot;,&quot;KMT2D&quot;,&quot;PAX5&quot;,&quot;IDH1/2&quot;,&quot;TP53&quot;)) mutation_median &lt;- mutation %&gt;% group_by(Gene.refGene) %&gt;% summarise(m=median(Age),n=n()) %&gt;% arrange(m) %&gt;% mutate(tt=paste0(Gene.refGene,&quot;(m=&quot;,m,&quot;;n=&quot;,n,&quot;)&quot;)) mutation_sort &lt;- mutation %&gt;% left_join(mutation_median,by=&quot;Gene.refGene&quot;) %&gt;% arrange(match(Gene.refGene,mutation_median$Gene.refGene)) %&gt;% mutate(tt=factor(tt,levels=unique(tt))) %&gt;% arrange(Age) %&gt;% mutate(ID=factor(ID,levels=unique(ID))) p &lt;- ggplot(mutation_sort,aes(ID,Age))+ geom_point()+ facet_wrap(vars(tt),nrow=1,scales = &quot;free_x&quot;)+ theme_bw()+ theme(axis.text.x=element_blank(),axis.ticks.x=element_blank())+ labs(x=NULL) ggsave(&quot;result/Figure1/S1D_rna_age_mutation.pdf&quot;,p,width=8,height = 3) 16.7 (S2 A) PCA A substantial metabolic disturbance is observed in the serum of BCP-ALL/T-ALL (n=180) compared to HC (n=164), and there is no distinguishable boundary between lineage B and T ALL. library(dplyr) library(ggplot2) #------------------------------------------------------------------------------- # Step 1: Load patient&#39;s cell and serum metabolomics data #------------------------------------------------------------------------------- clinical &lt;- data.table::fread(&quot;raw_data/clinical_all_v240328.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(group %in% c(&quot;A&quot;,&quot;HC&quot;)) %&gt;% dplyr::arrange(match(Lineage,c(&quot;B&quot;,&quot;T&quot;))) %&gt;% dplyr::arrange(group) dat &lt;- data.table::fread(&quot;raw_data/serum_raw_sva_data_v240328.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::select(clinical$METs_ID) #------------------------------------------------------------------------------- # Step 2: PCA #------------------------------------------------------------------------------- dat &lt;- log2(dat+1) group &lt;- clinical$Lineage pca &lt;- stats::prcomp(t(dat), center = TRUE, scale. = TRUE) variance = pca$sdev^2/sum(pca$sdev^2) pca.data = data.frame(pca$x,group=group,label=rownames(pca$x)) p2 &lt;- ggplot2::ggplot(pca.data,ggplot2::aes(PC1,PC2,color=group))+ ggplot2::geom_point()+ ggplot2::stat_ellipse( linetype = 2, size = 0.5)+ ggplot2::theme_bw()+ scale_color_manual(values=c(&quot;#E5E059&quot;,&quot;#007DDB&quot;,&quot;#4B0082&quot;))+ ggplot2::theme(panel.grid.major = ggplot2::element_blank(),panel.grid.minor = ggplot2::element_blank())+ ggplot2::labs(x=paste0(&quot;PC1 (&quot;,signif(variance[1]*100,3),&quot;%)&quot;), y=paste0(&quot;PC2 (&quot;,signif(variance[2]*100,3),&quot;%)&quot;)) ggsave(&quot;result/Figure1/S2A_PCA.pdf&quot;,p2,width=5,height = 4) 16.8 (S2 B) Volcano Plot The volcano plot shows the distribution of differential metabolites. Noteworthy among the elevated metabolites were primary bile acids and their derivatives, whereas various carnitines were diminished. The dash line on the x-axis represents a fold change of 1.5 between BCP-ALL/T-ALL and HC, while the dash line on the y-axis represents adjusted P-value of 0.05. library(dplyr) library(ggplot2) library(openxlsx) library(ggrepel) library(MNet) #------------------------------------------------------------------------------- # Step 1: Load data and set parameters #------------------------------------------------------------------------------ # Data input for all clinical data kid &lt;- data.table::fread(&quot;raw_data/serum_metabolites_id_v240328.txt&quot;) %&gt;% as.data.frame() clinical &lt;- data.table::fread(&quot;raw_data/clinical_all_v240328.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(group %in% c(&quot;A&quot;,&quot;HC&quot;)) # Differential metabolites datRAW &lt;- data.table::fread(&quot;raw_data/serum_raw_sva_data_v240328.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::select(clinical$METs_ID) #------------------------------------------------------------------------------- # Step 2: Conduct variance analysis #------------------------------------------------------------------------------- group &lt;- clinical$group group[group==&quot;A&quot;] &lt;- &quot;tumor&quot; group[group==&quot;HC&quot;] &lt;- &quot;normal&quot; diff_result &lt;- DM(datRAW,group) write.table(diff_result,&quot;result/Figure1/AvsHC.txt&quot;,quote=F,row.names=T,sep=&quot;\\t&quot;) #------------------------------------------------------------------------------- # Step 3: Volcano plot #------------------------------------------------------------------------------- mydata &lt;- data.table::fread(&quot;result/Figure1/AvsHC.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::left_join(kid,by=c(&quot;Name&quot;=&quot;query&quot;)) %&gt;% dplyr::mutate( Condition=ifelse(Fold_change &gt;= 3/2 &amp; Padj_wilcox&lt; 0.05,&quot;sig up&quot;, ifelse(Fold_change &lt;= 2/3 &amp; Padj_wilcox &lt; 0.05,&quot;sig down&quot;,&quot;no sig&quot;))) %&gt;% dplyr::mutate(super.class=factor(super.class)) mydata_filter &lt;- mydata %&gt;% dplyr::filter(Condition %in% c(&quot;sig up&quot;,&quot;sig down&quot;)) write.table(mydata_filter,&quot;result/Figure1/AvsHC_diff.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) bile_car &lt;- subset(mydata,mydata$Padj_wilcox &lt; 0.05 &amp; (mydata$Fold_change &gt; 1.5|mydata$Fold_change &lt; 2/3)) %&gt;% mutate(carnitines = ifelse(grepl(&quot;carniti&quot;,Name),&quot;carnitines&quot;,NA)) %&gt;% dplyr::filter(main.class == &quot;Bile acids&quot;| PATHWAY==&quot;Primary bile acid biosynthesis&quot;|carnitines==&quot;carnitines&quot;) %&gt;% mutate(text.label=ifelse(main.class==&quot;&quot;,&quot;&quot;,Name)) cols &lt;- c(&quot;Amino acids and peptides&quot; =&quot;#1B9E77&quot;, Carbohydrates=&quot;#D95F02&quot;,&quot;Cofactors and Vitamins&quot;=&quot;#7570B3&quot;, Energy=&quot;#E7298A&quot;,Lipids=&quot;#66A61E&quot;,Nucleotides=&quot;#E6AB02&quot;, Other=&quot;#A6761D&quot;,Xenobiotics=&quot;#666666&quot;) (p2 &lt;- ggplot(mydata,aes(log2(Fold_change),-log10(Padj_wilcox),color=super.class))+ geom_point(size=2)+ scale_colour_manual(&quot;super.class&quot;, values=cols)+ geom_vline(xintercept=c(-log2(1.5),log2(1.5)), linetype = &#39;dashed&#39;,color=&quot;gray&quot;)+ geom_hline(yintercept = -log10(0.05),linetype=&#39;dashed&#39;,color=&quot;gray&quot;)+ theme_bw()+ geom_text_repel(data =bile_car,aes(label=text.label), size=2,max.overlaps = Inf)+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ labs(x=&quot;log2(FoldChange)&quot;,y=&quot;-log10(Padj)&quot;, title=&quot;Differential metabolites&quot;)) ggsave(p2,filename = &quot;result/Figure1/S2B_Volcano.pdf&quot;,width=13,height=9) 16.9 (S2 C) MSEA Metabolite set enrichment analysis (MSEA) for BCP-ALL/T-ALL vs. HC reveals a significant upregulation of primary bile acid metabolism in ALL serum. library(dplyr) library(MNet) library(ggplot2) #------------------------------------------------------------------------------- # Step 1: Load data and set parameters #------------------------------------------------------------------------------ clinical &lt;- data.table::fread(&quot;raw_data/clinical_all_v240328.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(group %in% c(&quot;A&quot;,&quot;HC&quot;)) kid &lt;- data.table::fread(&quot;raw_data/serum_metabolites_id_v240328.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(KEGG=ifelse(KEGG==&quot;None&quot;,query,KEGG)) dat_allvsHC &lt;- data.table::fread(&quot;raw_data/serum_raw_sva_data_v240328.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::select(clinical$METs_ID) #------------------------------------------------------------------------------- # Step 2: Conduct variance analysis #------------------------------------------------------------------------------- group &lt;- clinical$group group[which(group==&quot;A&quot;)] &lt;- &quot;tumor&quot; group[which(group==&quot;HC&quot;)] &lt;- &quot;normal&quot; mlimma_result &lt;- mlimma(log2(dat_allvsHC+1),group) %&gt;% dplyr::inner_join(kid,by=c(&quot;name&quot;=&quot;query&quot;)) %&gt;% dplyr::arrange(desc(logFC)) %&gt;% dplyr::distinct(KEGG,.keep_all = TRUE) Ranks_all &lt;- mlimma_result$logFC names(Ranks_all) &lt;- mlimma_result$KEGG #------------------------------------------------------------------------------- # Step 3: MSEA #------------------------------------------------------------------------------- set.seed(20) p &lt;- pMSEA(&quot;Primary bile acid biosynthesis&quot;,Ranks_all,gseaParam=0.75,nPermSimple=1000,out=&quot;metabolite&quot;) ggsave(&quot;result/Figure1/S2C_Primary_bile_acid.pdf&quot;,p,width=5,height = 4) 16.10 (S2 D) Ageing-related metabolites Ageing-related metabolites in ALL and 6 of them (with text denoted) were independent of therapy. The upper left summarizes the number of ALL specific ageing metabolites that excluded ageing-related metabolites in healthy at each time points. #------------------------------------------------------------------------------- # Step 1: Ageing-related metabolites in ALL and 6 of them (with text denoted) were independent of therapy #------------------------------------------------------------------------------- library(dplyr) library(ggplot2) HC &lt;- data.table::fread(&quot;raw_data/age_serum_metabolite_HC.txt&quot;) %&gt;% as.data.frame() HC_filter &lt;- HC %&gt;% filter(p &lt; 0.05) dat_d0 &lt;- data.table::fread(&quot;raw_data/age_serum_metabolite_D0.txt&quot;) %&gt;% as.data.frame() dat_d14 &lt;- data.table::fread(&quot;raw_data/age_serum_metabolite_D14.txt&quot;) %&gt;% as.data.frame() dat_d28 &lt;- data.table::fread(&quot;raw_data/age_serum_metabolite_D28.txt&quot;) %&gt;% as.data.frame() dat_d0_filter &lt;- dat_d0 %&gt;% filter(p &lt; 0.05) dat_d14_filter &lt;- dat_d14 %&gt;% filter(p &lt; 0.05) dat_d28_filter &lt;- dat_d28 %&gt;% filter(p &lt; 0.05) name_overlap &lt;- setdiff(intersect(intersect(dat_d0_filter$label,dat_d14_filter$label),dat_d28_filter$label),HC_filter$label) result_d0 &lt;- dat_d0 %&gt;% mutate(label1=ifelse(label %in% name_overlap,label,NA)) p &lt;- ggplot(result_d0,aes(r,-log10(p),color=type))+ geom_point()+ scale_color_manual(values=c(&quot;Positive&quot;=&quot;#F6631C&quot;,&quot;Negative&quot;=&quot;#2C91E0&quot;, &quot;NotSig&quot;=&quot;gray&quot;))+ theme_bw()+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ ggrepel::geom_text_repel(aes(label=label1),size=3) ggsave(&quot;result/Figure1/S2D_result_age_serum_metabolite_D0.pdf&quot;,p,width=6,height = 5) result_HC &lt;- HC %&gt;% mutate(label1=ifelse(label %in% name_overlap,label,NA)) p_HC &lt;- ggplot(result_HC,aes(r,-log10(p),color=type))+ geom_point()+ scale_color_manual(values=c(&quot;Positive&quot;=&quot;#F6631C&quot;,&quot;Negative&quot;=&quot;#2C91E0&quot;, &quot;NotSig&quot;=&quot;gray&quot;))+ theme_bw()+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ ggrepel::geom_text_repel(aes(label=label1),size=3) ggsave(&quot;result/Figure1/S2D_result_age_serum_metabolite_HC.pdf&quot;,p_HC,width=6,height = 5) #------------------------------------------------------------------------------- # Step 2: The number of ALL specific ageing metabolites that excluded ageing-related metabolites in healthy at each time points #------------------------------------------------------------------------------- library(VennDiagram) library(dplyr) HC &lt;- data.table::fread(&quot;raw_data/age_serum_metabolite_HC.txt&quot;) %&gt;% as.data.frame() %&gt;% filter(p &lt; 0.05) D0 &lt;- data.table::fread(&quot;raw_data/age_serum_metabolite_D0.txt&quot;) %&gt;% as.data.frame() %&gt;% filter(p &lt; 0.05) %&gt;% filter(!label %in% HC$label) D14 &lt;- data.table::fread(&quot;raw_data/age_serum_metabolite_D14.txt&quot;) %&gt;% as.data.frame() %&gt;% filter(p &lt; 0.05) %&gt;% filter(!label %in% HC$label) D28 &lt;- data.table::fread(&quot;raw_data/age_serum_metabolite_D28.txt&quot;) %&gt;% as.data.frame() %&gt;% filter(p &lt; 0.05) %&gt;% filter(!label %in% HC$label) venn.plot &lt;- venn.diagram( x = list( D0 = D0$label, D14 = D14$label, D28 = D28$label ), #filename = &quot;result/Venn_correlation.png&quot;,imagetype = &quot;png&quot;, filename = NULL, col = &quot;black&quot;, lty = &quot;dotted&quot;, #边框线型改为&quot;dotted&quot;虚线 lwd = 3, # 边框线的宽度 fill = c(&quot;#D01910&quot;,&quot;#FE7F2D&quot;,&quot;#006633&quot;), alpha = 0.90, cex = 2.0, fontfamily = &quot;serif&quot;, fontface = &quot;bold&quot;, cat.col = c( &quot;darkgreen&quot;, &quot;orange&quot;, &quot;darkorchid4&quot;), cat.cex = 1.8, cat.fontface = &quot;bold&quot;, cat.fontfamily = &quot;serif&quot; ) pdf(&quot;result/Figure1/S2D_correlation_venn_noHC.pdf&quot;,width=5,height = 5) grid.draw(venn.plot) dev.off() 16.11 (S2 E) Box plot The relative levels of 6 ageing-related metabolites. Related to Fig. 2b. Wilcoxon test was performed; **** P &lt; 0.001. library(dplyr) library(ggplot2) sample &lt;- readxl::read_excel(&quot;raw_data/Supplementary Tables.xlsx&quot;,sheet=1,skip=1) %&gt;% as.data.frame() %&gt;% filter(!is.na(METs_D0_ID)) %&gt;% select(METs_D0_ID,Age) %&gt;% mutate(Age_Type = ifelse(Age &gt; 40,&quot;tumor&quot;, ifelse(Age &lt;= 40,&quot;normal&quot;,NA))) dat &lt;- readxl::read_excel(&quot;raw_data/Supplementary Tables.xlsx&quot;,sheet=4,skip=1) %&gt;% filter(Metabolite %in% c(&quot;Hydroxy-cholenoic acid&quot;,&quot;L-Threonine&quot;, &quot;p-Hydroxyphenylacetic acid&quot;,&quot;Glucose&quot;,&quot;Cholic acid&quot;, &quot;Ursodeoxycholic acid&quot;)) %&gt;% tibble::column_to_rownames(&quot;Metabolite&quot;) %&gt;% select(sample$METs_D0_ID) %&gt;% log1p() %&gt;% tibble::rownames_to_column(var=&quot;metabolite&quot;) dat_melt_D0 &lt;- reshape2::melt(dat,id=&quot;metabolite&quot;) %&gt;% left_join(sample,by=c(&quot;variable&quot;=&quot;METs_D0_ID&quot;)) %&gt;% mutate(group=&quot;D0&quot;) %&gt;% mutate(Age_Type=ifelse(Age_Type==&quot;tumor&quot;,&quot;Old&quot;, ifelse(Age_Type==&quot;normal&quot;,&quot;Young&quot;,&quot;a&quot;))) ## HC ## sample HCm &lt;- c(&quot;H280&quot;,&quot;H281&quot;) sample &lt;- data.table::fread(&quot;raw_data/clinical_all_v231116.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(!bianhao %in% c(HCm)) %&gt;% dplyr::filter(sample_id!=&quot;ND&quot;) %&gt;% dplyr::select(bianhao,Lineage,Age) %&gt;% dplyr::distinct(bianhao,.keep_all=TRUE) %&gt;% dplyr::filter(Lineage == &quot;HC&quot;) %&gt;% mutate(bianhao=paste0(bianhao,&quot;_METs&quot;)) %&gt;% mutate(Age_Type = ifelse(Age &gt; 40,&quot;tumor&quot;, ifelse(Age &lt;= 40,&quot;normal&quot;,NA))) dat &lt;- readxl::read_excel(&quot;raw_data/Supplementary Tables.xlsx&quot;,sheet=4,skip=1) %&gt;% filter(Metabolite %in% c(&quot;Hydroxy-cholenoic acid&quot;, &quot;p-Hydroxyphenylacetic acid&quot;,&quot;Glucose&quot;,&quot;Cholic acid&quot;, &quot;Ursodeoxycholic acid&quot;)) %&gt;% tibble::column_to_rownames(&quot;Metabolite&quot;) %&gt;% select(sample$bianhao) %&gt;% log1p() %&gt;% tibble::rownames_to_column(var=&quot;metabolite&quot;) dat_melt_HC &lt;- reshape2::melt(dat,id=&quot;metabolite&quot;) %&gt;% left_join(sample,by=c(&quot;variable&quot;=&quot;bianhao&quot;)) %&gt;% mutate(group=&quot;HC&quot;) %&gt;% select(-Lineage) %&gt;% mutate(Age_Type=ifelse(Age_Type==&quot;tumor&quot;,&quot;Old&quot;, ifelse(Age_Type==&quot;normal&quot;,&quot;Young&quot;,&quot;a&quot;))) dat_result &lt;- rbind(dat_melt_D0,dat_melt_HC) p &lt;- ggplot(dat_result,aes(group,value,fill=Age_Type,color=Age_Type))+ geom_boxplot()+ geom_jitter()+ facet_wrap(vars(metabolite),nrow = 3,scales = &quot;free_y&quot;)+ theme_bw() #&quot;#0095FF&quot;,&quot;#F94141&quot; dat_melt_D0$Age_Type &lt;- factor(dat_melt_D0$Age_Type,levels=c(&quot;Young&quot;,&quot;Old&quot;)) p &lt;- ggplot(dat_melt_D0,aes(Age_Type,value))+ geom_boxplot()+ geom_jitter(aes(color=Age_Type),size=.5)+ ggpubr::stat_compare_means(label=&quot;p.signif&quot;)+ scale_color_manual(values=c(&quot;Old&quot;=&quot;#F94141&quot;,&quot;Young&quot;=&quot;#0095FF&quot;))+ facet_wrap(vars(metabolite),nrow = 2,scales = &quot;free_y&quot;)+ theme_bw()+theme(legend.position = &quot;none&quot;)+ labs(x=NULL,y=NULL) ggsave(&quot;result/Figure1/S2E_boxplot_5_D0.pdf&quot;,p,width=90,height = 70,units=&quot;mm&quot;) dat_melt_HC$Age_Type &lt;- factor(dat_melt_HC$Age_Type,levels=c(&quot;Young&quot;,&quot;Old&quot;)) p &lt;- ggplot(dat_melt_HC,aes(Age_Type,value))+ geom_boxplot()+ geom_jitter(aes(color=Age_Type),size=.8)+ ggpubr::stat_compare_means(label=&quot;p.signif&quot;)+ scale_color_manual(values=c(&quot;Old&quot;=&quot;#F94141&quot;,&quot;Young&quot;=&quot;#0095FF&quot;))+ facet_wrap(vars(metabolite),nrow = 2,scales = &quot;free_y&quot;)+ theme_bw()+theme(legend.position = &quot;none&quot;)+ labs(x=NULL,y=NULL) ggsave(&quot;result/Figure1/S2E_boxplot_5_HC.pdf&quot;,p,width=90,height = 70,units=&quot;mm&quot;) 16.12 (S2 F) Overall Survival analysis Overall Survival analysis reveals that serum level of taurocholic acid as a poor prognostic indicator. library(dplyr) library(survival) library(stringr) library(survminer) sample_patient_all &lt;- readxl::read_excel(&quot;raw_data/08 队列病人生存资料.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(bianhao,OS,OS_stat) %&gt;% mutate(Pid=gsub(&quot;A|C|E&quot;,&quot;RJ-&quot;,bianhao)) %&gt;% mutate(METs_D0_ID=paste0(Pid,&quot;_METs_D0&quot;)) %&gt;% filter(!is.na(OS)) %&gt;% dplyr::mutate(OS=(OS)/30) %&gt;% mutate(OS_status=OS_stat) dd &lt;- readxl::read_excel(&quot;raw_data/Supplementary Tables.xlsx&quot;,sheet=4,skip=1) %&gt;% as.data.frame() overlap_name &lt;- intersect(names(dd),sample_patient_all$METs_D0_ID) dd_temp &lt;- dd %&gt;% dplyr::select(Metabolite,all_of(overlap_name)) dd &lt;- dd_temp %&gt;% dplyr::filter(Metabolite %in% &quot;Taurocholic acid&quot;) %&gt;% tibble::column_to_rownames(&quot;Metabolite&quot;) %&gt;% log1p() %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;sample&quot;) %&gt;% dplyr::inner_join(sample_patient_all,by=c(&quot;sample&quot;=&quot;METs_D0_ID&quot;)) %&gt;% dplyr::arrange(match(sample,sample_patient_all$METs_D0_ID)) %&gt;% dplyr::rename(&quot;TC&quot;=&quot;Taurocholic acid&quot;) %&gt;% dplyr::mutate(TC_type=ifelse(TC &gt;= median(TC),&quot;High&quot;,&quot;Low&quot;)) fit1 &lt;- survfit(Surv(OS, OS_status) ~ TC_type, data = dd) p1 &lt;- ggsurvplot(fit1, data = dd, xlab = &#39;Time (Months)&#39;, pval = TRUE, risk.table = TRUE, risk.table.height = 0.28, conf.int = TRUE, conf.int.alpha = 0.05, palette = c(&quot;#d80700&quot;,&quot;#00599F&quot;), axes.offset = TRUE, break.time.by = 12, xlim = c(0, 60), title= &quot;Taurocholic acid&quot;) pdf(&quot;result/Figure1/S2F_new-Taurocholic acid.pdf&quot;,onefile = F) print(p1) dev.off() 16.13 (S2 G) Box plot The relative levels of pseudouridine and 7-methylguanosine compared to their precursors, uridine and guanosine, respectively. Wilcoxon test was performed; **** P &lt; 0.001. library(dplyr) library(MNet) library(ggpubr) #------------------------------------------------------------------------------- # Step 1: Load data and conduct mlimma #------------------------------------------------------------------------------ ## BCP-ALL vs HC clinical &lt;- data.table::fread(&quot;raw_data/clinical_all_v240328.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(group %in% c(&quot;A&quot;,&quot;HC&quot;)) %&gt;% dplyr::select(METs_ID,Lineage) datRAW &lt;- data.table::fread(&quot;raw_data/serum_raw_sva_data_v240328.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(label,all_of(clinical$METs_ID)) %&gt;% tibble::column_to_rownames(&quot;label&quot;) clinicalBH &lt;- clinical %&gt;% dplyr::filter(clinical$Lineage %in% c(&quot;B&quot;,&quot;HC&quot;)) datBH &lt;- datRAW %&gt;% dplyr::select(clinicalBH$METs_ID) %&gt;% dplyr::select(starts_with(&quot;RJ&quot;),everything()) datBH &lt;- log2(datBH+1) dim(datBH) matching_columns &lt;- grep(&quot;H&quot;,colnames(datBH),value = T) length(matching_columns) length(datBH) group_BH &lt;- c(rep(&quot;tumor&quot;,137),rep(&quot;normal&quot;,164)) table(group_BH) meta_BH &lt;- mlimma(datBH,group = group_BH) write.table(meta_BH,&quot;result/Figure1/S2A_BvsH.txt&quot;,sep = &quot;\\t&quot;,row.names = F,quote = F) ## T-ALL vs HC clinicalTH &lt;- clinical %&gt;% dplyr::filter(clinical$Lineage %in% c(&quot;T&quot;,&quot;HC&quot;)) datTH &lt;- datRAW %&gt;% dplyr::select(clinicalTH$METs_ID) %&gt;% dplyr::select(starts_with(&quot;RJ&quot;),everything()) datTH &lt;- log2(datTH+1) dim(datTH) matching_columns &lt;- grep(&quot;H&quot;,colnames(datTH),value = T) length(matching_columns) length(datTH) group_TH &lt;- c(rep(&quot;tumor&quot;,43),rep(&quot;normal&quot;,164)) table(group_TH) meta_TH &lt;- mlimma(datTH,group = group_TH) write.table(meta_TH,&quot;result/Figure1/S2A_TvsH.txt&quot;,sep = &quot;\\t&quot;,row.names = F,quote = F) ## selected boxplots label &lt;- c(&quot;Pseudouridine&quot;,&quot;7-Methylguanosine&quot;,&quot;Guanosine&quot;,&quot;Uridine&quot;) meta_BH_filter &lt;- meta_BH %&gt;% dplyr::filter(name %in% label) %&gt;% dplyr::select(P.Value,name) %&gt;% dplyr::mutate(group=rep(&quot;BH&quot;,4)) meta_TH_filter &lt;- meta_TH %&gt;% dplyr::filter(name %in% label) %&gt;% dplyr::select(P.Value,name) %&gt;% dplyr::mutate(group=rep(&quot;TH&quot;,4)) meta_all_filter &lt;- rbind(meta_BH_filter,meta_TH_filter) %&gt;% dplyr::mutate(name=factor(name,levels=label)) %&gt;% dplyr::arrange(name) write.table(meta_all_filter,&quot;result/Figure1/S2A_meta_groupcomparison.txt&quot;,quote = F,row.names = F,sep = &quot;\\t&quot;) #------------------------------------------------------------------------------- # Step 2: Boxplot #------------------------------------------------------------------------------ name &lt;- c(&quot;Pseudouridine&quot;,&quot;7-Methylguanosine&quot;,&quot;Guanosine&quot;,&quot;Uridine&quot;) datRAW &lt;- data.table::fread(&quot;raw_data/serum_raw_sva_data_v240328.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(label,all_of(clinical$METs_ID)) drawdata &lt;- datRAW %&gt;% dplyr::filter(label %in% name) %&gt;% dplyr::select(label,clinical$METs_ID) %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% myscale() %&gt;% t() %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(&quot;METs_ID&quot;) %&gt;% dplyr::left_join(clinical,by=&quot;METs_ID&quot;) %&gt;% dplyr::select(METs_ID,Guanosine,`7-Methylguanosine`,Uridine,Pseudouridine,Lineage) for (i in 2:ncol(drawdata)-1) { variable=colnames(drawdata)[i] df &lt;- drawdata %&gt;% dplyr::select(all_of(variable),Lineage)%&gt;% rstatix::reorder_levels(Lineage, order = c(&quot;HC&quot;,&quot;B&quot;,&quot;T&quot;)) df$index &lt;- df[, 1] my_comparisons &lt;- list( c(&quot;HC&quot;, &quot;B&quot;), c(&quot;HC&quot;, &quot;T&quot;), c(&quot;B&quot;, &quot;T&quot;) ) assign(paste0(&quot;pp&quot;, i), ggplot(df, aes(y = index, x = Lineage,fill=factor(Lineage))) + geom_boxplot(outlier.shape = NA)+ geom_point(position = &quot;jitter&quot;,size=0.5,alpha=0.8)+ scale_fill_manual(values=c(&quot;#007DDB&quot;,&quot;#E5E059&quot;,&quot;#4B0082&quot;))+ theme_classic()+ theme(legend.position=&quot;none&quot;)+ylim(-5,5)+ labs(x=paste0(variable),y=NULL) ) } library(cowplot) (p1 &lt;- plot_grid(pp2, pp3, pp4,pp5,nrow=2)) ggsave(p1,filename=&quot;result/Figure1/S2G_boxplot.pdf&quot;, width=12,height=10) 16.14 (S2 H) Metabolism Set Enrichment Analysis The pathway enrichment analysis reveals pathways influenced by the response of various body organs, particularly noteworthy were the environmental information processing pathways. ABC: ATP-binding cassette transporters. library(tidymass) library(dplyr) #------------------------------------------------------------------------------- # Step 1: Load data and set parameters #------------------------------------------------------------------------------ kid &lt;- data.table::fread(&quot;raw_data/serum_metabolites_id_v240328.txt&quot;) %&gt;% as.data.frame() mydata &lt;- data.table::fread(&quot;result/Figure1/AvsHC.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::left_join(kid,by=c(&quot;Name&quot;=&quot;query&quot;)) %&gt;% dplyr::filter(Padj_wilcox &lt; 0.05) data(&quot;kegg_hsa_pathway&quot;, package = &quot;metpath&quot;) ## Remove the disease pathway pathway_class = metpath::pathway_class(kegg_hsa_pathway) remain_idx = pathway_class %&gt;% unlist() %&gt;% stringr::str_detect(&quot;Disease&quot;) %&gt;% `!`() %&gt;% which() pathway_database = kegg_hsa_pathway[remain_idx] #------------------------------------------------------------------------------- # Step 2: Enrichment analysis #------------------------------------------------------------------------------ diff.kid &lt;- mydata %&gt;% dplyr::filter(KEGG!=&quot;None&quot;) %&gt;% pull(KEGG) %&gt;% unique() result &lt;- enrich_kegg(query_id = diff.kid, query_type = &quot;compound&quot;, id_type = &quot;KEGG&quot;, pathway_database = pathway_database, p_cutoff = 0.05, p_adjust_method = &quot;BH&quot;, threads = 5) msea_table &lt;- result@result %&gt;% dplyr::arrange(p_value) %&gt;% data.frame() tablefilter &lt;- dplyr::filter(msea_table,p_value&lt;0.05) write.csv(msea_table,&quot;result/Figure1/S2H_table.csv&quot;) pic &lt;- enrich_scatter_plot(object = result, y_axis = &quot;p_value&quot;, y_axis_cutoff = 0.05, point_size = &quot;mapped_percentage&quot;,label_size = 3) ggsave(pic,filename = &quot;result/Figure1/S2H_enrichment.pdf&quot;,width=13,height=9) "],["figure-2.html", "Chapter 17 Figure 2 17.1 (A) 3D PCA 17.2 (B) ALL vs HC 17.3 (C) Intracellular Metabolome Landscape 17.4 (E) BCP-ALL vs T-ALL 17.5 (S3 A) Correlation Within BMMC Samples 17.6 (S3 B) Correlation Between HC PMMC And ALL BMMC MRD- 17.7 (S3 C) Correlation Between BMMC And PBMC 17.8 (S3 D) Differential Analyses 17.9 (S3 E) Volcano Plot of BMMC-D0 vs. MRD- 17.10 (S3 F) Abundance Boxplot 17.11 (S3 G) WGCNA 17.12 (S3 H) bar plot 17.13 (S3 I) Venn Diagram 17.14 (S3 J) Boxplot 17.15 (S3 K) Pathway-based Analysis", " Chapter 17 Figure 2 Figure 2: Intracellular metabolome reveals aberrant metabolic profiles underlying the pathogenesis of ALL. A. PCA of intracellular samples from all groups (n=127) reveals a plane (depicted schematically in gray) that distinguishes most cases of the ALL groups from the control (HC PBMC and ALL BMMC MRD-) group. B. The DA score reveals the enrichment of metabolism pathways (each row) linked to ALL-associated metabolites, and captures the average gross changes for all metabolites in a pathway. A score 1 or −1 indicates that all measured metabolites in the pathway are increased or decreased in the ALL compared to HC samples. Here pathways containing no less than three measured metabolites with fold change of 1.2 and filtered by P &lt; 0.05 were used for DA score calculation. Activity levels of pathway are color coded: pink for upregulated, green for downregulated, otherwise colored in brown. C. The intracellular metabolome landscape reveals that most disturbed metabolites were upregulated in ALL, consistent with the data in Extended Data Fig. 3d-e; and the profile within the two groups is consistent with panel (a). The columns represent samples, and rows represent metabolites, with highlighted metabolites in Extended Data Fig. 3f. FMN: Flavin Mononucleotide; DHAP: Dihydroxyacetone Phosphate; NMN: Nicotinamide Mononucleotide; F-1,6-BP: Fructose 1,6−bisphosphate; G-1-P: Glucose 1−Phosphate; sn−Gly−3-P: sn−Glycero−3−phosphat. D. A simplified schematic plot illustrates the globally upregulated metabolism pathways in ALL blasts. E. A specific comparison between BCP-ALL and T-ALL cases elucidates the pathways enriched with significantly differential metabolites. The colors represent metabolic pathway categories and the size of each circle reflects the quantity of measured metabolites in indicated pathway. 17.1 (A) 3D PCA PCA of intracellular samples from all groups (n=127) reveals a plane (depicted schematically in gray) that distinguishes most cases of the ALL groups from the control (HC PBMC and ALL BMMC MRD-) group. library(dplyr) library(ggplot2) library(scatterplot3d) #------------------------------------------------------------------------------- # Step 1: Load data and set parameters #------------------------------------------------------------------------------- dat &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::filter(!is.na(`RJ-19058_METc_BM_MRD-`)) sample_lineage &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% dplyr::select(Pid,Lineage) %&gt;% as.data.frame() sample_info &lt;- data.frame(sample=names(dat)) %&gt;% dplyr::mutate(type=ifelse(grepl(&quot;METc_BM_D0&quot;,sample),&quot;BM_D0&quot;, ifelse(grepl(&quot;METc_PB_D0&quot;,sample),&quot;ALL PBMC&quot;, ifelse(grepl(&quot;H&quot;,sample),&quot;HC PBMC&quot;, ifelse(grepl(&quot;METc_BM_MRD&quot;,sample),&quot;MRD-&quot;,sample))))) %&gt;% dplyr::mutate(Pid=sample) %&gt;% tidyr::separate(Pid,sep=&quot;_&quot;,&quot;Pid&quot;) %&gt;% dplyr::left_join(sample_lineage,by=&quot;Pid&quot;) %&gt;% dplyr::mutate(type=ifelse(type==&quot;BM_D0&quot;,Lineage,type)) #------------------------------------------------------------------------------- # Step 2: 3D PCA #------------------------------------------------------------------------------- dd_pca &lt;- dat %&gt;% log1p() pca &lt;- stats::prcomp(t(dd_pca), center = TRUE, scale. = TRUE) variance = pca$sdev^2/sum(pca$sdev^2) pca.data = data.frame(pca$x,group=sample_info$type,label=rownames(pca$x)) p2 &lt;- ggplot(pca.data,aes(PC1,PC2,color=group))+ geom_point()+ theme_bw()+ stat_ellipse( linetype = 2, size = 0.5,level=0.9)+ theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+ labs(x=paste0(&quot;PC1 (&quot;,signif(variance[1]*100,3),&quot;%)&quot;), y=paste0(&quot;PC2 (&quot;,signif(variance[2]*100,3),&quot;%)&quot;)) pdf(&quot;result/Figure2/2A_3Dpca.pdf&quot;,width=13,height = 13) col1 &lt;- c(&quot;#BE1E2D&quot;,&quot;#E5E059&quot;,&quot;#006838&quot;,&quot;#007DDB&quot;,&quot;#4B0082&quot;) # B T sample_info$type &lt;- as.factor(sample_info$type) colors &lt;- col1[as.numeric(sample_info$type)] scatterplot3d(pca.data[,c(2,1,3)],pch = 16, cex.symbols = 2, scale.y = 0.7, angle = 45, col.axis = &quot;#444444&quot;, col.grid = &quot;#CCCCCC&quot;, color=colors) legend(&quot;topleft&quot;, legend = levels(sample_info$type), col = c(&quot;#BE1E2D&quot;,&quot;#E5E059&quot;,&quot;#006838&quot;,&quot;#007DDB&quot;,&quot;#4B0082&quot;), pch = 16, xpd = TRUE,horiz = TRUE) dev.off() 17.2 (B) ALL vs HC The DA score reveals the enrichment of metabolism pathways (each row) linked to ALL-associated metabolites, and captures the average gross changes for all metabolites in a pathway. A score 1 or −1 indicates that all measured metabolites in the pathway are increased or decreased in the ALL compared to HC samples. Here pathways containing no less than three measured metabolites with fold change of 1.2 and filtered by P &lt; 0.05 were used for DA score calculation. Activity levels of pathway are color coded: pink for upregulated and green for downregulated. For detailed information of the metabolites, please refer to Supplementary Table 12. library(dplyr) library(ggplot2) library(ggpubr) library(ComplexHeatmap) library(MNet) #------------------------------------------------------------------------------ # Step 1: Load data and set parameters #------------------------------------------------------------------------------ sample_info_temp &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() sample_info_1 &lt;- sample_info_temp %&gt;% dplyr::filter(!is.na(METc_BM_D0_ID)) %&gt;% dplyr::select(METc_BM_D0_ID) %&gt;% dplyr::rename(&quot;id&quot;=&quot;METc_BM_D0_ID&quot;) %&gt;% dplyr::select(id) sample_info_2 &lt;- sample_info_temp %&gt;% dplyr::filter(!is.na(METc_PB_D0_ID)) %&gt;% dplyr::rename(&quot;id&quot;=&quot;METc_PB_D0_ID&quot;) %&gt;% dplyr::select(id) sample_info_1 &lt;- rbind(sample_info_1,sample_info_2) dat_filter &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::select(sample_info_1$id,starts_with(&quot;H&quot;)) #------------------------------------------------------------------------------ # Step 2: mlimma #------------------------------------------------------------------------------ dat_filter &lt;- log2(dat_filter+1) dim(dat_filter) group &lt;- c(rep(&quot;tumor&quot;,106),rep(&quot;normal&quot;,12)) table(group) metabolite_all &lt;- mlimma(dat_filter,group) write.table(metabolite_all,&quot;result/Figure2/1.BMMCvsHC.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) metabolite_diff &lt;- metabolite_all %&gt;% dplyr::filter(abs(logFC) &gt; 0.26) %&gt;% dplyr::filter(P.Value &lt; 0.05) write.table(metabolite_diff,&quot;result/Figure2/1.BMMCvsHC_filter.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) #------------------------------------------------------------------------------ # Step 3: DA-score #------------------------------------------------------------------------------ diff_MC &lt;- data.table::fread(&quot;result/Figure2/1.BMMCvsHC.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(name=stringr::str_to_title(name)) kid &lt;- openxlsx::read.xlsx(&quot;raw_data/cell_metabolite_info_all_v1109.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(refmet_name=stringr::str_to_title(refmet_name)) data_all &lt;- diff_MC %&gt;% dplyr::left_join(kid,by=c(&quot;name&quot;=&quot;refmet_name&quot;)) %&gt;% dplyr::filter(KEGG!=&quot;None&quot;) %&gt;% dplyr::arrange(desc(logFC)) data &lt;- data_all %&gt;% dplyr::filter(P.Value &lt; 0.05) %&gt;% dplyr::mutate(change=ifelse(logFC &gt; 0.26,&quot;increase&quot;, ifelse(logFC &lt; -0.26,&quot;decrease&quot;,&quot;no sig&quot;))) data_increase &lt;- data %&gt;% dplyr::filter(change==&quot;increase&quot;) %&gt;% dplyr::pull(KEGG) data_decrease &lt;- data %&gt;% dplyr::filter(change==&quot;decrease&quot;) %&gt;% dplyr::pull(KEGG) da_result &lt;- ePDAlyser(data_increase,data_decrease,data_all$KEGG, sort_plot =&quot;category&quot;,min_measured_num = 3, out = &quot;metabolite&quot;) a &lt;- ePEAlyser(unique(c(data_increase,data_decrease)), out=&quot;metabolite&quot;,p_cutoff = 0.05,test=&quot;hypergeo&quot;) Pa &lt;- a$output da_result_filter &lt;- da_result$result %&gt;% dplyr::filter(Pathway %in% Pa$name) %&gt;% dplyr::filter(Measured_members_num &gt; 2) %&gt;% dplyr::arrange(desc(`Pathway Category`)) %&gt;% dplyr::mutate(Pathway=factor(Pathway,levels=Pathway)) %&gt;% dplyr::mutate(da_type=ifelse(DA_score&gt;0,&quot;big&quot;, ifelse(DA_score&lt;0,&quot;little&quot;,&quot;zero&quot;))) p &lt;- ggplot(da_result_filter)+ geom_point(aes(x=Pathway,y=DA_score,size=log2(Measured_members_num), color=`da_type`,shape=`Pathway Category`, fill=`da_type`))+ geom_pointrange(aes(x=Pathway,y=DA_score,ymin=0,ymax=DA_score,color=`da_type`))+ coord_flip()+ theme_bw()+ theme(axis.text.y=element_text(size=8))+ labs(y=&quot;Metabolism pathways&quot;,x=&quot;DA score&quot;)+ scale_color_manual(values = c(&quot;big&quot;=&quot;#FD6AB0&quot;,&quot;little&quot;=&quot;#00AE4C&quot;,&quot;zero&quot;=&quot;gray&quot;))+ scale_fill_manual(values = c(&quot;big&quot;=&quot;#FD6AB0&quot;,&quot;little&quot;=&quot;#00AE4C&quot;,&quot;zero&quot;=&quot;gray&quot;))+ scale_shape_manual(values=c(&quot;Amino acid metabolism&quot;=21, &quot;Carbohydrate metabolism&quot;=22, &quot;Energy metabolism&quot;=23,&quot;Lipid metabolism&quot;=24, &quot;Metabolism of cofactors and vitamins&quot;=25, &quot;Metabolism of other amino acids&quot;=3, &quot;Nucleotide metabolism&quot;=4))+ ylim(-1,1)+ scale_size(range = c(3,4)) ggsave(&quot;result/Figure2/2B_DAscore_BMMC_ALL.pdf&quot;,p,width=22,height=15, units = &quot;cm&quot;) openxlsx::write.xlsx(da_result$result,file=&quot;result/Figure2/2B_DAscore_BMMC_ALL.xlsx&quot;,rowNames = FALSE) openxlsx::write.xlsx(da_result_filter,file=&quot;result/Figure2/2B_DAscore_BMMC_ALL_filter.xlsx&quot;,rowNames = FALSE) 17.3 (C) Intracellular Metabolome Landscape The intracellular metabolome landscape reveals that most disturbed metabolites were upregulated in ALL, consistent with the data in Extended Data Fig. 3d-e; and the profile within the two groups is consistent with panel (a). The columns represent samples, and rows represent metabolites, with highlighted metabolites in Extended Data Fig. 3f. FMN: Flavin Mononucleotide; DHAP: Dihydroxyacetone Phosphate; NMN: Nicotinamide Mononucleotide; F-1,6-BP: Fructose 1,6−bisphosphate; G-1-P: Glucose 1−Phosphate; sn−Gly−3-P: sn−Glycero−3−phosphate. library(dplyr) library(ComplexHeatmap) library(MNet) #------------------------------------------------------------------------------- # Step 1: Load metabolomics data and set parameters #------------------------------------------------------------------------------- sample_lineage &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(Pid,Lineage,Subtype) diff &lt;- data.table::fread(&quot;result/Figure2/1.BMMCvsHC.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(abs(logFC)&gt;0.26) %&gt;% dplyr::filter(P.Value &lt; 0.05) %&gt;% dplyr::arrange(logFC) %&gt;% dplyr::mutate(type=ifelse(logFC&gt;0,&quot;Up&quot;,&quot;Down&quot;)) %&gt;% dplyr::mutate(name=stringr::str_to_title(name)) dat &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(label=stringr::str_to_title(label)) %&gt;% dplyr::filter(label %in% diff$name) %&gt;% dplyr::arrange(match(label,diff$name)) %&gt;% rowwise() %&gt;% dplyr::mutate(MRD_mean=mean(c(`RJ-19058_METc_BM_MRD-`,`RJ-19081_METc_BM_MRD-`,`RJ-19102_METc_BM_MRD-`,`RJ-19137_METc_BM_MRD-`,`RJ-19112_METc_BM_MRD-`,`RJ-19004_METc_BM_MRD-`,`RJ-19215_METc_BM_MRD-`,`RJ-19115_METc_BM_MRD-`,`RJ-19124_METc_BM_MRD-`),na.rm=T)) %&gt;% dplyr::mutate(HC_PBMC_mean=mean(c(H047_PB,H053_PB,H054_PB,H055_PB,H058_PB,H065_PB,H069_PB,H080_PB,H085_PB,H088_PB,H091_PB,H093_PB),na.rm=T)) %&gt;% as.data.frame() %&gt;% dplyr::mutate(MRD_mean=ifelse(label==&quot;Citric Acid&quot;,NA,MRD_mean)) %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% log1p() %&gt;% dplyr::select(-starts_with(&quot;H0&quot;)) %&gt;% dplyr::select(-contains(&quot;MRD-&quot;)) sample_info &lt;- data.frame(sample=names(dat)) %&gt;% dplyr::mutate(type=ifelse(grepl(&quot;METc_BM_D0&quot;,sample),&quot;BM_D0&quot;, ifelse(grepl(&quot;METc_PB_D0&quot;,sample),&quot;ALL PBMC&quot;,sample))) %&gt;% dplyr::mutate(Pid=sample) %&gt;% tidyr::separate(Pid,sep=&quot;_&quot;,&quot;Pid&quot;) %&gt;% dplyr::left_join(sample_lineage,by=&quot;Pid&quot;) %&gt;% dplyr::mutate(Lineage=ifelse(type %in% c(&quot;BM_D0&quot;,&quot;ALL PBMC&quot;),Lineage,type)) %&gt;% dplyr::mutate(Subtype=ifelse(type %in% c(&quot;BM_D0&quot;,&quot;ALL PBMC&quot;),Subtype,NA)) %&gt;% dplyr::mutate(Lineage=ifelse(Lineage==&quot;B&quot;,&quot;BCP-ALL&quot;, ifelse(Lineage==&quot;T&quot;,&quot;T-ALL&quot;, ifelse(Lineage==&quot;MRD_mean&quot;,&quot;MRD- BMMC mean&quot;, ifelse(Lineage==&quot;HC_PBMC_mean&quot;,&quot;HC PBMC mean&quot;,Lineage))))) %&gt;% dplyr::mutate(Cell_type=ifelse(type %in% c(&quot;BM_D0&quot;,&quot;MRD_mean&quot;),&quot;BMMC&quot;, ifelse(type %in% c(&quot;ALL PBMC&quot;,&quot;HC_PBMC_mean&quot;),&quot;PBMC&quot;,NA))) #------------------------------------------------------------------------------- # Step 2: Intracellular metabolome landscape heatmap #------------------------------------------------------------------------------- dat_scale &lt;- myscale(dat,method=&quot;raw_zscore&quot;) mark_gene &lt;- unique(c(&quot;Malonic Acid&quot;,&quot;Cdp&quot;,&quot;Dtmp&quot;,&quot;Cytosine&quot;,&quot;Damp&quot;,&quot;Adp&quot;, &quot;Glucose 1-Phosphate&quot;,&quot;Dihydroxyacetone Phosphate&quot;,&quot;Gdp&quot;,&quot;Deoxyadenosine&quot;, &quot;Udp&quot;,&quot;Citric Acid&quot;,&quot;Udp-Glucose&quot;,&quot;Fgar&quot;,&quot;Xmp&quot;,&quot;Ribulose 5-Phosphate&quot;,&quot;Xylulose 5-Phosphate&quot;,&quot;Fmn&quot;,&quot;Adp&quot;,&quot;Nicotinamide Ribotide&quot;,&quot;Fructose 1,6-Bisphosphate&quot;,&quot;Sn-Glycero-3-Phosphate&quot;,&quot;Ribulose 5-Phosphate&quot;,&quot;Xylulose 5-Phosphate&quot;)) length(mark_gene) setdiff(mark_gene,rownames(dat_scale)) gene_pos &lt;- as.numeric() for (i in 1:length(mark_gene)) { gene_pos_temp &lt;- which(rownames(dat_scale)==mark_gene[i]) gene_pos &lt;- c(gene_pos,gene_pos_temp) } length(gene_pos) right_anno &lt;- rowAnnotation(mark_gene = anno_mark(at = gene_pos, labels = mark_gene)) annotation_file &lt;- readxl::read_excel(&quot;raw_data/cell_metabolite_info_all_v1109.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(refmet_name,class) %&gt;% dplyr::rename(&quot;label&quot;=&quot;refmet_name&quot;) %&gt;% dplyr::mutate(label=stringr::str_to_title(label)) left_a &lt;- data.frame(label=rownames(dat_scale)) %&gt;% dplyr::left_join(annotation_file,by=&quot;label&quot;) %&gt;% dplyr::left_join(diff,by=c(&quot;label&quot;=&quot;name&quot;)) q8 &lt;- RColorBrewer::brewer.pal(n = 8, name = &quot;Paired&quot;) names(q8) &lt;- unique(annotation_file$class) col_fc = circlize::colorRamp2(c(-2, 0, 2), c(&quot;#00AE4C&quot;, &quot;white&quot;, &quot;#FD6AB0&quot;)) left_annotation = rowAnnotation(Class = left_a$class, FC=left_a$logFC, col=list(Class=q8, FC=col_fc), show_annotation_name = c(T,T), border = c(T,T) , simple_anno_size = unit(4, &quot;mm&quot;), gap = unit(1, &quot;mm&quot;)) top_annotation = HeatmapAnnotation( Lineage = sample_info$Lineage, Subtype=sample_info$Subtype, Cell_type=sample_info$Cell_type, col=list(Lineage=c(&quot;BCP-ALL&quot;=&quot;#E5E059&quot;,&quot;T-ALL&quot;=&quot;#4B0082&quot;, &quot;HC PBMC mean&quot;=&quot;#746E15&quot;,&quot;MRD- BMMC mean&quot;=&quot;#1E90FF&quot;), Subtype=c(&quot;Ph&quot;=&quot;#D01910&quot;,&quot;non_Ph&quot;=&quot;#FE7F2D&quot;,&quot;ETP&quot;=&quot;#4C6CB0&quot;,&quot;non_ETP&quot;=&quot;#8DC8ED&quot;), Cell_type=c(&quot;PBMC&quot;=&quot;#8B4720&quot;,&quot;BMMC&quot;=&quot;#CB8A93&quot;)), show_annotation_name = c(T,T), border = c(T,T) , simple_anno_size = unit(4, &quot;mm&quot;),gap = unit(1, &quot;mm&quot;)) col_fun = circlize::colorRamp2(c(-1.5, 0, 1.5), c(&quot;#00599F&quot;, &quot;white&quot;, &quot;#D01910&quot;)) p_metabolite &lt;- Heatmap(dat_scale,height=unit(15,&quot;cm&quot;),name=&quot;Metabolite Data&quot;, top_annotation =top_annotation, left_annotation = left_annotation, right_annotation = right_anno, row_split = factor(diff$type,levels=c(&quot;Down&quot;,&quot;Up&quot;)), cluster_row_slices = F, column_split = factor(sample_info$Lineage,levels = c(&quot;BCP-ALL&quot;,&quot;T-ALL&quot;,&quot;MRD- BMMC mean&quot;,&quot;HC PBMC mean&quot;)), cluster_column_slices = F, show_row_dend = FALSE, show_column_dend = FALSE, col = col_fun, show_column_names = F, show_row_names = F, row_names_gp = gpar(fontsize = 2),column_names_gp = gpar(fontsize = 5)) pdf(&quot;result/Figure2/2C_heatmap.pdf&quot;,width=15,height = 8) p_metabolite dev.off() 17.4 (E) BCP-ALL vs T-ALL A specific comparison between BCP-ALL and T-ALL cases elucidates the pathways enriched with significantly differential metabolites. The colors represent metabolic pathway categories and the size of each circle reflects the quantity of measured metabolites in indicated pathway. library(dplyr) library(MNet) library(ggplot2) library(tidymass) #------------------------------------------------------------------------------- # Step 1: Load data and conduct variance analysis #------------------------------------------------------------------------------- sample_info &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(!is.na(METc_BM_D0_ID)) %&gt;% dplyr::select(METc_BM_D0_ID,Lineage) %&gt;% dplyr::mutate(Lineage=ifelse(Lineage==&quot;B&quot;,&quot;BCP-ALL&quot;, ifelse(Lineage==&quot;T&quot;,&quot;T-ALL&quot;,Lineage))) %&gt;% dplyr::filter(Lineage %in% c(&quot;BCP-ALL&quot;,&quot;T-ALL&quot;)) dat &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(label,all_of(sample_info$METc_BM_D0_ID)) %&gt;% tibble::column_to_rownames(&quot;label&quot;) group &lt;- sample_info$Lineage group[which(group==&quot;BCP-ALL&quot;)] &lt;- &quot;tumor&quot; group[which(group==&quot;T-ALL&quot;)] &lt;- &quot;normal&quot; metabolite_all &lt;- mlimma(log2(dat+1),group) metabolite_diff &lt;- metabolite_all %&gt;% dplyr::filter(abs(logFC) &gt; 0.26) %&gt;% dplyr::filter(P.Value &lt; 0.05) write.table(metabolite_all,&quot;result/Figure2/2E_BvsT_all.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) write.table(metabolite_diff,&quot;result/Figure2/2E_BvsT_diff.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) kid &lt;- readxl::read_excel(&quot;raw_data/cell_metabolite_info_all_v1109.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(refmet_name,KEGG) data_all &lt;- metabolite_all %&gt;% dplyr::left_join(kid,by=c(&quot;name&quot;=&quot;refmet_name&quot;)) %&gt;% dplyr::filter(KEGG!=&quot;None&quot;) %&gt;% dplyr::pull(KEGG) dat &lt;- metabolite_all %&gt;% dplyr::left_join(kid,by=c(&quot;name&quot;=&quot;refmet_name&quot;)) %&gt;% dplyr::filter(KEGG!=&quot;None&quot;) %&gt;% dplyr::filter(P.Value &lt; 0.05) %&gt;% dplyr::mutate(change=ifelse(logFC &gt; 0.26,&quot;increase&quot;, ifelse(logFC &lt; -0.26,&quot;decrease&quot;,&quot;no sig&quot;))) data_increase &lt;- dat %&gt;% dplyr::filter(change==&quot;increase&quot;) %&gt;% dplyr::pull(KEGG) data_decrease &lt;- dat %&gt;% dplyr::filter(change==&quot;decrease&quot;) %&gt;% dplyr::pull(KEGG) #------------------------------------------------------------------------------- # Step 2: DA score #------------------------------------------------------------------------------- da_result &lt;- ePDAlyser(data_increase,data_decrease,data_all,sort_plot=&quot;category&quot;, min_measured_num = 2,out=&quot;metabolite&quot;) ggsave(da_result$p,filename = &quot;result/Figure2/2E_DA_score_all.pdf&quot;,width=13,height=9) openxlsx::write.xlsx(da_result$result,file=&quot;result/Figure2/2E_DA_score_all.xlsx&quot;,rowNames = FALSE) diff.kid &lt;- metabolite_all %&gt;% dplyr::filter(P.Value &lt;0.05) %&gt;% dplyr::filter(logFC &gt; 0.26 | logFC &lt; -0.26) %&gt;% dplyr::left_join(kid,by=c(&quot;name&quot;=&quot;refmet_name&quot;)) %&gt;% dplyr::filter(KEGG!=&quot;None&quot;) %&gt;% dplyr::pull(KEGG) %&gt;% unique() data(&quot;kegg_hsa_pathway&quot;, package = &quot;metpath&quot;) pathway_class = metpath::pathway_class(kegg_hsa_pathway) remain_idx = pathway_class %&gt;% unlist() %&gt;% stringr::str_detect(&quot;Disease&quot;) %&gt;% `!`() %&gt;% which() pathway_database = kegg_hsa_pathway[remain_idx] result &lt;- enrich_kegg(query_id = diff.kid, query_type = &quot;compound&quot;, id_type = &quot;KEGG&quot;,method = &quot;hypergeometric&quot;, pathway_database = pathway_database, p_cutoff = 0.05, p_adjust_method = &quot;BH&quot;, threads = 5) msea_table &lt;- result@result %&gt;% dplyr::arrange(p_value) %&gt;% data.frame() tablefilter &lt;- dplyr::filter(msea_table,p_value &lt; 0.05) write.csv(msea_table,&quot;result/Figure2/2E.MSEA_all.csv&quot;) da_filter &lt;- da_result$result %&gt;% dplyr::filter(KEGG_pathwayid %in% tablefilter$pathway_id) %&gt;% dplyr::arrange(`Pathway Category`) %&gt;% dplyr::mutate(Pathway=factor(Pathway,levels = Pathway)) pathway_data &lt;- PathwayExtendData %&gt;% dplyr::filter(type==&quot;metabolite&quot;) colp &lt;- c(&quot;Amino acid metabolism&quot; =&quot;#1B9E77&quot;, &quot;Carbohydrate metabolism&quot;=&quot;#D95F02&quot;, &quot;Glycan biosynthesis and metabolism&quot;=&quot;#1F78B4&quot;, &quot;Metabolism of cofactors and vitamins&quot;=&quot;#7570B3&quot;, &quot;Metabolism of terpenoids and polyketides&quot;=&quot;#BC80BD&quot;, &quot;Metabolism of other amino acids&quot;=&quot;#8DD3C7&quot;, &quot;Energy metabolism&quot;=&quot;#E7298A&quot;,&quot;Lipid metabolism&quot;=&quot;#66A61E&quot;, &quot;Nucleotide metabolism&quot;=&quot;#E6AB02&quot;, &quot;Biosynthesis of other secondary metabolites&quot;=&quot;#A6761D&quot;, &quot;Xenobiotics biodegradation and metabolism&quot;=&quot;#666666&quot;) p &lt;- ggplot(da_filter)+ geom_point(aes(x=Pathway,y=DA_score,size=log2(Measured_members_num),color=`Pathway Category`))+ geom_pointrange(aes(x=Pathway,y=DA_score,ymin=0,ymax=DA_score,color=`Pathway Category`))+ scale_color_manual(values=colp)+ coord_flip()+ xlab(NULL)+ theme_bw() ggsave(&quot;result/Figure2/2E_DAscore_BCPvsT-ALL.pdf&quot;,p,width=8,height = 4) 17.5 (S3 A) Correlation Within BMMC Samples The correlation coefficient (R) plot among BMMC samples, calculated using metabolites abundance. The lower R value is considered as reflecting higher heterogeneity within a given sample pool, and the R of 0.8 is highlighted on the y-axis with a brown line. The median R of each box is 0.863, 0.890, and 0.859, respectively. Statistical significance was determined using Wilcoxon test. **** P &lt; 0.0001. library(dplyr) library(MNet) library(ggplot2) library(ggpubr) #------------------------------------------------------------------------------- # Step 1: Load data and set parameters #------------------------------------------------------------------------------- sample_info &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(!is.na(METc_BM_D0_ID)) dat &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;label&quot;) sample_b &lt;- sample_info %&gt;% dplyr::filter(Lineage==&quot;B&quot;) sample_t &lt;- sample_info %&gt;% dplyr::filter(Lineage==&quot;T&quot;) dat_b &lt;- dat %&gt;% dplyr::select(sample_b$METc_BM_D0_ID) %&gt;% log1p() dim(dat_b) dat_t &lt;- dat %&gt;% dplyr::select(sample_t$METc_BM_D0_ID) %&gt;% log1p() dim(dat_t) dat_all &lt;- dat %&gt;% dplyr::select(sample_info$METc_BM_D0_ID) %&gt;% log1p() dim(dat_all) #------------------------------------------------------------------------------- # Step 2: Spearman #------------------------------------------------------------------------------- cor_b &lt;- cor(dat_b,method=&quot;spearman&quot;) %&gt;% reshape2::melt() %&gt;% dplyr::filter(Var1 != Var2) %&gt;% dplyr::mutate(Var1=as.character(Var1)) %&gt;% dplyr::mutate(Var2=as.character(Var2)) %&gt;% dplyr::mutate(sample1=ifelse(Var1 &gt; Var2,Var1,Var2)) %&gt;% dplyr::mutate(sample2=ifelse(Var1 &gt; Var2,Var2,Var1)) %&gt;% dplyr::select(sample1,sample2,value) %&gt;% unique() %&gt;% dplyr::mutate(type=&quot;BCP-ALL&quot;) cor_t &lt;- cor(dat_t,method=&quot;spearman&quot;) %&gt;% reshape2::melt() %&gt;% dplyr::filter(Var1 != Var2) %&gt;% dplyr::mutate(Var1=as.character(Var1)) %&gt;% dplyr::mutate(Var2=as.character(Var2)) %&gt;% dplyr::mutate(sample1=ifelse(Var1 &gt; Var2,Var1,Var2)) %&gt;% dplyr::mutate(sample2=ifelse(Var1 &gt; Var2,Var2,Var1)) %&gt;% dplyr::select(sample1,sample2,value) %&gt;% unique() %&gt;% dplyr::mutate(type=&quot;T-ALL&quot;) print(&quot;b&quot;) print(median(cor_b$value)) print(&quot;t&quot;) print(median(cor_t$value)) cor_all &lt;- cor(x=dat_b,y=dat_t,method=&quot;spearman&quot;) %&gt;% reshape2::melt() %&gt;% dplyr::mutate(Var1=as.character(Var1)) %&gt;% dplyr::mutate(Var2=as.character(Var2)) %&gt;% dplyr::mutate(sample1=ifelse(Var1 &gt; Var2,Var1,Var2)) %&gt;% dplyr::mutate(sample2=ifelse(Var1 &gt; Var2,Var2,Var1)) %&gt;% dplyr::select(sample1,sample2,value) %&gt;% unique() %&gt;% dplyr::mutate(type=&quot;ALL-BvsT&quot;) print(&quot;B-T&quot;) print(median(cor_all$value)) cor_result &lt;- rbind(cor_b,cor_t,cor_all) comparisons &lt;- list( c(&quot;ALL-BvsT&quot;, &quot;BCP-ALL&quot;), c(&quot;BCP-ALL&quot;, &quot;T-ALL&quot;),c(&quot;ALL-BvsT&quot;, &quot;T-ALL&quot;) ) #------------------------------------------------------------------------------- # Step 3: Boxplot #------------------------------------------------------------------------------- p &lt;- ggplot(cor_result,aes(type,value))+ geom_jitter(size=.3,width=.2,color=&quot;gray&quot;)+ geom_boxplot(color=&quot;#D01910&quot;,outlier.colour = NA)+ stat_compare_means(comparisons = comparisons)+ theme_bw()+ ylim(c(0.65,1.08))+ labs(x=NULL,y=&quot;Correlation coefficient&quot;,title=&quot;Metabolism&quot;) ggsave(&quot;result/Figure2/S3A_Correlation_boxplot.pdf&quot;,p,width=4,height = 4) 17.6 (S3 B) Correlation Between HC PMMC And ALL BMMC MRD- The metabolome correlation between HC PMMC (n=12) and ALL BMMC MRD- (n=9) reveals BM MRD- was a transition state for patients to be recognized as near healthy. library(MNet) library(dplyr) library(ggpubr) #------------------------------------------------------------------------------- # Step 1: Load data and set parameters #------------------------------------------------------------------------------- dat &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(label=stringr::str_to_title(label)) %&gt;% dplyr::select(label,contains(&quot;H0&quot;),contains(&quot;MRD&quot;)) dim(dat) #------------------------------------------------------------------------------- # Step 2: Correlation between HC PMMC and ALL BMMC MRD- #------------------------------------------------------------------------------- dat_BM_HC &lt;- dat %&gt;% dplyr::select(contains(&quot;MRD&quot;)) %&gt;% log1p() dim(dat_BM_HC) dat_PB_HC &lt;- dat %&gt;% dplyr::select(contains(&quot;H0&quot;)) %&gt;% log1p() dim(dat_PB_HC) PB_HC_mean &lt;- apply(dat_PB_HC,1,mean) BM_HC_mean &lt;- apply(dat_BM_HC,1,mean) dat_mean &lt;- data.frame(PBMC=PB_HC_mean,BMMC=BM_HC_mean) p &lt;- ggscatter(dat_mean,x=&quot;PBMC&quot;,y=&quot;BMMC&quot;,color = &quot;#00599F&quot;, add.params = list(color = &quot;black&quot;, fill = &quot;#555555&quot;),add=&quot;reg.line&quot;,conf.int=TRUE,cor.coef=TRUE,cor.method=&quot;spearman&quot;)+ xlim(c(4,16))+ ylim(c(4,16))+ xlab(&quot;HC PBMC&quot;)+ ylab(&quot;MRD- BMMC&quot;) ggsave(&quot;result/Figure2/S3B_HCvsMRD_cor.pdf&quot;,p,width=5.5,height = 5) 17.7 (S3 C) Correlation Between BMMC And PBMC The metabolome correlation between BMMC (n=100) and PBMC (PB blast% &gt; 90%, n=6) indicates a high level of similarity between their intracellular metabolic features in patients with ALL. library(MNet) library(dplyr) library(ggpubr) #------------------------------------------------------------------------------- # Step 1: Load data and set parameters #------------------------------------------------------------------------------- dat &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;label&quot;) #------------------------------------------------------------------------------- # Step 2: Correlation between BMMC and PBMC #------------------------------------------------------------------------------- dat_PB &lt;- dat %&gt;% dplyr::select(contains(&quot;PB_D0&quot;)) %&gt;% log1p() dim(dat_PB) dat_BM &lt;- dat %&gt;% dplyr::select(contains(&quot;BM_D0&quot;)) %&gt;% log1p() dim(dat_BM) PB_mean &lt;- apply(dat_PB,1,mean) BM_mean &lt;- apply(dat_BM,1,mean) dat_mean &lt;- data.frame(PBMC=PB_mean,BMMC=BM_mean) p &lt;- ggscatter(dat_mean,x=&quot;PBMC&quot;,y=&quot;BMMC&quot;,color = &quot;brown&quot;, add=&quot;reg.line&quot;,conf.int=TRUE,cor.coef=TRUE,cor.method=&quot;spearman&quot;) ggsave(&quot;result/Figure2/S3C_PBMCvsBMMC_cor.pdf&quot;,p,width=5.5,height = 5) 17.8 (S3 D) Differential Analyses Differential analyses were conducted in HC PBMC (n=12) and ALL PBMC/BMMC (n=106). The significant differential metabolites were identified using the criteria: P &lt; 0.05, log2(Fold change) &gt; abs(0.26). library(dplyr) library(ggplot2) #------------------------------------------------------------------------------- # Step 1: Set parameters #------------------------------------------------------------------------------- mark_gene &lt;- unique(c(&quot;Malonic Acid&quot;,&quot;Cdp&quot;,&quot;Dtmp&quot;,&quot;Cytosine&quot;,&quot;Damp&quot;,&quot;Adp&quot;,&quot;Gdp&quot;,&quot;Deoxyadenosine&quot;, &quot;Udp&quot;,&quot;L-Glutamine&quot;,&quot;Nicotinamide Ribotide&quot;,&quot;Fgar&quot;,&quot;Xmp&quot;,&quot;Ribulose 5-Phosphate&quot; ,&quot;Xylulose 5-Phosphate&quot;,&quot;Fmn&quot;,&quot;Adp&quot;,&quot;Fumaric Acid&quot;,&quot;L-Malic Acid&quot;,&quot;Citric Acid&quot;,&quot;Sn-Glycero-3-Phosphate&quot;,&quot;Ribulose 5-Phosphate&quot;,&quot;Xylulose 5-Phosphate&quot;)) ## Differential analysis visualization mydata &lt;- data.table::fread(&quot;result/Figure2/1.BMMCvsHC.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(Condition=ifelse(logFC &gt; 0.26 &amp; P.Value &lt; 0.05,&quot;Up&quot;, ifelse(logFC &lt; -0.26 &amp; P.Value &lt; 0.05,&quot;Down&quot;,&quot;Not Sig&quot;))) %&gt;% dplyr::mutate(Condition=factor(Condition,levels = c(&quot;Up&quot;,&quot;Down&quot;,&quot;Not Sig&quot;))) %&gt;% dplyr::mutate(name=stringr::str_to_title(name)) %&gt;% dplyr::mutate(label=ifelse(name %in% mark_gene,name,NA)) #------------------------------------------------------------------------------- # Step 2: Volcano plot #------------------------------------------------------------------------------- p &lt;- ggplot(mydata,aes(logFC,-log10(P.Value)))+ geom_point(aes(color=Condition),size=2,alpha=0.7)+ geom_vline(xintercept=c(-0.26,0.26), linetype = &#39;dashed&#39;,color=&quot;gray&quot;)+ geom_hline(yintercept = -log10(0.05),linetype=&#39;dashed&#39;,color=&quot;gray&quot;)+ ggrepel::geom_text_repel(aes(label=label),size=1)+ scale_color_manual(values=c(&quot;Up&quot;=&quot;#FD6AB0&quot;,&quot;Not Sig&quot;=&quot;gray&quot;,&quot;Down&quot;=&quot;#00AE4C&quot;))+ theme_bw()+ theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank())+ labs(x=&quot;log2(Fold Change)&quot;,y=&quot;-log10(P Value)&quot;) ggsave(&quot;result/Figure2/S3D_Diff.pdf&quot;,p,width=5,height = 4.5) 17.9 (S3 E) Volcano Plot of BMMC-D0 vs. MRD- The volcano plot of BMMC-D0 vs. MRD-, most of the differential metabolites are consistent with panel d. library(dplyr) library(ggplot2) library(MNet) #------------------------------------------------------------------------------- # Step 1: Load data and set parameters #------------------------------------------------------------------------------- sample &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() sample_D0 &lt;- sample %&gt;% dplyr::filter(!is.na(METc_BM_D0_ID)) sample_MRD &lt;- sample %&gt;% dplyr::filter(!is.na(`METc_BM_MRD-_ID`)) dat &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% dplyr::select(label,all_of(sample_D0$METc_BM_D0_ID),all_of(sample_MRD$`METc_BM_MRD-_ID`)) %&gt;% dplyr::filter(!is.na(`RJ-19004_METc_BM_MRD-`)) %&gt;% tibble::column_to_rownames(&quot;label&quot;) ## Differential analysis dat &lt;- log2(dat+1) group &lt;- c(rep(&quot;tumor&quot;,100),rep(&quot;normal&quot;,9)) metabolite_all &lt;- mlimma(dat,group) metabolite_diff &lt;- metabolite_all %&gt;% dplyr::filter(abs(logFC) &gt; 0.26) %&gt;% dplyr::filter(P.Value &lt; 0.05) mark_gene &lt;- unique(c(&quot;Cytosine&quot;,&quot;Adp&quot;, &quot;Xmp&quot;,&quot;Nicotinamide Ribotide&quot;,&quot;Fumaric Acid&quot;)) mydata &lt;- metabolite_all %&gt;% as.data.frame() %&gt;% dplyr::mutate(Condition=ifelse(logFC &gt; 0.26 &amp; P.Value &lt; 0.05,&quot;Up&quot;, ifelse(logFC &lt; -0.26 &amp; P.Value &lt; 0.05,&quot;Down&quot;,&quot;Not Sig&quot;))) %&gt;% dplyr::mutate(Condition=factor(Condition,levels = c(&quot;Up&quot;,&quot;Down&quot;,&quot;Not Sig&quot;))) %&gt;% dplyr::mutate(name=stringr::str_to_title(name)) %&gt;% dplyr::mutate(label=ifelse(name %in% mark_gene,name,NA)) #------------------------------------------------------------------------------- # Step 2: Volcano plot #------------------------------------------------------------------------------- p &lt;- ggplot2::ggplot(mydata,ggplot2::aes(logFC,-log10(P.Value)))+ ggplot2::geom_point(ggplot2::aes(color=Condition),size=2,alpha=0.7)+ ggplot2::geom_vline(xintercept=c(-0.26,0.26), linetype = &#39;dashed&#39;,color=&quot;gray&quot;)+ ggplot2::geom_hline(yintercept = -log10(0.05),linetype=&#39;dashed&#39;,color=&quot;gray&quot;)+ ggrepel::geom_text_repel(ggplot2::aes(label=label),size=1)+ ggplot2::scale_color_manual(values=c(&quot;Up&quot;=&quot;#D01910&quot;,&quot;Not Sig&quot;=&quot;gray&quot;,&quot;Down&quot;=&quot;#00599F&quot;))+ ggplot2::theme_bw()+ ggplot2::theme(panel.grid.major = ggplot2::element_blank(),panel.grid.minor = ggplot2::element_blank())+ ggplot2::labs(x=&quot;log2(Fold Change)&quot;,y=&quot;-log10(P Value)&quot;) ggsave(&quot;result/Figure2/S3E_Volcano.pdf&quot;,p,width=5,height = 4.5) 17.10 (S3 F) Abundance Boxplot The abundance boxplots for significantly disturbed metabolites identified in energy, nucleotide and glycerolipid metabolism. library(dplyr) library(MNet) library(ggplot2) library(ggpubr) #------------------------------------------------------------------------------- # Step 1: Load data and conduct mlimma #------------------------------------------------------------------------------- ## BMMC vs HC sample_info_temp &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() sample_info_BH &lt;- sample_info_temp %&gt;% dplyr::filter(!is.na(METc_BM_D0_ID)) %&gt;% dplyr::select(METc_BM_D0_ID) %&gt;% dplyr::rename(&quot;id&quot;=&quot;METc_BM_D0_ID&quot;) %&gt;% dplyr::select(id) dat_filter_BH &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::select(sample_info_BH$id,starts_with(&quot;H&quot;)) dat_filter_BH &lt;- log2(dat_filter_BH+1) dim(dat_filter_BH) matching_columns &lt;- grep(&quot;BM&quot;,colnames(dat_filter_BH),value = T) length(matching_columns) length(dat_filter_BH) group_BH &lt;- c(rep(&quot;tumor&quot;,100),rep(&quot;normal&quot;,12)) table(group_BH) metabolite_BH &lt;- mlimma(dat_filter_BH,group_BH) write.table(metabolite_BH,&quot;result/Figure2/S3F_BMMCvsHC.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) ## PBMC vs HC sample_info_temp &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() sample_info_PH &lt;- sample_info_temp %&gt;% dplyr::filter(!is.na(METc_PB_D0_ID)) %&gt;% dplyr::select(METc_PB_D0_ID) %&gt;% dplyr::rename(&quot;id&quot;=&quot;METc_PB_D0_ID&quot;) %&gt;% dplyr::select(id) dat_filter_PH &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::select(sample_info_PH$id,starts_with(&quot;H&quot;)) dat_filter_PH &lt;- log2(dat_filter_PH+1) dim(dat_filter_PH) matching_columns &lt;- grep(&quot;H&quot;,colnames(dat_filter_PH),value = T) length(matching_columns) length(dat_filter_PH) group_PH &lt;- c(rep(&quot;tumor&quot;,6),rep(&quot;normal&quot;,12)) table(group_PH) metabolite_PH &lt;- mlimma(dat_filter_PH,group_PH) write.table(metabolite_PH,&quot;result/Figure2/S3F_PBMCvsHC.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) ## BMMC vs PBMC sample_info_temp &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() sample_info_BM &lt;- sample_info_temp %&gt;% dplyr::filter((!is.na(METc_BM_D0_ID))) %&gt;% dplyr::select(METc_BM_D0_ID) %&gt;% dplyr::rename(&quot;id&quot;=&quot;METc_BM_D0_ID&quot;) %&gt;% dplyr::select(id) sample_info_PB &lt;- sample_info_temp %&gt;% dplyr::filter(!is.na(METc_PB_D0_ID)) %&gt;% dplyr::select(METc_PB_D0_ID) %&gt;% dplyr::rename(&quot;id&quot;=&quot;METc_PB_D0_ID&quot;) %&gt;% dplyr::select(id) sample_info_BP &lt;- rbind(sample_info_BM,sample_info_PB) dat_filter_BP &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::select(sample_info_BP$id) dat_filter_BP &lt;- log2(dat_filter_BP+1) matching_columns &lt;- grep(&quot;BM&quot;, colnames(dat_filter_BP), value = TRUE) length(matching_columns) length(dat_filter_BP) group_BP &lt;- c(rep(&quot;tumor&quot;,100),rep(&quot;normal&quot;,6)) table(group_BP) metabolite_BP &lt;- mlimma(dat_filter_BP,group_BP) write.table(metabolite_BP,&quot;result/Figure2/S3F_BMMCvsPBMC.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) #------------------------------------------------------------------------------- # Step 2: Select significantly disturbed metabolites #------------------------------------------------------------------------------- ## Significantly disturbed metabolites name1 &lt;- c(&quot;Fructose 1,6-Bisphosphate&quot;,&quot;Citric Acid&quot;,&quot;Adp&quot;,&quot;Nicotinamide Ribotide&quot;) name2 &lt;- c(&quot;Gdp&quot;,&quot;Udp&quot;,&quot;Xmp&quot;,&quot;Cytosine&quot;) name3 &lt;- c(&quot;Udp-Glucose&quot;,&quot;Sn-Glycero-3-Phosphate&quot;,&quot;Glucose 1-Phosphate&quot;,&quot;Dihydroxyacetone Phosphate&quot;) met_name &lt;- c(name1,name2,name3) ## BMMC vs HC meta_filter_BH &lt;- metabolite_BH %&gt;% dplyr::mutate(name=stringr::str_to_title(name)) %&gt;% dplyr::filter(name %in% met_name) %&gt;% dplyr::select(P.Value,name) %&gt;% dplyr::mutate(group=rep(&quot;BH&quot;,12)) ## PBMC vs HC meta_filter_PH &lt;- metabolite_PH %&gt;% dplyr::mutate(name=stringr::str_to_title(name)) %&gt;% dplyr::filter(name %in% met_name) %&gt;% dplyr::select(P.Value,name) %&gt;% dplyr::mutate(group=rep(&quot;PH&quot;,12)) ## BMMC vs PBMC meta_filter_BP &lt;- metabolite_BP %&gt;% dplyr::mutate(name=stringr::str_to_title(name)) %&gt;% dplyr::filter(name %in% met_name) %&gt;% dplyr::select(P.Value,name) %&gt;% dplyr::mutate(group=rep(&quot;BP&quot;,12)) meta_filter_all &lt;- rbind(meta_filter_BH,meta_filter_BP,meta_filter_PH) %&gt;% dplyr::mutate(name=factor(name,levels = met_name)) %&gt;% dplyr::arrange(name) write.table(meta_filter_all,&quot;result/Figure2/S3F_meta_groupcomparison.txt&quot;,sep = &quot;\\t&quot;,quote = F,row.names = F) #------------------------------------------------------------------------------- # Step 3: Boxplot #------------------------------------------------------------------------------- ## Load data and set parameters sample_info1 &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(!is.na(METc_BM_D0_ID)) sample_info2 &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(!is.na(METc_PB_D0_ID)) dat &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::select(all_of(sample_info1$METc_BM_D0_ID),all_of(sample_info2$METc_PB_D0_ID),starts_with(&quot;H&quot;)) group &lt;- c(rep(&quot;A&quot;,length(sample_info1$METc_BM_D0_ID)), rep(&quot;P&quot;,length(sample_info2$METc_PB_D0_ID)), rep(&quot;HC&quot;,length(grep(&quot;H&quot;,names(dat))))) dat_filter &lt;- dat %&gt;% tibble::rownames_to_column(&quot;label&quot;) %&gt;% dplyr::mutate(label=stringr::str_to_title(label)) %&gt;% dplyr::filter(label %in% c(name1,name2,name3)) %&gt;% tibble::column_to_rownames(&quot;label&quot;) dat_filter &lt;- myscale(log2(dat_filter+1),method=&quot;raw_zscore&quot;)%&gt;% t() %&gt;% as.data.frame() dat_filter$group &lt;- group dat_melt &lt;- reshape2::melt(dat_filter,id=&quot;group&quot;) my_comparisons &lt;- list( c(&quot;HC&quot;, &quot;P&quot;), c(&quot;HC&quot;, &quot;A&quot;), c(&quot;P&quot;, &quot;A&quot;) ) ## Boxplot plot_list &lt;- list() for (i in 1:length(met_name)) { dat_melt_filter &lt;- dat_melt %&gt;% dplyr::filter(variable==met_name[i]) %&gt;% dplyr::mutate(group=factor(group,levels = c(&quot;HC&quot;,&quot;P&quot;,&quot;A&quot;))) p &lt;- ggplot(dat_melt_filter, aes(x=group,y = value,fill=group)) + geom_boxplot(outlier.shape = NA)+ geom_point(position = &quot;jitter&quot;,size=0.2,alpha=0.8)+ scale_fill_manual(values=c(&quot;#007DDB&quot;,&quot;#D01910&quot;,&quot;purple&quot;))+ theme_classic()+ theme(legend.position=&quot;none&quot;)+ylim(-7,7)+ labs(x=NULL,y=NULL,title = unique(dat_melt_filter$variable)) plot_list[[i]] &lt;- p } plot_grid &lt;- cowplot::plot_grid(plotlist = plot_list, nrow = 3) ggsave(&quot;result/Figure2/S3F_AbunBoxplot.pdf&quot;,plot_grid,width=12,height = 10) 17.11 (S3 G) WGCNA (left) WGCNA identified 13 metabolite modules (ME01–13) enriched in intracellular metabolomic data for ALL samples. Each network node represents one metabolite, color-coded by the different modules. (right) Overlay of significantly upregulated/downregulated metabolites between ALL and HC onto the network nodes. #------------------------------------------------------------------------------- # Step 1: WGCNA identified 13 metabolite modules (ME01–13) enriched in intracellular metabolomic data for ALL samples. #------------------------------------------------------------------------------- library(dplyr) library(ggplot2) ## data node.data &lt;- data.table::fread(&quot;raw_data/node_position.txt&quot;) %&gt;% as.data.frame() edge.data &lt;- data.table::fread(&quot;raw_data/edge_result.txt&quot;) %&gt;% as.data.frame() color.module &lt;- c(&quot;#CCCCCC&quot;,&quot;#ecb888&quot;,&quot;#af88bb&quot;,&quot;#a032cb&quot;,&quot;#efbed6&quot;,&quot;#fc496a&quot;,&quot;#b6d37f&quot;,&quot;#589336&quot;,&quot;#7fd68e&quot;,&quot;#52c465&quot;, &quot;#3372e0&quot;,&quot;#84d7f6&quot;,&quot;#5394c3&quot;,&quot;#6376b3&quot;,&quot;#7f6cd7&quot;,&quot;#c4ceff&quot;,&quot;#fc9d40&quot;,&quot;#5c95e0&quot;,&quot;#cd7560&quot;, &quot;#ff70e4&quot;, &quot;#ff8738&quot;, &quot;#ffcead&quot;,&quot;#1cbf8b&quot;, &quot;#b76d38&quot;, &quot;#1584ff&quot;, &quot;#7f006d&quot;, &quot;#ffd35f&quot;,&quot;#E66F73&quot;, &quot;#F57F20&quot;,&quot;#1DBB95&quot;,&quot;#9CB79F&quot;,&quot;#F0B8D2&quot;,&quot;#A0485E&quot;,&quot;#A0688E&quot;,&quot;#C7E1DF&quot;,&quot;#51B1DF&quot;,&quot;#6D97D7&quot;,&quot;#5D6193&quot;, &quot;#CEC3E0&quot;,&quot;#A9917E&quot;,&quot;#7C7D80&quot;,&quot;#F4E192&quot;,&quot;#ADD666&quot;) color.module &lt;- c(&quot;#CCCCCC&quot;,&quot;#ecb888&quot;,&quot;#af88bb&quot;,&quot;#a032cb&quot;,&quot;#efbed6&quot;,&quot;#fc496a&quot;,&quot;#1584ff&quot;,&quot;#ffd35f&quot;,&quot;#7fd68e&quot;,&quot;#52c465&quot;, &quot;#F57F20&quot;,&quot;#84d7f6&quot;,&quot;#5394c3&quot;,&quot;#6376b3&quot;,&quot;#7f6cd7&quot;,&quot;#c4ceff&quot;,&quot;#A0485E&quot;) names(color.module) &lt;- paste0(&quot;ME&quot;, seq(0,length(color.module)-1)) ## plot network gg &lt;- ggplot() gg &lt;- gg + geom_segment(mapping = aes(x = from.x, y = from.y, xend = to.x, yend = to.y), color = &quot;#CCCCCC&quot;, size = 0.01, data = edge.data) # draw a straight line gg &lt;- gg + geom_point(mapping = aes(x = pos.x, y = pos.y, color = Module), size = 4, data = node.data) # add point gg &lt;- gg + scale_size(range = c(0, 6) * 2) # specifies the minimum and maximum size gg &lt;- gg + theme_void() gg &lt;- gg + labs(x = &quot;&quot;, y = &quot;&quot;, title = paste0(&quot;MMI&quot;)) gg &lt;- gg + scale_colour_manual(values = color.module) ggsave(paste0(&quot;result/Figure2/S3G_WGCNA-Vasualization.pdf&quot;), gg, width = 8, height = 6) #------------------------------------------------------------------------------- # Step 2: verlay of significantly upregulated/downregulated metabolites between ALL and HC onto the network nodes. #------------------------------------------------------------------------------- ## data result_all &lt;- data.table::fread(&quot;result/Figure2/1.BMMCvsHC.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(Type=ifelse(P.Value &lt; 0.05 &amp; logFC&gt;0,&quot;Up&quot;, ifelse(P.Value &lt; 0.05 &amp; logFC &lt; 0,&quot;Down&quot;,&quot;No-Sig&quot;))) %&gt;% dplyr::select(name,Type) node.data &lt;- data.table::fread(&quot;raw_data/node_position.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::left_join(result_all,by=c(&quot;label&quot;=&quot;name&quot;)) edge.data &lt;- data.table::fread(&quot;raw_data/edge_result.txt&quot;) %&gt;% as.data.frame() ## plot network gg &lt;- ggplot() gg &lt;- gg + geom_segment(mapping = aes(x = from.x, y = from.y, xend = to.x, yend = to.y), color = &quot;#CCCCCC&quot;, size = 0.01, data = edge.data) # draw a straight line gg &lt;- gg + geom_point(mapping = aes(x = pos.x, y = pos.y, color = Type), size = 3, data = node.data[which(node.data$Type == &quot;No-Sig&quot;), ]) gg &lt;- gg + geom_point(mapping = aes(x = pos.x, y = pos.y, color = Type), size = 4.5, data = node.data[which(node.data$Type != &quot;No-Sig&quot;), ]) gg &lt;- gg + scale_colour_manual(values = c(&quot;Down&quot;=&quot;#00599F&quot;,&quot;Up&quot;=&quot;#D01910&quot;,&quot;No-Sig&quot;=&quot;#AAAAAA&quot;)) gg &lt;- gg + scale_size(range = c(0, 6) * 2) # specifies the minimum and maximum size gg &lt;- gg + theme_void() gg &lt;- gg + labs(x = &quot;&quot;, y = &quot;&quot;, title = paste0(&quot;MMI&quot;)) ggsave(paste0(&quot;result/Figure2/S3G_WGCNA-Vasualization-diff.pdf&quot;), gg, width = 8, height = 6) 17.12 (S3 H) bar plot The proportion of metabolites annotated category at each cluster in (g). library(dplyr) library(ggplot2) kid &lt;- readxl::read_excel(&quot;raw_data/Supplementary Tables.xlsx&quot;,sheet=7,skip=1) %&gt;% as.data.frame() %&gt;% dplyr::select(Refmet_name,`Annotated category`) module &lt;- data.table::fread(&quot;raw_data/2.metabolite_module.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::left_join(kid,by=c(&quot;V1&quot;=&quot;Refmet_name&quot;)) module_sum &lt;- module %&gt;% dplyr::group_by(moduleLabels,`Annotated category`) %&gt;% dplyr::summarise(n=n()) %&gt;% as.data.frame() %&gt;% dplyr::filter(moduleLabels != 0) %&gt;% dplyr::arrange(desc(moduleLabels)) %&gt;% dplyr::mutate(moduleLabels=paste0(&quot;ME&quot;,moduleLabels)) %&gt;% dplyr::mutate(moduleLabels=factor(moduleLabels,levels=unique(moduleLabels))) cols &lt;- c(&quot;Amino acids and peptides&quot; =&quot;#1B9E77&quot;, Carbohydrates=&quot;#D95F02&quot;,&quot;Cofactors and Vitamins&quot;=&quot;#7570B3&quot;, Energy=&quot;#E7298A&quot;,Lipids=&quot;#66A61E&quot;,&quot;Nucleic acids&quot;=&quot;#E6AB02&quot;, Other=&quot;#A6761D&quot;,Xenobiotics=&quot;#666666&quot;) p &lt;- ggplot(module_sum,aes(x=moduleLabels,y=n,fill=`Annotated category`))+ geom_bar(stat=&quot;identity&quot;,position = &quot;fill&quot;)+ theme_bw()+ scale_fill_manual(values = cols)+ coord_flip()+ labs(x=NULL,y=NULL) ggsave(&quot;result/Figure2/S3H_module-metabolite-annotation.pdf&quot;,p,width=5,height = 5) 17.13 (S3 I) Venn Diagram The Venn diagram shows the significantly differential metabolites among defined groups. library(dplyr) library(ggplot2) library(ComplexHeatmap) library(MNet) library(ggpubr) #------------------------------------------------------------------------------- # Step 1: Load data and set parameters #------------------------------------------------------------------------------- sample_info &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Subtype %in% c(&quot;Ph&quot;,&quot;non_Ph&quot;)) %&gt;% dplyr::filter(!is.na(METc_BM_D0_ID)) dat &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(label,all_of(sample_info$METc_BM_D0_ID)) %&gt;% tibble::column_to_rownames(&quot;label&quot;) #------------------------------------------------------------------------------- # Step 2: Differential analysis of ph and ph- #------------------------------------------------------------------------------- group &lt;- sample_info$Subtype group[which(group==&quot;Ph&quot;)] &lt;- &quot;tumor&quot; group[which(group==&quot;non_Ph&quot;)] &lt;- &quot;normal&quot; metabolite_all &lt;- mlimma(log2(dat+1),group) metabolite_diff &lt;- metabolite_all %&gt;% dplyr::filter(abs(logFC) &gt; 0.26) %&gt;% dplyr::filter(P.Value &lt; 0.05) write.table(metabolite_all,&quot;result/Figure2/3.PhvsPh-_all.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) write.table(metabolite_diff,&quot;result/Figure2/3.PhvsPh-_diff.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) #------------------------------------------------------------------------------- # Step 3: Venn Diagram #------------------------------------------------------------------------------- library(VennDiagram) BMMCvsHC &lt;- data.table::fread(&quot;result/Figure2/1.BMMCvsHC.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(abs(logFC) &gt; 0.26) %&gt;% dplyr::filter(P.Value &lt; 0.05) BvsT &lt;- data.table::fread(&quot;result/Figure2/2E_BvsT_all.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(abs(logFC) &gt; 0.26) %&gt;% dplyr::filter(P.Value &lt; 0.05) Ph &lt;- data.table::fread(&quot;result/Figure2/3.PhvsPh-_all.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(abs(logFC) &gt; 0.26) %&gt;% dplyr::filter(P.Value &lt; 0.05) venn.plot &lt;- venn.diagram( x = list(BMMCvsHC = BMMCvsHC$name,BvsT = BvsT$name,Ph = Ph$name), filename = NULL, col = &quot;transparent&quot;,fill = c(&quot;#E6AB02&quot;, &quot;#1F78B4&quot;, &quot;#E7298A&quot;), alpha = 0.5, label.col = c(&quot;black&quot;, &quot;black&quot;, &quot;black&quot;, &quot;black&quot;,&quot;black&quot;, &quot;black&quot;, &quot;black&quot;), cex = 2.5, fontfamily = &quot;serif&quot;, fontface = &quot;bold&quot;, cat.default.pos = &quot;text&quot;, cat.col = c(&quot;black&quot;, &quot;black&quot;, &quot;black&quot;), cat.cex = 2.5, cat.fontfamily = &quot;serif&quot;, cat.dist = c(0.06, 0.06, 0.03), cat.pos = 0) pdf(&quot;result/Figure2/S3I_Venn.pdf&quot;,width=10,height = 10) grid.draw(venn.plot) dev.off() 17.14 (S3 J) Boxplot The boxplots depict the normalized peak area of these intersecting metabolites. library(dplyr) library(MNet) library(ggplot2) library(ggpubr) #------------------------------------------------------------------------------- # Step 1: Load data and conduct mlimma #------------------------------------------------------------------------------- ## Significantly differential metabolites among defined groups BMMCvsHC &lt;- data.table::fread(&quot;result/Figure2/1.BMMCvsHC.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(abs(logFC) &gt; 0.26) %&gt;% dplyr::filter(P.Value &lt; 0.05) BvsT &lt;- data.table::fread(&quot;result/Figure2/2E_BvsT_all.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(abs(logFC) &gt; 0.26) %&gt;% dplyr::filter(P.Value &lt; 0.05) Ph &lt;- data.table::fread(&quot;result/Figure2/3.PhvsPh-_all.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(abs(logFC) &gt; 0.26) %&gt;% dplyr::filter(P.Value &lt; 0.05) met_name &lt;- intersect(intersect(BMMCvsHC$name,BvsT$name),Ph$name) table(met_name) ## BMMC vs HC meta_filter_BH &lt;- data.table::fread(&quot;result/Figure2/S3F_BMMCvsHC.txt&quot;) %&gt;% dplyr::filter(name %in% met_name) %&gt;% dplyr::select(P.Value,name) %&gt;% dplyr::mutate(group=rep(&quot;BH&quot;,4)) ## PBMC vs HC meta_filter_PH &lt;- data.table::fread(&quot;result/Figure2/S3F_PBMCvsHC.txt&quot;) %&gt;% dplyr::filter(name %in% met_name) %&gt;% dplyr::select(P.Value,name) %&gt;% dplyr::mutate(group=rep(&quot;PH&quot;,4)) ## BMMC vs PBMC meta_filter_BP &lt;- data.table::fread(&quot;result/Figure2/S3F_BMMCvsPBMC.txt&quot;) %&gt;% dplyr::filter(name %in% met_name) %&gt;% dplyr::select(P.Value,name) %&gt;% dplyr::mutate(group=rep(&quot;BP&quot;,4)) meta_filter_all &lt;- rbind(meta_filter_BH,meta_filter_BP,meta_filter_PH) %&gt;% dplyr::mutate(name=factor(name,levels=met_name)) %&gt;% dplyr::arrange(name) write.table(meta_filter_all,&quot;result/Figure2/S3J_meta_groupcomparison.txt&quot;,sep = &quot;\\t&quot;,quote = F,row.names = F) #------------------------------------------------------------------------------- # Step 2: Boxplot #------------------------------------------------------------------------------- dat &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::select(all_of(sample_info1$METc_BM_D0_ID),all_of(sample_info2$METc_PB_D0_ID),starts_with(&quot;H&quot;)) group &lt;- c(rep(&quot;A&quot;,length(sample_info1$METc_BM_D0_ID)),rep(&quot;P&quot;,length(sample_info2$METc_PB_D0_ID)), rep(&quot;HC&quot;,length(grep(&quot;H&quot;,names(dat))))) dat_filter &lt;- dat %&gt;% tibble::rownames_to_column(&quot;label&quot;) %&gt;% dplyr::filter(label %in% met_name) %&gt;% tibble::column_to_rownames(&quot;label&quot;) dat_filter &lt;- myscale(log2(dat_filter+1),method=&quot;raw_zscore&quot;)%&gt;% t() %&gt;% as.data.frame() dat_filter$group &lt;- group dat_melt &lt;- reshape2::melt(dat_filter,id=&quot;group&quot;) plot_list &lt;- list() for (i in 1:length(met_name)) { dat_melt_filter &lt;- dat_melt %&gt;% dplyr::filter(variable==met_name[i]) %&gt;% dplyr::mutate(group=factor(group,levels = c(&quot;HC&quot;,&quot;P&quot;,&quot;A&quot;))) p &lt;- ggplot(dat_melt_filter, aes(x=group,y = value,fill=group)) + geom_boxplot(outlier.shape = NA)+ geom_point(position = &quot;jitter&quot;,size=0.5,alpha=0.8)+ scale_fill_manual(values=c(&quot;#007DDB&quot;,&quot;#D01910&quot;,&quot;purple&quot;))+ theme_classic()+ theme(legend.position=&quot;none&quot;)+ylim(-7,7)+ labs(x=NULL,y=NULL,title = unique(dat_melt_filter$variable)) plot_list[[i]] &lt;- p } plot_grid &lt;- cowplot::plot_grid(plotlist = plot_list, nrow = 1) ggsave(&quot;result/Figure2/S3J_boxplot.pdf&quot;,plot_grid,width=8,height = 3) 17.15 (S3 K) Pathway-based Analysis Pathway-based analysis of metabolic changes between Ph+ BCP-ALL and Ph- BCP-ALL. library(dplyr) library(MNet) library(ggplot2) library(tidymass) #------------------------------------------------------------------------------- # Step 1: Load data and set parameters #------------------------------------------------------------------------------- metabolite_all &lt;- data.table::fread(&quot;result/Figure2/3.PhvsPh-_all.txt&quot;) %&gt;% as.data.frame() metabolite_diff &lt;- metabolite_all %&gt;% dplyr::filter(abs(logFC) &gt; 0.26) %&gt;% dplyr::filter(P.Value &lt; 0.05) kid &lt;- readxl::read_excel(&quot;raw_data/cell_metabolite_info_all_v1109.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(refmet_name,KEGG) data_all &lt;- metabolite_all %&gt;% dplyr::left_join(kid,by=c(&quot;name&quot;=&quot;refmet_name&quot;)) %&gt;% dplyr::filter(KEGG!=&quot;None&quot;) %&gt;% dplyr::pull(KEGG) dat &lt;- metabolite_all %&gt;% dplyr::left_join(kid,by=c(&quot;name&quot;=&quot;refmet_name&quot;)) %&gt;% dplyr::filter(KEGG!=&quot;None&quot;) %&gt;% dplyr::filter(P.Value &lt; 0.05) %&gt;% dplyr::mutate(change=ifelse(logFC &gt; 0.26,&quot;increase&quot;, ifelse(logFC &lt; -0.26,&quot;decrease&quot;,&quot;no sig&quot;))) data_increase &lt;- dat %&gt;% dplyr::filter(change==&quot;increase&quot;) %&gt;% dplyr::pull(KEGG) data_decrease &lt;- dat %&gt;% dplyr::filter(change==&quot;decrease&quot;) %&gt;% dplyr::pull(KEGG) #------------------------------------------------------------------------------- # Step 2: DA-score #------------------------------------------------------------------------------- da_result &lt;- ePDAlyser(data_increase,data_decrease,data_all,sort_plot=&quot;category&quot;, min_measured_num = 2,out=&quot;metabolite&quot;) ggplot2::ggsave(da_result$p,filename = &quot;result/Figure2/S3K_DA_score_all.pdf&quot;, width=13,height=9) openxlsx::write.xlsx(da_result$result,file=&quot;result/Figure2/S3K_DA_score_all.xlsx&quot;,rowNames = FALSE) diff.kid &lt;- metabolite_all %&gt;% dplyr::filter(P.Value &lt;0.05) %&gt;% dplyr::filter(logFC &gt; 0.26 | logFC &lt; -0.26) %&gt;% dplyr::left_join(kid,by=c(&quot;name&quot;=&quot;refmet_name&quot;)) %&gt;% dplyr::filter(KEGG!=&quot;None&quot;) %&gt;% dplyr::pull(KEGG) %&gt;% unique() data(&quot;kegg_hsa_pathway&quot;, package = &quot;metpath&quot;) #Remove the disease pathway pathway_class = metpath::pathway_class(kegg_hsa_pathway) remain_idx = pathway_class %&gt;% unlist() %&gt;% stringr::str_detect(&quot;Disease&quot;) %&gt;% `!`() %&gt;% which() pathway_database = kegg_hsa_pathway[remain_idx] #------------------------------------------------------------------------------- # Step 3: MSEA #------------------------------------------------------------------------------- result &lt;- enrich_kegg(query_id = diff.kid, query_type = &quot;compound&quot;, id_type = &quot;KEGG&quot;,method = &quot;hypergeometric&quot;, pathway_database = pathway_database, p_cutoff = 0.05, p_adjust_method = &quot;BH&quot;, threads = 5) msea_table &lt;- result@result %&gt;% dplyr::arrange(p_value) %&gt;% data.frame() tablefilter &lt;- dplyr::filter(msea_table,p_value &lt; 0.05) write.csv(msea_table,&quot;result/Figure2/S3K_MSEA_all.csv&quot;) ## Enrichment pathway visualization da_filter &lt;- da_result$result %&gt;% dplyr::filter(KEGG_pathwayid %in% tablefilter$pathway_id) %&gt;% dplyr::arrange(`Pathway Category`) %&gt;% dplyr::mutate(Pathway=factor(Pathway,levels = Pathway)) pathway_data &lt;- PathwayExtendData %&gt;% dplyr::filter(type==&quot;metabolite&quot;) colp &lt;- c(&quot;Amino acid metabolism&quot; =&quot;#1B9E77&quot;, &quot;Carbohydrate metabolism&quot;=&quot;#D95F02&quot;, &quot;Glycan biosynthesis and metabolism&quot;=&quot;#1F78B4&quot;, &quot;Metabolism of cofactors and vitamins&quot;=&quot;#7570B3&quot;, &quot;Metabolism of terpenoids and polyketides&quot;=&quot;#BC80BD&quot;, &quot;Metabolism of other amino acids&quot;=&quot;#8DD3C7&quot;, &quot;Energy metabolism&quot;=&quot;#E7298A&quot;, &quot;Lipid metabolism&quot;=&quot;#66A61E&quot;, &quot;Nucleotide metabolism&quot;=&quot;#E6AB02&quot;, &quot;Biosynthesis of other secondary metabolites&quot;=&quot;#A6761D&quot;, &quot;Xenobiotics biodegradation and metabolism&quot;=&quot;#666666&quot;) p &lt;- ggplot(da_filter)+ geom_point(aes(x=Pathway,y=DA_score,size=log2(Measured_members_num),color=`Pathway Category`))+ geom_pointrange(aes(x=Pathway,y=DA_score,ymin=0,ymax=DA_score,color=`Pathway Category`))+ scale_color_manual(values=colp)+ coord_flip()+ xlab(NULL)+ theme_bw() ggsave(&quot;result/Figure2/S3K_PHpathway.pdf&quot;,p,width=8,height = 4) "],["figure-3.html", "Chapter 18 Figure 3 18.1 (A) GSVA Scores for Metabolic Pathways 18.2 (B) Mutations and Metabolites 18.3 (C) IDH1/2 and ETV6 Mutations 18.4 (D) Fusions and Metabolites 18.5 (E) BCR-ABL1 Fusion 18.6 (S4 A) Metabolic Gene Heatmap 18.7 (S4 B) Correlation Within BMMC Samples 18.8 (S4 C) Correlation of mRNA Expression of Metabolic Genes", " Chapter 18 Figure 3 Figure 3: Relationship between intracellular metabolome, transcriptome and genomic features in BCP-ALL and T-ALL. A. Gene set variation analysis (GSVA) of enrichment scores for metabolic pathways in BCP-ALL and T-ALL samples at the RNA-seq level. Each subtype exhibits both individuality and potential commonality. B. The heatmap illustrates the associations between the metabolites abundance (column) of ALL BMMC and the presence of mutations within the indicated genes (row). The mutations include high frequency somatic mutations within reported ALL-related genes. T statistics are calculated by a linear regression model to represent the correlation level. C. Correlations between IDH1/2 mutations and 2-HG (left panel), and ETV6 mutations and glutamine (right panel). All samples were ordered based on the abundance (y-axis) of indicated metabolites, and the ones with corresponding mutations were highlighted in red and indicated by the corresponding lines displayed in x-axis. D. The heatmap illustrates the associations between the abundance of metabolites and the presence of indicated well-known gene fusions. T statistics were calculated by a linear regression model. E. Correlations between the BCR-ABL1 fusion and the abundance of adenosine (left panel), as well as 2’,3’-cyclic AMP (right panel). Fusion genes were shown as lines and samples were ordered based on the abundance (y-axis) of indicated metabolites. 18.1 (A) GSVA Scores for Metabolic Pathways Gene set variation analysis (GSVA) scores for metabolic pathways in BCP-ALL and T-ALL samples at the RNA-seq level. Each subgroup exhibits both individuality and potential commonality. library(GSVA) library(ComplexHeatmap) library(dplyr) library(ggplot2) library(survival) library(survminer) library(MNet) #------------------------------------------------------------------------------- # Step 1: Load data and set parameters #------------------------------------------------------------------------------- sample_info &lt;- readxl::read_excel(&quot;raw_data/Sample_RNA_190_fusion_mutation_v1130.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(bianhao,RNA_id,Prediction_Check,Subtype) %&gt;% dplyr::filter(Subtype %in% c(&quot;ETP&quot;,&quot;non_ETP&quot;,&quot;non_Ph&quot;,&quot;Ph&quot;)) %&gt;% dplyr::mutate(Subtype=ifelse(Subtype %in% c(&quot;ETP&quot;,&quot;non_ETP&quot;),Subtype,Prediction_Check)) %&gt;% dplyr::mutate(Subtype=factor(Subtype,levels=c(&quot;BCL2/MYC&quot;,&quot;Low hypodiploid&quot;,&quot;ETV6-RUNX1 Group&quot;,&quot;High hyperdoploid&quot;,&quot;PAX5alt&quot;,&quot;PAX5 P80R&quot;,&quot;Ph-like&quot;,&quot;DUX4&quot;,&quot;ZNF384 Group&quot;,&quot;TCF3-PBX1&quot;,&quot;BCR-ABL1&quot;,&quot;TWIST2-high&quot;,&quot;IDH&quot;,&quot;ZEB2&quot;,&quot;MEF2D Group&quot;,&quot;KMT2A Group&quot;,&quot;ETP&quot;,&quot;non_ETP&quot;))) sel_gmt=GSEABase::getGmt(&quot;raw_data/KEGG_metabo_genes.gmt&quot;,sep = &quot;\\t&quot;) head(sel_gmt) sets=as.list(sel_gmt) dat &lt;- readRDS(&quot;raw_data/20231113_RNA_ALL_VST_coding.rds&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(sample_info$RNA_id) #------------------------------------------------------------------------------- # Step 2: Gene set variation analysis (GSVA) #------------------------------------------------------------------------------- exprMatrix=dat dim(exprMatrix) gsva_matrix&lt;- gsva(as.matrix(exprMatrix), sel_gmt,method=&#39;ssgsea&#39;,kcdf=&#39;Gaussian&#39;) write.table(gsva_matrix,&quot;result/Figure3/3A_gsva.txt&quot;,quote=F,sep=&quot;\\t&quot;) gsva_matrix1&lt;- t(scale(t(gsva_matrix))) write.table(gsva_matrix1,&quot;result/Figure3/3A_gsva_norm.txt&quot;,quote=F,sep=&quot;\\t&quot;) q1 &lt;- RColorBrewer::brewer.pal(n = 12, name = &quot;Paired&quot;) q2 &lt;- c(&quot;#FB8072&quot;,&quot;#8DD3C7&quot;, &quot;#BEBADA&quot;,&quot;#FDB462&quot;,&quot;#CCEBC5&quot;, &quot;#FFED6F&quot;) q12 &lt;- c(q1,q2) names(q12) &lt;- unique(sample_info$Subtype) left_ann &lt;- PathwayExtendData[,4:5] %&gt;% unique() %&gt;% dplyr::arrange(match(kegg_pathwayname,rownames(gsva_matrix))) a &lt;- data.frame(kegg_pathwayname=rownames(gsva_matrix)) %&gt;% dplyr::left_join(left_ann,by=&quot;kegg_pathwayname&quot;) right_col &lt;- RColorBrewer::brewer.pal(n = 11, name = &quot;Set3&quot;) names(right_col) &lt;- unique(a$kegg_category) right_annotation=rowAnnotation( Subtype=a$kegg_category,col=list(Subtype=right_col), show_annotation_name = c(T,T),border = c(T,T) , simple_anno_size = unit(4, &quot;mm&quot;),gap = unit(1, &quot;mm&quot;)) top_annotation = HeatmapAnnotation( Subtype=sample_info$Subtype,col=list(Subtype=q12), show_annotation_name = c(T,T), border = c(T,T) , simple_anno_size = unit(4, &quot;mm&quot;),gap = unit(1, &quot;mm&quot;)) col_fun = circlize::colorRamp2(c(-1, 0, 1), c(&quot;#00599F&quot;, &quot;white&quot;, &quot;#D01910&quot;)) p_cell &lt;- Heatmap(gsva_matrix1,height=unit(18,&quot;cm&quot;),name=&quot;Our RNA-seq Data&quot;, cluster_row_slices = F,clustering_method_rows = &quot;ward.D&quot;, cluster_column_slices = F, clustering_method_columns = &quot;ward.D2&quot;, column_split = sample_info$Subtype, top_annotation =top_annotation, right_annotation = right_annotation, row_split = a$kegg_category, col = col_fun, show_column_names = TRUE, row_names_gp = gpar(fontsize = 6), column_names_gp = gpar(fontsize = 5)) pdf(&quot;result/Figure3/3A_GSVAheatmap.pdf&quot;,width = 20,height = 15) p_cell dev.off() 18.2 (B) Mutations and Metabolites The heatmap illustrates the associations between the metabolites abundances (column) of ALL BMMC and the presence of mutations within the indicated genes (row). The mutations include high frequency somatic mutations within reported ALL-related genes. T statistics are calculated by a linear regression model to represent the correlation level. library(dplyr) #------------------------------------------------------------------------------- # Step 1: Load mutation data #------------------------------------------------------------------------------- NOTCH1 &lt;- data.table::fread(&quot;raw_data/temp/Fig4B.all_NOTCH1.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;NOTCH1&quot;) RUNX1 &lt;- data.table::fread(&quot;raw_data/temp/Fig4B.all_RUNX1.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;RUNX1&quot;) PHF6 &lt;- data.table::fread(&quot;raw_data/temp/Fig4B.all_PHF6.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;PHF6&quot;) NRAS &lt;- data.table::fread(&quot;raw_data/temp/Fig4B.all_NRAS.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;NRAS&quot;) ETV6 &lt;- data.table::fread(&quot;raw_data/temp/Fig4B.all_ETV6.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;ETV6&quot;) DNMT3A &lt;- data.table::fread(&quot;raw_data/temp/Fig4B.all_DNMT3A.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;DNMT3A&quot;) PAX5 &lt;- data.table::fread(&quot;raw_data/temp/Fig4B.all_PAX5.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;PAX5&quot;) TP53 &lt;- data.table::fread(&quot;raw_data/temp/Fig4B.all_TP53.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;TP53&quot;) IDH &lt;- data.table::fread(&quot;raw_data/temp/Fig4B.all_IDH.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;IDH&quot;) SETD1B &lt;- data.table::fread(&quot;raw_data/temp/Fig4B.all_SETD1B.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;SETD1B&quot;) NCOR2 &lt;- data.table::fread(&quot;raw_data/temp/Fig4B.all_NCOR2.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;NCOR2&quot;) SUZ12 &lt;- data.table::fread(&quot;raw_data/temp/Fig4B.all_SUZ12.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;SUZ12&quot;) SETD2 &lt;- data.table::fread(&quot;raw_data/temp/Fig4B.all_SETD2.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;SETD2&quot;) JAK3 &lt;- data.table::fread(&quot;raw_data/temp/Fig4B.all_JAK3.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;JAK3&quot;) SACS &lt;- data.table::fread(&quot;raw_data/temp/Fig4B.all_SACS.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;SACS&quot;) EP300 &lt;- data.table::fread(&quot;raw_data/temp/Fig4B.all_EP300.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;EP300&quot;) ## Select relevant mutations dat &lt;- rbind(NOTCH1,RUNX1,PHF6,NRAS,ETV6,DNMT3A,PAX5,TP53,IDH,SETD1B,NCOR2,SUZ12,SETD2,JAK3,SACS,EP300) %&gt;% dplyr::select(name,type,t) dat1 &lt;- reshape2::acast(dat,name ~ type) %&gt;% as.data.frame() %&gt;% dplyr::select(IDH,NOTCH1,DNMT3A,ETV6,EP300,JAK3,NCOR2,NRAS,PAX5,PHF6,RUNX1,SACS,SETD1B,SETD2,SUZ12,TP53,everything()) %&gt;% t() write.table(dat1,&quot;result/Figure3/3B_CorMutations.txt&quot;,quote=F,sep=&quot;\\t&quot;) #------------------------------------------------------------------------------- # Step 2: Heatmap of mutations #------------------------------------------------------------------------------- library(ComplexHeatmap) kid &lt;- readxl::read_excel(&quot;raw_data/cell_metabolite_info_all_v1109.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(refmet_name %in% colnames(dat1)) %&gt;% dplyr::arrange(match(refmet_name,colnames(dat1))) cols &lt;- c(&quot;Amino acids and peptides&quot; =&quot;#1B9E77&quot;, &quot;Carbohydrates&quot;=&quot;#D95F02&quot;,&quot;Cofactors and Vitamins&quot;=&quot;#7570B3&quot;, &quot;Energy&quot;=&quot;#E7298A&quot;,&quot;Lipids&quot;=&quot;#66A61E&quot;,&quot;Nucleic acids&quot;=&quot;#E6AB02&quot;, &quot;Other&quot;=&quot;#A6761D&quot;,&quot;Xenobiotics&quot;=&quot;#666666&quot;) top_annotation = HeatmapAnnotation( category=kid$class, show_annotation_name = c(T), col=list(category=cols), border = c(T) , simple_anno_size = unit(4, &quot;mm&quot;),gap = unit(1, &quot;mm&quot;) ) if(0) { mark_met &lt;- c(&quot;2-Hydroxyglutaric acid&quot;,&quot;L-Glutamine&quot;) met_pos &lt;- which(rownames(t(dat1)) %in% mark_met) right_anno &lt;- rowAnnotation(mark_met = anno_mark(at = met_pos, labels = rownames(t(dat1))[met_pos])) } col_fun = circlize::colorRamp2(c(-2, -1.5,0, 1.5,3), c(&quot;#00599F&quot;,&quot;white&quot;,&quot;white&quot;,&quot;white&quot;, &quot;#D01910&quot;)) pdf(&quot;result/Figure3/3B_MutationHeatmap.pdf&quot;,width=10,height = 6) Heatmap(dat1,top_annotation=top_annotation,show_column_names = T,column_names_gp = gpar(fontsize = 1), col = col_fun,cluster_rows = F,show_column_dend=F, border_gp = gpar(col = &#39;black&#39;, lty = 1)) dev.off() 18.3 (C) IDH1/2 and ETV6 Mutations Correlations between IDH1/2 mutations and 2-HG (left panel) and ETV6 mutations and glutamine (right panel). All samples are ordered based on the abundance (y-axis) of indicated metabolites, and the ones with corresponding mutations are highlighted in red and indicated by the corresponding lines displayed in x-axis. library(dplyr) library(MNet) library(ggplot2) library(ComplexHeatmap) #------------------------------------------------------------------------------- # Step 1: Load mutation data #------------------------------------------------------------------------------- sample_info &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(!is.na(METc_BM_D0_ID)) %&gt;% dplyr::filter(!is.na(RNA_id_raw)) mutation_b &lt;- data.table::fread(&quot;raw_data/mutation_B_v1114_all.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(V2,V17) %&gt;% unique() mutation_t &lt;- data.table::fread(&quot;raw_data/mutation_T_v1114_all.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(V2,V17) %&gt;% unique() #------------------------------------------------------------------------------- # Step 2: IDH1/2 and 2-Hydroxyglutaric acid #------------------------------------------------------------------------------- ## IDH1/2 mutation &lt;- rbind(mutation_b,mutation_t) %&gt;% dplyr::filter(V17 %in% c(&quot;IDH1&quot;,&quot;IDH2&quot;)) dat &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::select(all_of(sample_info$METc_BM_D0_ID)) ## 2-Hydroxyglutaric acid meta_filter=&quot;2-Hydroxyglutaric acid&quot; metabolite_diff &lt;- data.table::fread(&quot;raw_data/temp/Fig4B.all_IDH.txt&quot;) dat_melt_filter &lt;- dat %&gt;% tibble::rownames_to_column(var=&quot;id&quot;) %&gt;% reshape2::melt() %&gt;% dplyr::filter(id==meta_filter) %&gt;% dplyr::left_join(sample_info,by=c(&quot;variable&quot;=&quot;METc_BM_D0_ID&quot;)) %&gt;% dplyr::arrange(value) %&gt;% dplyr::left_join(metabolite_diff,by=c(&quot;id&quot;=&quot;name&quot;)) %&gt;% dplyr::mutate(type=ifelse(RNA_id_raw %in% mutation$V2,&quot;IDH&quot;,&quot;non_IDH&quot;)) %&gt;% dplyr::mutate(variable=factor(variable,levels = variable)) ## Visualization t=unique(round(dat_melt_filter$t,2)) p=unique(round(dat_melt_filter$P.Value,3)) p1 &lt;- ggplot(dat_melt_filter,aes(variable,log2(value+1)))+ geom_point(aes(color=as.factor(type)))+ scale_color_manual(values=c(&quot;red&quot;,&quot;black&quot;))+ theme_bw()+ theme(axis.text.x=element_blank(),axis.ticks.x=element_blank(), panel.grid = element_blank())+ labs(x=NULL,title=paste0(meta_filter,&quot;\\nT statistic = &quot;,t,&quot;; p=&quot;,p))+ theme(legend.position=&#39;none&#39;) sample_order &lt;- data.frame(Meta_ID=dat_melt_filter$variable,type=factor(dat_melt_filter$type)) p2 &lt;- ggplot(sample_order,aes(Meta_ID,y=3))+ geom_bar(aes(fill=type,color=type),stat=&quot;identity&quot;,width=0.5)+ labs(x=&quot;Ordered samples&quot;)+ theme_bw()+ theme(axis.text=element_blank(),axis.ticks = element_blank(),panel.grid = element_blank())+ scale_y_continuous(expand = c(0, 0))+ scale_fill_manual(values=c(&quot;red&quot;,&quot;white&quot;))+ scale_color_manual(values=c(&quot;red&quot;,&quot;white&quot;))+ theme(legend.position=&#39;none&#39;,axis.title.y= element_text(size=5)) p &lt;- cowplot::plot_grid(p1,p2,nrow=2,ncol=1,rel_heights=c(10,3),rel_widths = c(4, 4),align=&quot;v&quot;) ggsave(&quot;result/Figure3/3C_2-HG.pdf&quot;,p) #------------------------------------------------------------------------------- # Step 3: ETV6 and L-Glutamine #------------------------------------------------------------------------------- ## ETV6 sample_info &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(!is.na(METc_BM_D0_ID)) %&gt;% dplyr::filter(!is.na(RNA_id_raw)) mutation_b &lt;- data.table::fread(&quot;raw_data/mutation_B_v1114_all.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(V2,V17) %&gt;% unique() mutation_t &lt;- data.table::fread(&quot;raw_data/mutation_T_v1114_all.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(V2,V17) %&gt;% unique() mutation &lt;- rbind(mutation_b,mutation_t) %&gt;% dplyr::filter(V17 %in% c(&quot;ETV6&quot;)) dat &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::select(all_of(sample_info$METc_BM_D0_ID)) ## L-Glutamine meta_filter=&quot;L-Glutamine&quot; metabolite_diff &lt;- data.table::fread(&quot;raw_data/temp/Fig4B.all_ETV6.txt&quot;) dat_melt_filter &lt;- dat %&gt;% tibble::rownames_to_column(var=&quot;id&quot;) %&gt;% reshape2::melt() %&gt;% dplyr::filter(id==meta_filter) %&gt;% dplyr::left_join(sample_info,by=c(&quot;variable&quot;=&quot;METc_BM_D0_ID&quot;)) %&gt;% dplyr::arrange(value) %&gt;% dplyr::left_join(metabolite_diff,by=c(&quot;id&quot;=&quot;name&quot;)) %&gt;% dplyr::mutate(type=ifelse(RNA_id_raw %in% mutation$V2,&quot;ETV6&quot;,&quot;non_ETV6&quot;)) %&gt;% dplyr::mutate(variable=factor(variable,levels = variable)) ## Visualization t=unique(round(dat_melt_filter$t,2)) p=unique(round(dat_melt_filter$P.Value,3)) p1 &lt;- ggplot(dat_melt_filter,aes(variable,log2(value+1)))+ geom_point(aes(color=as.factor(type)))+ scale_color_manual(values=c(&quot;red&quot;,&quot;black&quot;))+ theme_bw()+ theme(axis.text.x=element_blank(),axis.ticks.x=element_blank(), panel.grid = element_blank())+ labs(x=NULL,title=paste0(meta_filter,&quot;\\nT statistic = &quot;,t,&quot;; p=&quot;,p))+ theme(legend.position=&#39;none&#39;) sample_order &lt;- data.frame(Meta_ID=dat_melt_filter$variable,type=factor(dat_melt_filter$type)) p2 &lt;- ggplot(sample_order,aes(Meta_ID,y=3))+ geom_bar(aes(fill=type,color=type),stat=&quot;identity&quot;,width=0.5)+ labs(x=&quot;Ordered samples&quot;)+ theme_bw()+ theme(axis.text=element_blank(),axis.ticks = element_blank(),panel.grid = element_blank())+ scale_y_continuous(expand = c(0, 0))+ scale_fill_manual(values=c(&quot;red&quot;,&quot;white&quot;))+ scale_color_manual(values=c(&quot;red&quot;,&quot;white&quot;))+ theme(legend.position=&#39;none&#39;,axis.title.y= element_text(size=5)) p &lt;- cowplot::plot_grid(p1,p2,nrow=2,ncol=1,rel_heights=c(10,3),rel_widths = c(4, 4),align=&quot;v&quot;) ggsave(&quot;result/Figure3/3C_Glutamine.pdf&quot;,p) 18.4 (D) Fusions and Metabolites The heatmap illustrates the associations between the abundances of metabolites and the presence of indicated well-known gene fusions. T statistics are calculated by a linear regression model. library(dplyr) #------------------------------------------------------------------------------- # Step 1: Load fusion data #------------------------------------------------------------------------------- BCR &lt;- data.table::fread(&quot;raw_data/temp/Fig4D.all_BCR-ABL1.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;BCR-ABL1&quot;) DUX4 &lt;- data.table::fread(&quot;raw_data/temp/Fig4D.all_DUX4 rearrangement.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;DUX4&quot;) ZNF384 &lt;- data.table::fread(&quot;raw_data/temp/Fig4D.all_ZNF384 fusion.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;ZNF384&quot;) TCF3 &lt;- data.table::fread(&quot;raw_data/temp/Fig4D.all_TCF3-PBX1.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;TCF3-PBX1&quot;) SET &lt;- data.table::fread(&quot;raw_data/temp/Fig4D.all_SET-NUP214.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;SET-NUP214&quot;) KMT2A &lt;- data.table::fread(&quot;raw_data/temp/Fig4D.all_KMT2A rearrangement.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(type=&quot;KMT2A&quot;) dat &lt;- rbind(BCR,DUX4,ZNF384,TCF3,SET,KMT2A) %&gt;% dplyr::select(name,type,t) dat1 &lt;- reshape2::acast(dat,name ~ type) %&gt;% t() write.table(dat1,&quot;result/Figure3/3D_CorFusions.txt&quot;,quote=F,sep=&quot;\\t&quot;) #------------------------------------------------------------------------------- # Step 2: Heatmap of fusions #------------------------------------------------------------------------------- library(ComplexHeatmap) kid &lt;- readxl::read_excel(&quot;raw_data/cell_metabolite_info_all_v1109.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(refmet_name %in% colnames(dat1)) %&gt;% dplyr::arrange(match(refmet_name,colnames(dat1))) cols &lt;- c(&quot;Amino acids and peptides&quot; =&quot;#1B9E77&quot;, &quot;Carbohydrates&quot;=&quot;#D95F02&quot;,&quot;Cofactors and Vitamins&quot;=&quot;#7570B3&quot;, &quot;Energy&quot;=&quot;#E7298A&quot;,&quot;Lipids&quot;=&quot;#66A61E&quot;,&quot;Nucleic acids&quot;=&quot;#E6AB02&quot;, &quot;Other&quot;=&quot;#A6761D&quot;,&quot;Xenobiotics&quot;=&quot;#666666&quot;) top_annotation = HeatmapAnnotation( category=kid$class, show_annotation_name = c(T), col=list(category=cols), border = c(T) , simple_anno_size = unit(4, &quot;mm&quot;),gap = unit(1, &quot;mm&quot;) ) if (0) { mark_met &lt;- c(&quot;Inosine&quot;,&quot;2&#39;,3&#39; cyclic AMP&quot;) met_pos &lt;- which(rownames(t(dat1)) %in% mark_met) right_anno &lt;- rowAnnotation(mark_met = anno_mark(at = met_pos, labels = rownames(t(dat1))[met_pos])) } col_fun = circlize::colorRamp2(c(-2, -1.5,0, 1.5,3), c(&quot;#00599F&quot;,&quot;white&quot;,&quot;white&quot;,&quot;white&quot;, &quot;#D01910&quot;)) pdf(&quot;result/Figure3/3D_FusionHeatmap.pdf&quot;,width=8,height = 4) Heatmap(dat1,top_annotation=top_annotation,show_column_names = T,column_names_gp = gpar(fontsize = 1), col = col_fun,cluster_columns = T,show_row_names=T, show_column_dend=F, border_gp = gpar(col = &#39;black&#39;, lty = 1),show_row_dend = F) dev.off() 18.5 (E) BCR-ABL1 Fusion Correlations between the BCR-ABL1 fusion and the abundances of adenosine (left panel) and 2’,3’ cyclic AMP (right panel). Fusion genes-related metabolites are shown as lines and samples are ordered based on the abundance (y-axis) of indicated metabolites. library(dplyr) library(MNet) library(ggplot2) library(ComplexHeatmap) #------------------------------------------------------------------------------- # Step 1: Load fusion data #------------------------------------------------------------------------------- sample_info &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(!is.na(METc_BM_D0_ID)) %&gt;% dplyr::filter(!is.na(RNA_id_raw)) fusion_b &lt;- readxl::read_excel(&quot;raw_data/fusion_B_v0803.xlsx&quot;,skip=1) %&gt;% as.data.frame() %&gt;% dplyr::select(RNA_id,fusion_group) %&gt;% unique() %&gt;% dplyr::mutate(fusion_group=ifelse(fusion_group==&quot;BCR--ABL1&quot;,&quot;BCR-ABL1&quot;,fusion_group)) %&gt;% dplyr::mutate(fusion_group=ifelse(grepl(&quot;BCR-ABL1&quot;,fusion_group),&quot;BCR-ABL1&quot;,fusion_group)) %&gt;% dplyr::mutate(fusion_group=ifelse(grepl(&quot;PAX5-&quot;,fusion_group),&quot;PAX5 Group&quot;,fusion_group)) %&gt;% dplyr::mutate(fusion_group=ifelse(fusion_group==&quot;PICALM-MLLT10&quot;,&quot;MLLT10 rearrangement&quot;,fusion_group)) fusion_t &lt;- readxl::read_excel(&quot;raw_data/fusion_T_v0803.xlsx&quot;,skip=1) %&gt;% as.data.frame() %&gt;% dplyr::select(RNA_id,final_check) %&gt;% unique() %&gt;% dplyr::mutate(final_check=ifelse(final_check==&quot;KMT2A rearrangement&quot;,&quot;KMT2A Group&quot;,final_check)) %&gt;% dplyr::rename(&quot;fusion_group&quot;=&quot;final_check&quot;) fusion &lt;- rbind(fusion_b,fusion_t) %&gt;% dplyr::filter(fusion_group %in% c(&quot;BCR-ABL1&quot;)) dat &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::select(all_of(sample_info$METc_BM_D0_ID)) metabolite_diff &lt;- data.table::fread(&quot;raw_data/temp/Fig4D.all_BCR-ABL1.txt&quot;) %&gt;% dplyr::filter(name %in% c(&quot;Inosine&quot;,&quot;2&#39;,3&#39; cyclic AMP&quot;,&quot;Adenosine&quot;)) #------------------------------------------------------------------------------- # Step 2: BCR-ABL1 and Inosine&quot;,&quot;2&#39;,3&#39; cyclic AMP&quot;,&quot;Adenosine&quot; #------------------------------------------------------------------------------- a &lt;- c(&quot;Inosine&quot;,&quot;2&#39;,3&#39; cyclic AMP&quot;,&quot;Adenosine&quot;) for (meta_filter in a) { dat_melt_filter &lt;- dat %&gt;% tibble::rownames_to_column(var=&quot;id&quot;) %&gt;% reshape2::melt() %&gt;% dplyr::filter(id==meta_filter) %&gt;% dplyr::left_join(sample_info,by=c(&quot;variable&quot;=&quot;METc_BM_D0_ID&quot;)) %&gt;% dplyr::arrange(value) %&gt;% dplyr::left_join(metabolite_diff,by=c(&quot;id&quot;=&quot;name&quot;)) %&gt;% dplyr::mutate(type=ifelse(RNA_id_raw %in% fusion$RNA_id,&quot;fusion&quot;,&quot;non_fusion&quot;)) %&gt;% dplyr::mutate(variable=factor(variable,levels = variable)) t=unique(round(dat_melt_filter$t,2)) p=unique(round(dat_melt_filter$P.Value,3)) p1 &lt;- ggplot(dat_melt_filter,aes(variable,log2(value+1)))+ geom_point(aes(color=as.factor(type)))+ scale_color_manual(values=c(&quot;red&quot;,&quot;black&quot;))+ theme_bw()+ theme(axis.text.x=element_blank(),axis.ticks.x=element_blank(), panel.grid = element_blank())+ labs(x=NULL,title=paste0(meta_filter,&quot;\\nT statistic = &quot;,t,&quot;; p=&quot;,p))+ theme(legend.position=&#39;none&#39;) sample_order &lt;- data.frame(Meta_ID=dat_melt_filter$variable,type=factor(dat_melt_filter$type)) p2 &lt;- ggplot(sample_order,aes(Meta_ID,y=3))+ geom_bar(aes(fill=type,color=type),stat=&quot;identity&quot;,width=0.5)+ labs(x=&quot;Ordered samples&quot;)+ theme_bw()+ theme(axis.text=element_blank(),axis.ticks = element_blank(),panel.grid = element_blank())+ scale_y_continuous(expand = c(0, 0))+ scale_fill_manual(values=c(&quot;red&quot;,&quot;white&quot;))+ scale_color_manual(values=c(&quot;red&quot;,&quot;white&quot;))+ theme(legend.position=&#39;none&#39;,axis.title.y= element_text(size=5)) p &lt;- cowplot::plot_grid(p1,p2,nrow=2,ncol=1,rel_heights=c(10,3),rel_widths = c(4, 4),align=&quot;v&quot;) ggsave(paste0(&quot;result/Figure3/3E_BCR-ABL1_&quot;,meta_filter,&quot;.pdf&quot;),p,width=5,height = 5) } 18.6 (S4 A) Metabolic Gene Heatmap The metabolic gene (row) heatmap displays a similar pattern to that of Fig. 4a, showcasing both individual characteristics and potential commonalities among each ALL subtype. library(GSVA) library(ComplexHeatmap) library(dplyr) library(ggplot2) library(survival) library(survminer) library(MNet) #------------------------------------------------------------------------------- # Step 1: Load data and set parameters #------------------------------------------------------------------------------- sample_info &lt;- readxl::read_excel(&quot;raw_data/Sample_RNA_190_fusion_mutation_v1130.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(bianhao,RNA_id,Prediction_Check,Subtype) %&gt;% dplyr::filter(Subtype %in% c(&quot;ETP&quot;,&quot;non_ETP&quot;,&quot;non_Ph&quot;,&quot;Ph&quot;)) %&gt;% dplyr::mutate(Subtype=ifelse(Subtype %in% c(&quot;ETP&quot;,&quot;non_ETP&quot;),Subtype,Prediction_Check)) %&gt;% dplyr::mutate(Subtype=factor(Subtype,levels=c(&quot;BCL2/MYC&quot;,&quot;Low hypodiploid&quot;,&quot;ETV6-RUNX1 Group&quot;,&quot;High hyperdoploid&quot;,&quot;PAX5alt&quot;,&quot;PAX5 P80R&quot;,&quot;Ph-like&quot;,&quot;DUX4&quot;,&quot;ZNF384 Group&quot;,&quot;TCF3-PBX1&quot;,&quot;BCR-ABL1&quot;,&quot;TWIST2-high&quot;,&quot;IDH&quot;,&quot;ZEB2&quot;,&quot;MEF2D Group&quot;,&quot;KMT2A Group&quot;,&quot;ETP&quot;,&quot;non_ETP&quot;))) kegg_gene &lt;- PathwayExtendData %&gt;% dplyr::filter(type == &quot;gene&quot;) %&gt;% dplyr::pull(name) %&gt;% unique() dat &lt;- readRDS(&quot;raw_data/20231113_RNA_ALL_VST_coding.rds&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(sample_info$RNA_id) %&gt;% tibble::rownames_to_column(var=&quot;gene&quot;) %&gt;% dplyr::filter(gene %in% kegg_gene) %&gt;% tibble::column_to_rownames(&quot;gene&quot;) print(&quot;metabolic gene&quot;) dim(dat) n &lt;- rowSums(dat==0) dat$n &lt;- n dat_filter &lt;- dat %&gt;% dplyr::filter(n&lt; 50) %&gt;% dplyr::select(-n) print(&quot;result_number&quot;) print(dim(dat_filter)) #------------------------------------------------------------------------------- # Step 2: Heatmap #------------------------------------------------------------------------------- dat_scale &lt;- myscale(dat_filter,method=&quot;raw_zscore&quot;) q1 &lt;- RColorBrewer::brewer.pal(n = 12, name = &quot;Paired&quot;) q2 &lt;- c(&quot;#FB8072&quot;,&quot;#8DD3C7&quot;, &quot;#BEBADA&quot;,&quot;#FDB462&quot;,&quot;#CCEBC5&quot;, &quot;#FFED6F&quot;) q12 &lt;- c(q1,q2) names(q12) &lt;- unique(sample_info$Subtype) top_annotation = HeatmapAnnotation( Subtype=sample_info$Subtype, col=list(Subtype=q12), show_annotation_name = c(T,T), border = c(T,T) , simple_anno_size = unit(4, &quot;mm&quot;),gap = unit(1, &quot;mm&quot;) ) col_fun = circlize::colorRamp2(c(-1, 0, 1), c(&quot;#00599F&quot;, &quot;white&quot;, &quot;#D01910&quot;)) p_cell &lt;- Heatmap(dat_scale,height=unit(18,&quot;cm&quot;),name=&quot;Our RNA-seq Data&quot;, cluster_row_slices = F,clustering_method_rows = &quot;ward.D&quot;, cluster_column_slices = F, clustering_method_columns = &quot;ward.D2&quot;, column_split = sample_info$Subtype, top_annotation =top_annotation, col = col_fun, show_column_names = F,show_row_names = F, row_names_gp = gpar(fontsize = 6),column_names_gp = gpar(fontsize = 5)) pdf(&quot;result/Figure3/S4A_MGeneHeatmap.pdf&quot;,width = 15,height = 15) p_cell dev.off() 18.7 (S4 B) Correlation Within BMMC Samples The correlation coefficient (R) plot among BMMC samples, calculated using metabolic genes expression data. The lower R value is considered as reflecting higher heterogeneity within a given sample pool, and the R of 0.8 is highlighted on the y-axis with a brown line. The median R of each box is 0.890, 0.922, and 0.921, respectively. Statistical significance was determined using Wilcoxon test. **** P &lt; 0.0001. library(dplyr) library(MNet) library(ggplot2) library(ggpubr) #------------------------------------------------------------------------------- # Step 1: Load data and set parameters #------------------------------------------------------------------------------- sample_info &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(!is.na(METc_BM_D0_ID)) %&gt;% dplyr::filter(!is.na(RNA_id_raw)) sample_b &lt;- sample_info %&gt;% dplyr::filter(Lineage==&quot;B&quot;) sample_t &lt;- sample_info %&gt;% dplyr::filter(Lineage==&quot;T&quot;) gene_metabolite1 &lt;- gene_metabolite %&gt;% dplyr::filter(dest_type==&quot;gene&quot;) gene2 &lt;- PathwayExtendData %&gt;% filter(type==&quot;gene&quot;) gene_filter &lt;- unique(c(gene_metabolite1$gene,gene2$name)) dat &lt;- readRDS(&quot;raw_data/20231113_RNA_ALL_VST_coding.rds&quot;) %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;label&quot;) %&gt;% dplyr::filter(label %in% gene_filter) %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::select(all_of(sample_info$RNA_id_raw)) dat_b &lt;- dat %&gt;% dplyr::select(sample_b$RNA_id_raw) dat_t &lt;- dat %&gt;% dplyr::select(sample_t$RNA_id_raw) #------------------------------------------------------------------------------- # Step 2: Spearman #------------------------------------------------------------------------------- cor_b &lt;- cor(dat_b,method=&quot;spearman&quot;) %&gt;% reshape2::melt() %&gt;% dplyr::filter(Var1 != Var2) %&gt;% dplyr::mutate(Var1=as.character(Var1)) %&gt;% dplyr::mutate(Var2=as.character(Var2)) %&gt;% dplyr::mutate(sample1=ifelse(Var1 &gt; Var2,Var1,Var2)) %&gt;% dplyr::mutate(sample2=ifelse(Var1 &gt; Var2,Var2,Var1)) %&gt;% dplyr::select(sample1,sample2,value) %&gt;% unique() %&gt;% dplyr::mutate(type=&quot;BCP-ALL&quot;) cor_t &lt;- cor(dat_t,method=&quot;spearman&quot;) %&gt;% reshape2::melt() %&gt;% dplyr::filter(Var1 != Var2) %&gt;% dplyr::mutate(Var1=as.character(Var1)) %&gt;% dplyr::mutate(Var2=as.character(Var2)) %&gt;% dplyr::mutate(sample1=ifelse(Var1 &gt; Var2,Var1,Var2)) %&gt;% dplyr::mutate(sample2=ifelse(Var1 &gt; Var2,Var2,Var1)) %&gt;% dplyr::select(sample1,sample2,value) %&gt;% unique() %&gt;% dplyr::mutate(type=&quot;T-ALL&quot;) cor_all &lt;- cor(x=dat_b,y=dat_t,method=&quot;spearman&quot;) %&gt;% reshape2::melt() %&gt;% dplyr::mutate(Var1=as.character(Var1)) %&gt;% dplyr::mutate(Var2=as.character(Var2)) %&gt;% dplyr::mutate(sample1=ifelse(Var1 &gt; Var2,Var1,Var2)) %&gt;% dplyr::mutate(sample2=ifelse(Var1 &gt; Var2,Var2,Var1)) %&gt;% dplyr::select(sample1,sample2,value) %&gt;% unique() %&gt;% dplyr::mutate(type=&quot;ALL-BvsT&quot;) print(&quot;b&quot;) print(median(cor_b$value)) print(&quot;t&quot;) print(median(cor_t$value)) print(&quot;b-t&quot;) print(median(cor_all$value)) cor_result &lt;- rbind(cor_b,cor_t,cor_all) comparisons &lt;- list( c(&quot;ALL-BvsT&quot;, &quot;BCP-ALL&quot;), c(&quot;BCP-ALL&quot;, &quot;T-ALL&quot;),c(&quot;ALL-BvsT&quot;, &quot;T-ALL&quot;) ) #------------------------------------------------------------------------------- # Step 3: Visualization #------------------------------------------------------------------------------- p &lt;- ggplot(cor_result,aes(type,value))+ geom_jitter(size=.3,width=.2,color=&quot;gray&quot;)+ geom_boxplot(color=&quot;#D01910&quot;,outlier.colour = NA)+ stat_compare_means(comparisons = comparisons)+ theme_bw()+ ylim(c(0.65,1.08))+ labs(x=NULL,y=&quot;Correlation coefficient&quot;,title=&quot;Meta gene&quot;) ggsave(&quot;result/Figure3/S4B_cor_boxplot.pdf&quot;,p,width=4,height = 4) 18.8 (S4 C) Correlation of mRNA Expression of Metabolic Genes (left panel) Correlation of metabolic gene expression with the abundance of paired metabolites. The median correlation coefficient is R=0.017. (middle panel) The abundance of adenosine is positively associated with NT5E that catalyzes the conversion of extracellular nucleotides to membrane-permeable nucleosides. (right panel) The abundance of NADH is negatively associated with NAXD that enables ATP-dependent NAD(P)H-hydrate dehydratase activity. library(dplyr) library(MNet) library(ggplot2) library(ggpubr) library(Hmisc) #------------------------------------------------------------------------------- # Step 1: Load data and set parameters #------------------------------------------------------------------------------- sample_info &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(METc_BM_D0_ID,RNA_id_raw) %&gt;% dplyr::filter(!is.na(METc_BM_D0_ID) &amp; !is.na(RNA_id_raw)) kid &lt;- readxl::read_excel(&quot;raw_data/cell_metabolite_info_all_v1109.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(refmet_name,KEGG) dat_met &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(label,sample_info$METc_BM_D0_ID) %&gt;% dplyr::left_join(kid,by=c(&quot;label&quot;=&quot;refmet_name&quot;)) %&gt;% dplyr::select(-label) %&gt;% dplyr::distinct(KEGG,.keep_all = T) %&gt;% tibble::column_to_rownames(&quot;KEGG&quot;) %&gt;% log1p() gene_metabolite1 &lt;- gene_metabolite %&gt;% dplyr::filter(dest_type==&quot;gene&quot;) gene_filter &lt;- unique(c(gene_metabolite1$gene)) dat_gene &lt;- dat &lt;- readRDS(&quot;raw_data/20231113_RNA_ALL_VST_coding.rds&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(sample_info$RNA_id_raw) %&gt;% tibble::rownames_to_column(var=&quot;label&quot;) %&gt;% dplyr::filter(label %in% gene_filter) %&gt;% tibble::column_to_rownames(&quot;label&quot;) dat_gene_0 &lt;- rowSums(dat_gene==0) dat_gene_filter &lt;- dat_gene %&gt;% dplyr::mutate(num=dat_gene_0) %&gt;% dplyr::filter(num &lt; 0.5*ncol(dat_gene)) %&gt;% dplyr::select(-num) dat_met_filter &lt;- dat_met %&gt;% tibble::rownames_to_column(var=&quot;keggId&quot;) %&gt;% dplyr::filter(keggId %in% gene_metabolite$keggId) %&gt;% tibble::column_to_rownames(&quot;keggId&quot;) #------------------------------------------------------------------------------- # Step 2: Correlation analysis #------------------------------------------------------------------------------- ## Run in Linux #cor_result &lt;- data.frame() #for (i in 1:nrow(dat_met_filter)) { # print(i) # for (j in 1:nrow(dat_gene_filter)) { # dd &lt;- gene_metabolite %&gt;% # dplyr::filter(keggId == rownames(dat_met_filter)[i]) %&gt;% # dplyr::filter(gene == rownames(dat_gene_filter)[j]) # if (nrow(dd)&gt;0) { # cor_temp &lt;- cor.test(as.numeric(dat_met_filter[i,]),as.numeric(dat_gene_filter[j,]),method = &quot;spearman&quot;) # cor_temp1 &lt;- data.frame(keggId=rownames(dat_met_filter)[i],gene=rownames(dat_gene_filter)[j],cor=cor_temp$estimate) # cor_result &lt;- rbind(cor_result,cor_temp1) # } # } #} #write.table(cor_result,&quot;result/Figure3/S4C_cor_spearman.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) cor_result &lt;- data.table::fread(&quot;result/Figure3/S4C_cor_spearman.txt&quot;) %&gt;% as.data.frame() md = round(median(cor_result$cor),3) print(md) p &lt;- ggpubr::gghistogram(cor_result, x = &quot;cor&quot;, y = &quot;..density..&quot;, add = &quot;median&quot;, rug = FALSE, xlab = &quot;Correlation coefficient&quot;, ylab = &quot;density&quot;, color = &quot;#CE0000&quot;, fill = &quot;#CE0000&quot;, main = paste0(&quot;Correlation in gene &amp; metabolite (median= &quot;,md,&quot;)&quot;), bins = 50, add_density = TRUE) + theme_bw() ggsave(&quot;result/Figure3/S4C_cor_spearman.pdf&quot;,p,width=5.2,height = 4.5) #------------------------------------------------------------------------------ # Step 3: Pearson #------------------------------------------------------------------------------ ## Load data sample_info &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(METc_BM_D0_ID,RNA_id_raw,Pid) %&gt;% dplyr::filter(!is.na(METc_BM_D0_ID) &amp; !is.na(RNA_id_raw)) dat_met &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::select(sample_info$METc_BM_D0_ID) %&gt;% log1p() names(dat_met) &lt;- sample_info$Pid gene_metabolite1 &lt;- gene_metabolite %&gt;% dplyr::filter(dest_type==&quot;gene&quot;) gene_filter &lt;- unique(c(gene_metabolite1$gene)) dat_gene &lt;- readRDS(&quot;raw_data/20231113_RNA_ALL_VST_coding.rds&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(sample_info$RNA_id_raw) %&gt;% tibble::rownames_to_column(var=&quot;label&quot;) %&gt;% dplyr::filter(label %in% gene_filter) %&gt;% tibble::column_to_rownames(&quot;label&quot;) names(dat_gene) &lt;- sample_info$Pid metabolites &lt;- c(&quot;Adenosine&quot;) genes &lt;- c(&quot;NT5E&quot;) ## cor_Adenosine_NT5E for (metabolite in metabolites) { for (gene in genes) { dat_melt_filter &lt;- dat_met %&gt;% tibble::rownames_to_column(var=&quot;label&quot;) %&gt;% dplyr::filter(label == metabolite) %&gt;% tibble::column_to_rownames(&quot;label&quot;) dat_gene_filter &lt;- dat_gene %&gt;% tibble::rownames_to_column(var=&quot;gene&quot;) %&gt;% dplyr::filter(gene==gene) %&gt;% tibble::column_to_rownames(&quot;gene&quot;) dat_filter &lt;- rbind(dat_melt_filter,dat_gene_filter) %&gt;% t() %&gt;% as.data.frame() p &lt;- ggscatter(dat_filter,x=metabolite,y=gene, add=&quot;reg.line&quot;,conf.int=TRUE,cor.coef=TRUE,cor.method=&quot;pearso&quot;) ggsave(paste0(&quot;result/Figure3/S4C_&quot;,metabolite,&quot;_&quot;,gene,&quot;.pdf&quot;),p,width=5,height = 5) } } ## cor_NADH_NAXD metabolites &lt;- c(&quot;NADH&quot;) genes &lt;- c(&quot;NAXD&quot;) for (metabolite in metabolites) { for (gene in genes) { dat_melt_filter &lt;- dat_met %&gt;% tibble::rownames_to_column(var=&quot;label&quot;) %&gt;% dplyr::filter(label == metabolite) %&gt;% tibble::column_to_rownames(&quot;label&quot;) dat_gene_filter &lt;- dat_gene %&gt;% tibble::rownames_to_column(var=&quot;gene&quot;) %&gt;% dplyr::filter(gene==gene) %&gt;% tibble::column_to_rownames(&quot;gene&quot;) dat_filter &lt;- rbind(dat_melt_filter,dat_gene_filter) %&gt;% t() %&gt;% as.data.frame() p &lt;- ggscatter(dat_filter,x=metabolite,y=gene, add=&quot;reg.line&quot;,conf.int=TRUE,cor.coef=TRUE,cor.method=&quot;pearson&quot;) ggsave(paste0(&quot;result/Figure3/S4C_&quot;,metabolite,&quot;_&quot;,gene,&quot;.pdf&quot;),p,width=5,height = 5) } } "],["figure-4.html", "Chapter 19 Figure 4 19.1 (A) Schematic Workflow 19.2 (B) Discrimination of BCP-ALL Clusters 19.3 (C) OS in 75 BCP-ALL patients 19.4 (D) Multivariate Cox Analysis 19.5 (E) Subnetwork between BC3 and BC1/2 19.6 (F) Discrimination of T-ALL Clusters 19.7 (G) OS of TC1/2 19.8 (H) Subnetwork between TC2 and TC1 19.9 (S5 A) Clusters of BCP-ALL 19.10 (S5 E) Waterfall plot of BC1/2/3 19.11 (S5 H) DA-score of BC3 cluster 19.12 (S5 I-J) MSEA of BC1/2/3 19.13 (S6 A) Clusters of T-ALL 19.14 (S6 E-F) RFS and EFS of TC1/2 19.15 (S6 H) Multivariate Cox Analysis of TC1/2 19.16 (S6 I) Heatmap of TC1/2 19.17 (S6 J) DA score of TC1/2 19.18 (S6 K-L) MSEA of TC1/2", " Chapter 19 Figure 4 Figure 4: Metabolic information yields an independent prognostic clustering classification for BCP-ALL and T-ALL. A. The schematic workflow following SNF integration analysis. The BMMC omics data were inputted to generate a fused similarity network, which was subsequently utilized for sample clustering in this study. B. The discrimination of three BCP-ALL clusters (BC1, BC2 and BC3) generated from SNF method. C. The association of the three metabolic clusters with clinical overall survival (OS) in 75 BCP-ALL patients (P-value from log rank test). D. The multivariate Cox analysis reveals that the metabolic clusters was an independent prognostic value for OS and event-free survival (EFS), respectively. In the genetic-based risk stratification, BCR-ABL1, ETV6-RUNX1, DUX4-IGH andTCF3-PBX1 fusion were categorized into standard risk group. E. A core metabolism-based subnetwork that best explains the difference between BC3 and BC1/2. Each circle node represents one metabolite (labeled with KEGG ID), and each square node represents one gene. The colors represent the logFC (logarithm of fold change) of genes, with red and green indicating different expression levels, while yellow and blue represent the logFC of metabolites, indicating varying levels. Highlighted labels belong to cholesterol metabolism and nicotinate and nicotinamide metabolism. F. The discrimination of two T-ALL clusters (TC1 and TC2) based on SNF method. G. The association of the two metabolic clusters with clinical OS outcomes in 24 T-ALL patients (P-value from log rank test). The result suggested TC1 was of significantly poorer prognosis than TC2. H. A core metabolism-based subnetwork that best explains the difference between TC2 and TC1. Each circle node represents one metabolite (labeled with KEGG ID), and each square node represents one gene. The colors represent the logFC (logarithm of fold change) of genes, with red and green indicating different expression levels, while yellow and blue represent the logFC of metabolites, indicating varying levels. Highlighted labels belong to citrate cycle oxidative phosphorylation. 19.1 (A) Schematic Workflow The schematic workflow following integrated analysis. The BMMC omics data are inputted to generate a fused similarity network, which is subsequently utilized for sample clustering in this study. library(dplyr) library(MNet) library(survival) library(survminer) #------------------------------------------------------------------------------- # Step 1: Cox regression of metabolomics of BCP-ALL #------------------------------------------------------------------------------- sample_info &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(!is.na(METc_BM_D0_ID)) %&gt;% dplyr::filter(Lineage==&quot;B&quot;) %&gt;% dplyr::mutate(bianhao=gsub(&quot;RJ-&quot;,&quot;A&quot;,Pid)) %&gt;% dplyr::select(bianhao,METc_BM_D0_ID) dat_cell &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::select(all_of(sample_info$METc_BM_D0_ID)) %&gt;% log1p() names(dat_cell) &lt;- sample_info$bianhao clinical &lt;- readxl::read_excel(&quot;raw_data/08 队列病人生存资料-v231026.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(bianhao,OS_stat,OS) %&gt;% dplyr::inner_join(sample_info,by=c(&quot;bianhao&quot;)) %&gt;% dplyr::arrange(match(bianhao,sample_info$bianhao)) %&gt;% dplyr::select(-METc_BM_D0_ID) %&gt;% unique() dat_t &lt;- t(dat_cell) %&gt;% data.frame() %&gt;% tibble::rownames_to_column(var=&quot;bianhao&quot;) %&gt;% dplyr::left_join(clinical,by=&quot;bianhao&quot;) %&gt;% dplyr::select(OS,OS_stat,everything()) %&gt;% tibble::column_to_rownames(&quot;bianhao&quot;) %&gt;% dplyr::rename(&quot;time&quot;=&quot;OS&quot;) %&gt;% dplyr::rename(&quot;status&quot;=&quot;OS_stat&quot;) metabolite_name &lt;- names(dat_t)[3:ncol(dat_t)] dat_t_raw &lt;- t(dat_cell) %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;bianhao&quot;) %&gt;% dplyr::left_join(clinical,by=&quot;bianhao&quot;) %&gt;% dplyr::select(OS,OS_stat,everything()) %&gt;% tibble::column_to_rownames(&quot;bianhao&quot;) %&gt;% dplyr::rename(&quot;time&quot;=&quot;OS&quot;) %&gt;% dplyr::rename(&quot;status&quot;=&quot;OS_stat&quot;) metabolite_name_raw &lt;- names(dat_t_raw)[3:ncol(dat_t_raw)] dd &lt;- data.frame(name=metabolite_name,name_raw=metabolite_name_raw) univ_formulas &lt;- lapply(metabolite_name,function(x) stats::as.formula(paste(&#39;survival::Surv(time, status)~&#39;, x))) univ_models &lt;- lapply( univ_formulas, function(x){survival::coxph(x, data = dat_t)}) univ_results &lt;- lapply(univ_models, function(x){ x &lt;- summary(x) p.value&lt;-signif(x$wald[&quot;pvalue&quot;], digits=2) wald.test&lt;-signif(x$wald[&quot;test&quot;], digits=2) beta&lt;-signif(x$coef[1], digits=2);#coeficient beta HR &lt;-signif(x$coef[2], digits=2);#exp(beta) HR.confint.lower &lt;- signif(x$conf.int[,&quot;lower .95&quot;], 2) HR.confint.upper &lt;- signif(x$conf.int[,&quot;upper .95&quot;],2) HR &lt;- paste0(HR, &quot; (&quot;, HR.confint.lower, &quot;-&quot;, HR.confint.upper, &quot;)&quot;) name &lt;- rownames(x$coefficients) res&lt;-c(name,beta, HR, wald.test, p.value) names(res)&lt;-c(&quot;name&quot;,&quot;beta&quot;, &quot;HR (95% CI for HR)&quot;, &quot;wald.test&quot;,&quot;p.value&quot;) return(res) }) res &lt;- t(as.data.frame(univ_results, check.names = FALSE)) result &lt;- as.data.frame(res) metabolite_all &lt;- result %&gt;% dplyr::left_join(dd,by=c(&quot;name&quot;)) write.table(metabolite_all,&quot;result/Figure4/4A_1.cox_metabolite_all_B.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) #------------------------------------------------------------------------------- # Step 2: Cox regression of transcriptomics of BCP-ALL #------------------------------------------------------------------------------- gene_metabolite1 &lt;- gene_metabolite %&gt;% dplyr::filter(dest_type==&quot;gene&quot;) gene2 &lt;- PathwayExtendData %&gt;% filter(type==&quot;gene&quot;) gene_filter &lt;- unique(c(gene_metabolite1$gene,gene2$name)) length(gene_filter) sample_rna &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Lineage==&quot;B&quot;) %&gt;% dplyr::filter(!is.na(RNA_ID)) %&gt;% dplyr::mutate(bianhao=gsub(&quot;RJ-&quot;,&quot;A&quot;,Pid)) %&gt;% dplyr::select(bianhao,RNA_id_raw) dat_gene &lt;- readRDS(&quot;raw_data/20231113_RNA_ALL_VST_coding.rds&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(sample_rna$RNA_id_raw) %&gt;% tibble::rownames_to_column(var=&quot;label&quot;) %&gt;% dplyr::filter(label %in% gene_filter) %&gt;% tibble::column_to_rownames(&quot;label&quot;) names(dat_gene) &lt;- sample_rna$bianhao dat_gene_0 &lt;- rowSums(dat_gene==0) dat_gene &lt;- dat_gene %&gt;% dplyr::mutate(num=dat_gene_0) %&gt;% dplyr::filter(num &lt; 0.5*ncol(dat_gene)) %&gt;% dplyr::select(-num) clinical &lt;- readxl::read_excel(&quot;raw_data/08 队列病人生存资料-v231026.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(bianhao_new,OS_stat,OS) %&gt;% dplyr::mutate(bianhao=paste0(&quot;A&quot;,bianhao_new)) %&gt;% dplyr::select(-bianhao_new) %&gt;% unique() dat_t &lt;- t(dat_gene) %&gt;% data.frame() %&gt;% tibble::rownames_to_column(var=&quot;bianhao&quot;) %&gt;% dplyr::left_join(clinical,by=&quot;bianhao&quot;) %&gt;% dplyr::select(OS,OS_stat,everything()) %&gt;% tibble::column_to_rownames(&quot;bianhao&quot;) %&gt;% dplyr::rename(&quot;time&quot;=&quot;OS&quot;) %&gt;% dplyr::rename(&quot;status&quot;=&quot;OS_stat&quot;) gene_name &lt;- names(dat_t)[3:ncol(dat_t)] dat_t_raw &lt;- t(dat_gene) %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;bianhao&quot;) %&gt;% dplyr::left_join(clinical,by=&quot;bianhao&quot;) %&gt;% dplyr::select(OS,OS_stat,everything()) %&gt;% tibble::column_to_rownames(&quot;bianhao&quot;) %&gt;% dplyr::rename(&quot;time&quot;=&quot;OS&quot;) %&gt;% dplyr::rename(&quot;status&quot;=&quot;OS_stat&quot;) gene_name_raw &lt;- names(dat_t_raw)[3:ncol(dat_t_raw)] dd &lt;- data.frame(name=gene_name,name_raw=gene_name_raw) univ_formulas &lt;- lapply(gene_name,function(x) stats::as.formula(paste(&#39;survival::Surv(time, status)~&#39;, x))) univ_models &lt;- lapply(univ_formulas, function(x){survival::coxph(x, data = dat_t)}) univ_results &lt;- lapply(univ_models, function(x){ x &lt;- summary(x) p.value&lt;-signif(x$wald[&quot;pvalue&quot;], digits=2) wald.test&lt;-signif(x$wald[&quot;test&quot;], digits=2) beta&lt;-signif(x$coef[1], digits=2);#coeficient beta HR &lt;-signif(x$coef[2], digits=2);#exp(beta) HR.confint.lower &lt;- signif(x$conf.int[,&quot;lower .95&quot;], 2) HR.confint.upper &lt;- signif(x$conf.int[,&quot;upper .95&quot;],2) HR &lt;- paste0(HR, &quot; (&quot;, HR.confint.lower, &quot;-&quot;, HR.confint.upper, &quot;)&quot;) name &lt;- rownames(x$coefficients) res&lt;-c(name,beta, HR, wald.test, p.value) names(res)&lt;-c(&quot;name&quot;,&quot;beta&quot;, &quot;HR (95% CI for HR)&quot;, &quot;wald.test&quot;,&quot;p.value&quot;) return(res) }) res &lt;- t(as.data.frame(univ_results, check.names = FALSE)) result &lt;- as.data.frame(res) gene_all &lt;- result %&gt;% dplyr::left_join(dd,by=&quot;name&quot;) write.table(gene_all,&quot;result/Figure4/4A_1.cox_gene_all_B.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) #------------------------------------------------------------------------------ # Step 3: Cox regression of metabolomics of T-ALL #------------------------------------------------------------------------------ sample_info &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(!is.na(METc_BM_D0_ID)) %&gt;% dplyr::filter(Lineage==&quot;T&quot;) %&gt;% dplyr::mutate(bianhao=gsub(&quot;RJ-&quot;,&quot;A&quot;,Pid)) %&gt;% dplyr::select(bianhao,METc_BM_D0_ID) dat_cell &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::select(all_of(sample_info$METc_BM_D0_ID)) %&gt;% log1p() names(dat_cell) &lt;- sample_info$bianhao clinical &lt;- readxl::read_excel(&quot;raw_data/08 队列病人生存资料-v231026.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(bianhao,OS_stat,OS) %&gt;% dplyr::inner_join(sample_info,by=c(&quot;bianhao&quot;)) %&gt;% dplyr::arrange(match(bianhao,sample_info$bianhao)) %&gt;% dplyr::select(-METc_BM_D0_ID) %&gt;% unique() dat_t &lt;- t(dat_cell) %&gt;% data.frame() %&gt;% tibble::rownames_to_column(var=&quot;bianhao&quot;) %&gt;% dplyr::left_join(clinical,by=&quot;bianhao&quot;) %&gt;% dplyr::select(OS,OS_stat,everything()) %&gt;% tibble::column_to_rownames(&quot;bianhao&quot;) %&gt;% dplyr::rename(&quot;time&quot;=&quot;OS&quot;) %&gt;% dplyr::rename(&quot;status&quot;=&quot;OS_stat&quot;) metabolite_name &lt;- names(dat_t)[3:ncol(dat_t)] dat_t_raw &lt;- t(dat_cell) %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;bianhao&quot;) %&gt;% dplyr::left_join(clinical,by=&quot;bianhao&quot;) %&gt;% dplyr::select(OS,OS_stat,everything()) %&gt;% tibble::column_to_rownames(&quot;bianhao&quot;) %&gt;% dplyr::rename(&quot;time&quot;=&quot;OS&quot;) %&gt;% dplyr::rename(&quot;status&quot;=&quot;OS_stat&quot;) metabolite_name_raw &lt;- names(dat_t_raw)[3:ncol(dat_t_raw)] dd &lt;- data.frame(name=metabolite_name,name_raw=metabolite_name_raw) univ_formulas &lt;- lapply(metabolite_name,function(x) stats::as.formula(paste(&#39;survival::Surv(time, status)~&#39;, x))) univ_models &lt;- lapply( univ_formulas, function(x){survival::coxph(x, data = dat_t)}) univ_results &lt;- lapply(univ_models, function(x){ x &lt;- summary(x) p.value&lt;-signif(x$wald[&quot;pvalue&quot;], digits=2) wald.test&lt;-signif(x$wald[&quot;test&quot;], digits=2) beta&lt;-signif(x$coef[1], digits=2); HR &lt;-signif(x$coef[2], digits=2); HR.confint.lower &lt;- signif(x$conf.int[,&quot;lower .95&quot;], 2) HR.confint.upper &lt;- signif(x$conf.int[,&quot;upper .95&quot;],2) HR &lt;- paste0(HR, &quot; (&quot;, HR.confint.lower, &quot;-&quot;, HR.confint.upper, &quot;)&quot;) name &lt;- rownames(x$coefficients) res&lt;-c(name,beta, HR, wald.test, p.value) names(res)&lt;-c(&quot;name&quot;,&quot;beta&quot;, &quot;HR (95% CI for HR)&quot;, &quot;wald.test&quot;,&quot;p.value&quot;) return(res) }) res &lt;- t(as.data.frame(univ_results, check.names = FALSE)) result &lt;- as.data.frame(res) metabolite_all &lt;- result %&gt;% dplyr::left_join(dd,by=c(&quot;name&quot;)) write.table(metabolite_all,&quot;result/Figure4/4A_1.cox_metabolite_all_T.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) #------------------------------------------------------------------------------- # Step 4: Cox regression of transcriptomics of T-ALL #------------------------------------------------------------------------------- gene_metabolite1 &lt;- gene_metabolite %&gt;% dplyr::filter(dest_type==&quot;gene&quot;) gene2 &lt;- PathwayExtendData %&gt;% filter(type==&quot;gene&quot;) gene_filter &lt;- unique(c(gene_metabolite1$gene,gene2$name)) length(gene_filter) sample_rna &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Lineage==&quot;T&quot;) %&gt;% dplyr::filter(!is.na(RNA_ID)) %&gt;% dplyr::mutate(bianhao=gsub(&quot;RJ-&quot;,&quot;A&quot;,Pid)) %&gt;% dplyr::select(bianhao,RNA_id_raw) dat_gene &lt;- readRDS(&quot;raw_data/20231113_RNA_ALL_VST_coding.rds&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(sample_rna$RNA_id_raw) %&gt;% tibble::rownames_to_column(var=&quot;label&quot;) %&gt;% dplyr::filter(label %in% gene_filter) %&gt;% tibble::column_to_rownames(&quot;label&quot;) names(dat_gene) &lt;- sample_rna$bianhao dat_gene_0 &lt;- rowSums(dat_gene==0) dat_gene &lt;- dat_gene %&gt;% dplyr::mutate(num=dat_gene_0) %&gt;% dplyr::filter(num &lt; 0.5*ncol(dat_gene)) %&gt;% dplyr::select(-num) clinical &lt;- readxl::read_excel(&quot;raw_data/08 队列病人生存资料-v231026.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(bianhao_new,OS_stat,OS) %&gt;% dplyr::mutate(bianhao=paste0(&quot;A&quot;,bianhao_new)) %&gt;% dplyr::select(-bianhao_new) %&gt;% unique() dat_t &lt;- t(dat_gene) %&gt;% data.frame() %&gt;% tibble::rownames_to_column(var=&quot;bianhao&quot;) %&gt;% dplyr::left_join(clinical,by=&quot;bianhao&quot;) %&gt;% dplyr::select(OS,OS_stat,everything()) %&gt;% tibble::column_to_rownames(&quot;bianhao&quot;) %&gt;% dplyr::rename(&quot;time&quot;=&quot;OS&quot;) %&gt;% dplyr::rename(&quot;status&quot;=&quot;OS_stat&quot;) gene_name &lt;- names(dat_t)[3:ncol(dat_t)] dat_t_raw &lt;- t(dat_gene) %&gt;% as.data.frame() %&gt;% tibble::rownames_to_column(var=&quot;bianhao&quot;) %&gt;% dplyr::left_join(clinical,by=&quot;bianhao&quot;) %&gt;% dplyr::select(OS,OS_stat,everything()) %&gt;% tibble::column_to_rownames(&quot;bianhao&quot;) %&gt;% dplyr::rename(&quot;time&quot;=&quot;OS&quot;) %&gt;% dplyr::rename(&quot;status&quot;=&quot;OS_stat&quot;) gene_name_raw &lt;- names(dat_t_raw)[3:ncol(dat_t_raw)] dd &lt;- data.frame(name=gene_name,name_raw=gene_name_raw) univ_formulas &lt;- lapply(gene_name,function(x) stats::as.formula(paste(&#39;survival::Surv(time, status)~&#39;, x))) univ_models &lt;- lapply( univ_formulas, function(x){survival::coxph(x, data = dat_t)}) univ_results &lt;- lapply(univ_models, function(x){ x &lt;- summary(x) p.value&lt;-signif(x$wald[&quot;pvalue&quot;], digits=2) wald.test&lt;-signif(x$wald[&quot;test&quot;], digits=2) beta&lt;-signif(x$coef[1], digits=2);#coeficient beta HR &lt;-signif(x$coef[2], digits=2);#exp(beta) HR.confint.lower &lt;- signif(x$conf.int[,&quot;lower .95&quot;], 2) HR.confint.upper &lt;- signif(x$conf.int[,&quot;upper .95&quot;],2) HR &lt;- paste0(HR, &quot; (&quot;, HR.confint.lower, &quot;-&quot;, HR.confint.upper, &quot;)&quot;) name &lt;- rownames(x$coefficients) res&lt;-c(name,beta, HR, wald.test, p.value) names(res)&lt;-c(&quot;name&quot;,&quot;beta&quot;, &quot;HR (95% CI for HR)&quot;, &quot;wald.test&quot;, &quot;p.value&quot;) return(res) }) res &lt;- t(as.data.frame(univ_results, check.names = FALSE)) result &lt;- as.data.frame(res) gene_all &lt;- result %&gt;% dplyr::left_join(dd,by=&quot;name&quot;) write.table(gene_all,&quot;result/Figure4/4A_1.cox_gene_all_T.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) 19.2 (B) Discrimination of BCP-ALL Clusters The discrimination of three clusters (BC1, BC 2 and BC3) generated from SNF method. library(dplyr) library(MNet) library(survival) library(survminer) #------------------------------------------------------------------------------- # Step 1: Load data and set parameters #------------------------------------------------------------------------------- dat_filter &lt;- data.table::fread(&quot;result/Figure2/1.BMMCvsHC.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::arrange(P.Value) %&gt;% dplyr::filter(P.Value &lt; 0.5) dat_filter$P.Value[1:5] dat_cox &lt;- data.table::fread(&quot;result/Figure4/4A_1.cox_metabolite_all_B.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::arrange(p.value) %&gt;% head(n=120) dat_cox$p.value[1:5] dat_filter &lt;- dat_filter %&gt;% dplyr::filter(name %in% dat_cox$name_raw) sample_info &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(!is.na(METc_BM_D0_ID)) %&gt;% dplyr::filter(!is.na(RNA_ID)) %&gt;% dplyr::filter(Lineage==&quot;B&quot;) dat_cell &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(label %in% dat_filter$name) %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::select(all_of(sample_info$METc_BM_D0_ID)) %&gt;% log1p() names(dat_cell) &lt;- sample_info$Pid cox_gene &lt;- data.table::fread(&quot;result/Figure4/4A_1.cox_gene_all_B.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::arrange(p.value) %&gt;% head(n=600) dat_gene &lt;- readRDS(&quot;raw_data/20231113_RNA_ALL_VST_coding.rds&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(sample_info$RNA_id_raw) %&gt;% tibble::rownames_to_column(var=&quot;label&quot;) %&gt;% dplyr::filter(label %in% cox_gene$name_raw) %&gt;% tibble::column_to_rownames(&quot;label&quot;) names(dat_gene) &lt;- sample_info$Pid #------------------------------------------------------------------------------- # Step 2: SNF of discrimination BCP-ALL clusters #------------------------------------------------------------------------------- library(SNFtool) metabolite_norm = standardNormalization(t(dat_cell)) metgene_norm = standardNormalization(t(dat_gene)) dim(metabolite_norm) dim(metgene_norm) write.table(metabolite_norm,&quot;result/Figure4/4B_metabolite_norm_B.txt&quot;,quote=F,sep=&quot;\\t&quot;) write.table(metgene_norm,&quot;result/Figure4/4B_metgene_norm_B.txt&quot;,quote=F,sep=&quot;\\t&quot;) Dist1 = (SNFtool::dist2(as.matrix(metabolite_norm),as.matrix(metabolite_norm)))^(1/2) Dist2 = (SNFtool::dist2(as.matrix(metgene_norm),as.matrix(metgene_norm)))^(1/2) W1 = affinityMatrix(Dist1, 10, 0.5) W2 = affinityMatrix(Dist2, 10, 0.5) W = SNF(list(W1,W2), 10, 10) ec &lt;- estimateNumberOfClustersGivenGraph(W, NUMC=2:10) Clusters = spectralClustering(W,K=3) M_label=cbind(Clusters,sample_info) %&gt;% dplyr::mutate(Clusters=ifelse(Clusters==1,&quot;BC3&quot;, ifelse(Clusters==2,&quot;BC2&quot;, ifelse(Clusters==3,&quot;BC1&quot;,Clusters)))) if (0) { pdf(paste0(&quot;result/Figure4/4B_SNF_discrimination_B.pdf&quot;)) displayClusters(W, Clusters) dev.off() } write.table(M_label,paste0(&quot;result/Figure4/4B_cluster_B.txt&quot;),quote=F,row.names = F,sep=&quot;\\t&quot;) library(ComplexHeatmap) l &lt;- M_label %&gt;% dplyr::arrange(Clusters) W_2 &lt;- W %&gt;% as.data.frame() %&gt;% dplyr::select(l$Pid) %&gt;% tibble::rownames_to_column(var=&quot;sample&quot;) %&gt;% dplyr::arrange(match(sample,l$Pid)) %&gt;% tibble::column_to_rownames(&quot;sample&quot;) W_2[W_2==0.5] &lt;- 0 col_fun = circlize::colorRamp2(c( 0, 0.03), c( &quot;white&quot;,&quot;#F48326&quot;)) p_metabolite &lt;- Heatmap(W_2,height=unit(10,&quot;cm&quot;),name=&quot;Sample Data&quot;, cluster_rows = F,cluster_columns = F, col = col_fun, show_column_names = F,show_row_names = F, row_names_gp = gpar(fontsize = 3), column_names_gp = gpar(fontsize = 3)) pdf(&quot;result/Figure4/4B_SNF_discrimination_complexheatmap_B.pdf&quot;,width=5,height = 5) p_metabolite dev.off() 19.3 (C) OS in 75 BCP-ALL patients The association of the three metabolic clusters with clinical overall survival (OS) outcomes in 75 BCP-ALL patients (P-value from log rank test). library(dplyr) library(MNet) library(survival) library(survminer) #------------------------------------------------------------------------------- # Step 1: Load data #------------------------------------------------------------------------------- clinical_survival &lt;- data.table::fread(paste0(&quot;result/Figure4/4B_cluster_B.txt&quot;)) %&gt;% as.data.frame() #------------------------------------------------------------------------------- # Step 2: Overall survival analysis #------------------------------------------------------------------------------- surv_object &lt;- Surv(time = clinical_survival$OS/30, event = clinical_survival$OS_stat) fit_cluster &lt;- survfit(surv_object ~ Clusters, data = clinical_survival) p1 &lt;- survminer::ggsurvplot(fit_cluster, data = clinical_survival, title=&quot;OS&quot;, palette=c(&quot;#9BD53F&quot;,&quot;#A6CEE3&quot;,&quot;#EA644C&quot;), tables.theme = theme_void(),risk.table = TRUE, risk.table.fontsize=6, break.time.by = 12, risk.table.y.text = FALSE, tables.height = 0.15,risk.table.col = &quot;black&quot;, pval = TRUE,pval.method = F, pval.coord=c(0.5,0.1),pval.size=6, font.tickslab=c(14,&quot;plain&quot;,&quot;black&quot;), xlab=&quot;Time (Months) &quot;,ylab=&quot;OS Survival&quot;) pdf(paste0(&quot;result/Figure4/4C_OS_B.pdf&quot;),onefile=FALSE) p1 dev.off() 19.4 (D) Multivariate Cox Analysis The multivariate cox analysis reveals that the metabolic clusters was an independent prognostic value for OS and event-free survival (EFS), respectively. In the genetic-based risk stratification, BCR-ABL1, ETV6-RUNX1, DUX4-IGH and TCF3-PBX1 fusion are categorized into standard risk group. library(dplyr) library(openxlsx) library(survival) library(survminer) #------------------------------------------------------------------------------- # Step 1: Load data and set parameters #------------------------------------------------------------------------------- tt &lt;- readxl::read_excel(&quot;raw_data/Sample_RNA_190_fusion_mutation_v1130.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(mutation,fusion,RNA_id,Prediction_Check) M_label &lt;- data.table::fread(&quot;result/Figure4/4B_cluster_B.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(Clusters=ifelse(Clusters %in% c(&quot;BC1&quot;,&quot;BC2&quot;),&quot;BC1+BC2&quot;,Clusters)) %&gt;% dplyr::mutate(Clusters=as.factor(Clusters)) %&gt;% dplyr::select(Clusters,Pid) clinical_survival &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::rename(&quot;Sex&quot;=&quot;Gender&quot;) %&gt;% dplyr::select(Pid,RNA_id_raw,Age,Sex,WBC,d28CR,ifHSCT,OS,OS_stat,EFS,EFS_stat,RFS,RFS_stat) %&gt;% dplyr::mutate(d28CR=ifelse(d28CR %in% c(&quot;early death&quot;,&quot;NR&quot;,&quot;PR&quot;),&quot;non_CR&quot;,d28CR)) %&gt;% dplyr::rename(&quot;D28_status&quot;=&quot;d28CR&quot;) %&gt;% dplyr::mutate(WBC_type= ifelse(WBC&gt;30, &quot;high&quot;, ifelse(WBC&lt;=30,&quot;low&quot;,NA))) %&gt;% dplyr::mutate(ifHSCT=as.factor(ifHSCT)) %&gt;% dplyr::inner_join(M_label,by=&quot;Pid&quot;) %&gt;% dplyr::left_join(tt,by=c(&quot;RNA_id_raw&quot;=&quot;RNA_id&quot;)) %&gt;% dplyr::mutate(NCCN=ifelse(fusion %in% c(&quot;ETV6-RUNX1&quot;,&quot;DUX4-IGH&quot;,&quot;TCF3-PBX1&quot;),&quot;Standard risk&quot;, ifelse(fusion %in% c(&quot;KMT2A-AFF1&quot;,&quot;EP300-ZNF384&quot;,&quot;SMARCA2-ZNF384&quot;),&quot;Poor risk&quot;, ifelse(Prediction_Check==&quot;Ph-like&quot;,&quot;Poor risk&quot;, ifelse(Prediction_Check %in% c(&quot;BCL2/MYC&quot;,&quot;PAX5alt&quot;,&quot;High hyperdoploid&quot;, &quot;Low hypodiploid&quot;,&quot;IDH&quot;,&quot;TWIST2-high&quot;),&quot;Poor risk&quot;,&quot;Standard risk&quot;))))) %&gt;% dplyr::mutate(NCCN=factor(NCCN,levels=c(&quot;Standard risk&quot;,&quot;Poor risk&quot;))) %&gt;% dplyr::mutate(Sex=factor(Sex,levels=c(&quot;M&quot;,&quot;F&quot;))) %&gt;% dplyr::mutate(Age=ifelse(Age&gt;40,&quot;old&quot;,&quot;young&quot;)) %&gt;% dplyr::mutate(Age=factor(Age,levels=c(&quot;young&quot;,&quot;old&quot;))) var.names &lt;- c(&quot;Clusters&quot;,&quot;Age&quot;,&quot;WBC_type&quot;,&quot;NCCN&quot;,&quot;D28_status&quot;,&quot;ifHSCT&quot;) #------------------------------------------------------------------------------- # Step 2: Event-free survival (EFS) #------------------------------------------------------------------------------- f_efs &lt;- as.formula(paste(&#39;Surv(EFS, EFS_stat)~&#39;,paste(var.names,collapse = &quot;+&quot;))) fit.final &lt;- coxph(f_efs,data=clinical_survival) p_efs &lt;- ggforest(fit.final,main=&quot;EFS Hzard Ratio&quot;, cpositions=c(0.02,0.22,0.4), fontsize=0.8,refLabel=&quot;reference&quot;, noDigits=2,data=clinical_survival) #------------------------------------------------------------------------------- # Step 3: Overall survival(OS) #------------------------------------------------------------------------------- f_os &lt;- as.formula(paste(&#39;Surv(OS, OS_stat)~&#39;,paste(var.names,collapse = &quot;+&quot;))) fit.os &lt;- coxph(f_os,data=clinical_survival) p_os &lt;- ggforest(fit.os,main=&quot;OS Hzard Ratio&quot;, cpositions=c(0.02,0.22,0.4), fontsize=0.8,refLabel=&quot;reference&quot;, noDigits=2,data=clinical_survival) ggsave(p_efs,filename = &quot;result/Figure4/4D_HR_EFS_B_NCCN_1plus2vs3.pdf&quot;,width=9,height=4.5) ggsave(p_os,filename = &quot;result/Figure4/4D_HR_OS_B_NCCN_1plus2vs3.pdf&quot;,width=9,height=4.5) 19.5 (E) Subnetwork between BC3 and BC1/2 A core metabolism-based subnetwork that best explains the difference between BC3 and BC1/2. Each circle node represents one metabolite (labeled with KEGG ID), and each square node represents one gene. The colors represent the logFC (logarithm of fold change) of genes, with red and green indicating different expression levels, while yellow and blue represent the logFC of metabolites, indicating varying levels. Highlighted labels belong to cholesterol metabolism and nicotinate and nicotinamide metabolism. library(dplyr) library(ggplot2) library(igraph) library(MNet) library(graphics) library(cowplot) rm(list = ls()) #------------------------------------------------------------------------------- # Step 1: Read data and set parameters #------------------------------------------------------------------------------- gene1 &lt;- readxl::read_excel(&quot;raw_data/Chol_Transport_Deg_Ester.xlsx&quot;) %&gt;% as.data.frame() name_gene &lt;- data.table::fread(&quot;result/Figure4/4A_1.cox_gene_all_B.txt&quot;) %&gt;% as.data.frame() diff_gene &lt;- data.table::fread(&quot;result/Figure4/S5H_gene_B.txt&quot;) %&gt;% as.data.frame() %&gt;% filter(name %in% name_gene$name_raw) kid &lt;- openxlsx::read.xlsx(&quot;raw_data/cell_metabolite_info_all_v1109.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(refmet_name,KEGG) %&gt;% mutate(KEGG=ifelse(KEGG==&quot;None&quot;,refmet_name,KEGG)) diff_meta &lt;- data.table::fread(&quot;result/Figure4/S5H_metabolite_B.txt&quot;) %&gt;% as.data.frame() %&gt;% inner_join(kid,by=c(&quot;name&quot;=&quot;refmet_name&quot;)) %&gt;% dplyr::select(-name) %&gt;% dplyr::rename(&quot;name&quot;=&quot;KEGG&quot;) %&gt;% arrange(P.Value) %&gt;% distinct(name,.keep_all = T) names(diff_meta)[4] &lt;- &quot;p_value&quot; names(diff_gene)[4] &lt;- &quot;p_value&quot; dd &lt;- data.table::fread(&quot;raw_data/subnetwork_important_edge-300_B.txt&quot;) %&gt;% as.data.frame() set.seed(1) g &lt;- graph_from_data_frame(dd) layout &lt;- layout_with_dh(g,set.seed(1)) row.names(layout) &lt;- names(V(g)) colnames(layout) &lt;- c(&quot;pos.x&quot;,&quot;pos.y&quot;) kk &lt;- PathwayExtendData %&gt;% filter(kegg_pathwayname==&quot;Nicotinate and nicotinamide metabolism&quot;) node.data &lt;- as.data.frame(layout) %&gt;% tibble::rownames_to_column(var=&quot;label&quot;) %&gt;% left_join(diff_gene,by=c(&quot;label&quot;=&quot;name&quot;)) %&gt;% left_join(diff_meta,by=c(&quot;label&quot;=&quot;name&quot;)) %&gt;% dplyr::select(label,pos.x,pos.y,logFC.x,logFC.y) %&gt;% mutate(logFC=ifelse(is.na(logFC.x),logFC.y,logFC.x)) %&gt;% mutate(type=ifelse(is.na(logFC.x),&quot;metabolite&quot;,&quot;gene&quot;)) %&gt;% dplyr::select(-logFC.x,-logFC.y) %&gt;% mutate(label1=ifelse(label %in% gene1$`Gene Name` |label %in% kk$name| type==&quot;metabolite&quot;,label,NA)) ab &lt;- node.data %&gt;% filter(!is.na(label1)) %&gt;% left_join(gene1,by=c(&quot;label1&quot;=&quot;Gene Name&quot;)) write.table(ab,&quot;result/Figure4/4E_node-filter-v0925.txt&quot;,quote=F,row.names = F,sep=&quot;\\t&quot;) edge.data &lt;- dd %&gt;% dplyr::rename(&quot;fromNode&quot;=&quot;X1&quot;, &quot;toNode&quot;=&quot;X2&quot;) %&gt;% dplyr::select(fromNode,toNode) %&gt;% dplyr::left_join(node.data,by=c(&quot;fromNode&quot;=&quot;label&quot;)) %&gt;% dplyr::rename(&quot;from.x&quot;=&quot;pos.x&quot;,&quot;from.y&quot;=&quot;pos.y&quot;) %&gt;% dplyr::left_join(node.data,by=c(&quot;toNode&quot;=&quot;label&quot;)) %&gt;% dplyr::rename(&quot;to.x&quot;=&quot;pos.x&quot;,&quot;to.y&quot;=&quot;pos.y&quot;) #------------------------------------------------------------------------------- # Step 2: Core metabolism-based subnetwork #------------------------------------------------------------------------------- ## node.color source(&quot;raw_data/node.color.R&quot;) source(&quot;raw_data/col.key.R&quot;) source(&quot;raw_data/colorpanel2.R&quot;) node_meta &lt;- node.data %&gt;% filter(type==&quot;metabolite&quot;) %&gt;% mutate(logFC=round(logFC,2)) %&gt;% mutate(logFC=ifelse(logFC &lt; -0.58, -0.58, logFC)) meta_limits=as.numeric(sprintf(&quot;%.1f&quot;, max(max(node_meta$logFC),abs(min(node_meta$logFC)))))+0.1 meta_color &lt;- node.color(limit=meta_limits,node_meta$logFC,low=&quot;#007DDB&quot;, mid=&quot;gray&quot;, high=&quot;yellow&quot;) node_meta$color &lt;- meta_color node_gene &lt;- node.data %&gt;% filter(type==&quot;gene&quot;) %&gt;% mutate(logFC=round(logFC,2)) %&gt;% mutate(logFC=ifelse(logFC &lt; -2, -2, logFC)) %&gt;% mutate(logFC=ifelse(logFC &gt; 2, 2, logFC)) gene_limits=as.numeric(sprintf(&quot;%.1f&quot;, max(max(node_gene$logFC),abs(min(node_gene$logFC)))))+0.1 gene_color &lt;- node.color(limit=gene_limits,node_gene$logFC,low=&quot;#4FBD81&quot;,mid=&quot;gray&quot;,high=&quot;#D01910&quot;) node_gene$color &lt;- gene_color node.data1 &lt;- rbind(node_meta,node_gene) aa=node.data1$color names(aa)=node.data1$color gg &lt;- ggplot() gg &lt;- gg + geom_segment(mapping = aes(x = from.x, y = from.y, xend = to.x, yend = to.y), color = &quot;#CCCCCC&quot;, size = 0.5, data = edge.data) gg &lt;- gg + geom_point(mapping = aes(x = pos.x, y = pos.y,color=color,shape=type), size = 4, data = node.data1) gg &lt;- gg + scale_size(range = c(0, 6) * 2) gg &lt;- gg + theme_void()+theme(legend.position=&quot;none&quot;) gg &lt;- gg + labs(x = &quot;&quot;, y = &quot;&quot;) gg &lt;- gg + ggrepel::geom_text_repel(mapping=aes(x = pos.x, y = pos.y,label=label1),data=node.data1) gg &lt;- gg + scale_colour_manual(values = aa)+scale_shape_manual(values=c(&quot;gene&quot;=&quot;square&quot;,&quot;metabolite&quot;=&quot;circle&quot;)) #if (0){ p &lt;- plot.new() off.sets=col.key(limit=gene_limits,bins=10,cex=0.5,graph.size = c(1,1),off.sets=c(x=0,y=0), low=&quot;#4FBD81&quot;,mid=&quot;gray&quot;,high=&quot;#D01910&quot;) off.sets=col.key(limit=meta_limits,bins=10,cex=0.5,low=&quot;#007DDB&quot;, mid=&quot;gray&quot;, high=&quot;yellow&quot;, off.sets=c(x=0,y=0),graph.size = c(1,0.9)) p &lt;- recordPlot() dev.off() p1 &lt;- ggdraw()+ draw_plot(p,0.5,0.5,0.5,0.55)+ draw_plot(gg,0,0,1,1) ggsave(&quot;result/Figure4/4E_node-300-all-B.pdf&quot;,p1,width=6,height = 6) if (0) { png(&quot;result/Figure4/4E_node-300-aa.png&quot;,width=5,height = 5,units = &#39;in&#39;, res = 200) grid::grid.draw(p1) dev.off() } 19.6 (F) Discrimination of T-ALL Clusters The discrimination of two T-ALL clusters (TC1 and TC2) based on SNF method. library(dplyr) library(MNet) library(survival) library(survminer) #------------------------------------------------------------------------------- # Step 1: Load data and set parameters #------------------------------------------------------------------------------- dat_filter &lt;- data.table::fread(&quot;result/Figure2/1.BMMCvsHC.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::arrange(P.Value) %&gt;% dplyr::filter(P.Value &lt; 0.5) dat_filter$P.Value[1:5] dat_cox &lt;- data.table::fread(&quot;result/Figure4/4A_1.cox_metabolite_all_T.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::arrange(p.value) %&gt;% head(n=120) dat_cox$p.value[1:5] dat_filter &lt;- dat_filter %&gt;% dplyr::filter(name %in% dat_cox$name_raw) sample_info &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(!is.na(METc_BM_D0_ID)) %&gt;% dplyr::filter(!is.na(RNA_ID)) %&gt;% dplyr::filter(Lineage==&quot;T&quot;) dat_cell &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(label %in% dat_filter$name) %&gt;% tibble::column_to_rownames(&quot;label&quot;) %&gt;% dplyr::select(all_of(sample_info$METc_BM_D0_ID)) %&gt;% log1p() names(dat_cell) &lt;- sample_info$Pid cox_gene &lt;- data.table::fread(&quot;result/Figure4/4A_1.cox_gene_all_T.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::arrange(p.value) %&gt;% head(n=600) dat_gene &lt;- readRDS(&quot;raw_data/20231113_RNA_ALL_VST_coding.rds&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(sample_info$RNA_id_raw) %&gt;% tibble::rownames_to_column(var=&quot;label&quot;) %&gt;% dplyr::filter(label %in% cox_gene$name_raw) %&gt;% tibble::column_to_rownames(&quot;label&quot;) names(dat_gene) &lt;- sample_info$Pid #------------------------------------------------------------------------------- # Step 2: SNF of discrimination T-ALL clusters #------------------------------------------------------------------------------- library(SNFtool) metabolite_norm = standardNormalization(t(dat_cell)) metgene_norm = standardNormalization(t(dat_gene)) dim(metabolite_norm) dim(metgene_norm) write.table(metabolite_norm,&quot;result/Figure4/4F_metabolite_norm_T.txt&quot;,quote=F,sep=&quot;\\t&quot;) write.table(metgene_norm,&quot;result/Figure4/4F_metgene_norm_T.txt&quot;,quote=F,sep=&quot;\\t&quot;) Dist1 = (SNFtool::dist2(as.matrix(metabolite_norm),as.matrix(metabolite_norm)))^(1/2) Dist2 = (SNFtool::dist2(as.matrix(metgene_norm),as.matrix(metgene_norm)))^(1/2) W1 = affinityMatrix(Dist1, 10, 0.5) W2 = affinityMatrix(Dist2, 10, 0.5) W = SNF(list(W1,W2), 10, 10) ec &lt;- estimateNumberOfClustersGivenGraph(W, NUMC=2:10) Clusters = spectralClustering(W,K=2) M_label=cbind(Clusters,sample_info) %&gt;% dplyr::mutate(Clusters=ifelse(Clusters==1,&quot;TC2&quot;, ifelse(Clusters==2,&quot;TC1&quot;,Clusters))) write.table(M_label,paste0(&quot;result/Figure4/4F_cluster_T.txt&quot;),quote=F,row.names = F,sep=&quot;\\t&quot;) l &lt;- M_label %&gt;% dplyr::arrange(Clusters) W_2 &lt;- W %&gt;% as.data.frame() %&gt;% dplyr::select(l$Pid) %&gt;% tibble::rownames_to_column(var=&quot;sample&quot;) %&gt;% dplyr::arrange(match(sample,l$Pid)) %&gt;% tibble::column_to_rownames(&quot;sample&quot;) W_2[W_2==0.5] &lt;- 0 col_fun = circlize::colorRamp2(c( 0, 0.03), c( &quot;white&quot;,&quot;#F48326&quot;)) library(ComplexHeatmap) p_metabolite &lt;- Heatmap(W_2,height=unit(10,&quot;cm&quot;),name=&quot;Sample Data&quot;, cluster_rows = F,cluster_columns = F, col = col_fun, #top_annotation =top_annotation, show_column_names = F,show_row_names = F, row_names_gp = gpar(fontsize = 3),column_names_gp = gpar(fontsize = 3)) pdf(&quot;result/Figure4/4F_SNF_discrimination_complexheatmap_T.pdf&quot;,width=5,height = 5) p_metabolite dev.off() 19.7 (G) OS of TC1/2 The association of the two metabolic clusters with clinical OS outcomes in 24 T-ALL patients (P-value from log rank test). The result suggests TC1 is of significantly poorer prognosis than TC2. library(dplyr) library(MNet) library(survival) library(survminer) #------------------------------------------------------------------------------ # OS of TC1/2 #------------------------------------------------------------------------------ clinical_survival &lt;- data.table::fread(paste0(&quot;result/Figure4/4F_cluster_T.txt&quot;)) %&gt;% as.data.frame() surv_object &lt;- Surv(time = clinical_survival$OS/30, event = clinical_survival$OS_stat) fit_cluster &lt;- survfit(surv_object ~ Clusters, data = clinical_survival) p1 &lt;- survminer::ggsurvplot(fit_cluster, data = clinical_survival, title=&quot;OS&quot;, palette=c(&quot;#9BD53F&quot;,&quot;#A6CEE3&quot;), tables.theme = theme_void(),risk.table = TRUE, risk.table.fontsize=6, break.time.by = 12, risk.table.y.text = FALSE, tables.height = 0.15,risk.table.col = &quot;black&quot;, pval = TRUE, pval.method = F,pval.coord=c(0.5,0.1),pval.size=6, font.tickslab=c(14,&quot;plain&quot;,&quot;black&quot;), xlab=&quot;Time (Months) &quot;,ylab=&quot;OS Survival&quot;) pdf(paste0(&quot;result/Figure4/4G_OS_T.pdf&quot;),onefile=FALSE) p1 dev.off() 19.8 (H) Subnetwork between TC2 and TC1 A core metabolism-based subnetwork that best explains the difference between TC2 and TC1. Each circle node represents one metabolite (labeled with KEGG ID), and each square node represents one gene. The colors represent the logFC (logarithm of fold change) of genes, with red and green indicating different expression levels, while yellow and blue represent the logFC of metabolites, indicating varying levels. Highlighted labels belong to citrate cycle oxidative phosphorylation. library(dplyr) library(ggplot2) library(igraph) library(MNet) library(graphics) library(cowplot) #------------------------------------------------------------------------------- # Step 1: Read data and set parameters #------------------------------------------------------------------------------- rm(list = ls()) name_gene &lt;- data.table::fread(&quot;result/Figure4/4A_1.cox_gene_all_T.txt&quot;) %&gt;% as.data.frame() diff_gene &lt;- data.table::fread(&quot;result/Figure4/S6J_gene_T.txt&quot;) %&gt;% as.data.frame() %&gt;% filter(name %in% name_gene$name_raw) kid &lt;- openxlsx::read.xlsx(&quot;raw_data/cell_metabolite_info_all_v1109.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(refmet_name,KEGG) %&gt;% mutate(KEGG=ifelse(KEGG==&quot;None&quot;,refmet_name,KEGG)) diff_meta &lt;- data.table::fread(&quot;result/Figure4/S6J_metabolite_T.txt&quot;) %&gt;% as.data.frame() %&gt;% inner_join(kid,by=c(&quot;name&quot;=&quot;refmet_name&quot;)) %&gt;% dplyr::select(-name) %&gt;% dplyr::rename(&quot;name&quot;=&quot;KEGG&quot;) %&gt;% arrange(P.Value) %&gt;% distinct(name,.keep_all = T) names(diff_meta)[4] &lt;- &quot;p_value&quot; names(diff_gene)[4] &lt;- &quot;p_value&quot; dd &lt;- data.table::fread(&quot;raw_data/subnetwork_important_edge-300_T.txt&quot;) %&gt;% as.data.frame() set.seed(2) g &lt;- graph_from_data_frame(dd) layout &lt;- layout_with_dh(g,set.seed(1)) row.names(layout) &lt;- names(V(g)) colnames(layout) &lt;- c(&quot;pos.x&quot;,&quot;pos.y&quot;) kk &lt;- PathwayExtendData %&gt;% filter(kegg_pathwayname %in% c(&quot;Citrate cycle (TCA cycle)&quot;,&quot;Oxidative phosphorylation&quot;)) node.data &lt;- as.data.frame(layout) %&gt;% tibble::rownames_to_column(var=&quot;label&quot;) %&gt;% left_join(diff_gene,by=c(&quot;label&quot;=&quot;name&quot;)) %&gt;% left_join(diff_meta,by=c(&quot;label&quot;=&quot;name&quot;)) %&gt;% dplyr::select(label,pos.x,pos.y,logFC.x,logFC.y) %&gt;% mutate(logFC=ifelse(is.na(logFC.x),logFC.y,logFC.x)) %&gt;% mutate(type=ifelse(is.na(logFC.x),&quot;metabolite&quot;,&quot;gene&quot;)) %&gt;% dplyr::select(-logFC.x,-logFC.y) %&gt;% mutate(label1=ifelse(label %in% kk$name,label,NA)) edge.data &lt;- dd %&gt;% dplyr::rename(&quot;fromNode&quot;=&quot;X1&quot;, &quot;toNode&quot;=&quot;X2&quot;) %&gt;% dplyr::select(fromNode,toNode) %&gt;% dplyr::left_join(node.data,by=c(&quot;fromNode&quot;=&quot;label&quot;)) %&gt;% dplyr::rename(&quot;from.x&quot;=&quot;pos.x&quot;,&quot;from.y&quot;=&quot;pos.y&quot;) %&gt;% dplyr::left_join(node.data,by=c(&quot;toNode&quot;=&quot;label&quot;)) %&gt;% dplyr::rename(&quot;to.x&quot;=&quot;pos.x&quot;,&quot;to.y&quot;=&quot;pos.y&quot;) ## node.color source(&quot;raw_data/node.color.R&quot;) source(&quot;raw_data/col.key.R&quot;) source(&quot;raw_data/colorpanel2.R&quot;) node_meta &lt;- node.data %&gt;% filter(type==&quot;metabolite&quot;) %&gt;% mutate(logFC=round(logFC,2)) %&gt;% mutate(logFC=ifelse(logFC &lt; -0.58, -0.58, logFC)) meta_limits=as.numeric(sprintf(&quot;%.1f&quot;, max(max(node_meta$logFC),abs(min(node_meta$logFC)))))+0.1 meta_color &lt;- node.color(limit=meta_limits,node_meta$logFC,low=&quot;#007DDB&quot;, mid=&quot;gray&quot;, high=&quot;yellow&quot;) node_meta$color &lt;- meta_color node_gene &lt;- node.data %&gt;% filter(type==&quot;gene&quot;) %&gt;% mutate(logFC=round(logFC,2)) %&gt;% mutate(logFC=ifelse(logFC &lt; -2, -2, logFC)) %&gt;% mutate(logFC=ifelse(logFC &gt; 2, 2, logFC)) gene_limits=as.numeric(sprintf(&quot;%.1f&quot;, max(max(node_gene$logFC),abs(min(node_gene$logFC)))))+0.1 gene_color &lt;- node.color(limit=gene_limits,node_gene$logFC,low=&quot;#4FBD81&quot;,mid=&quot;gray&quot;,high=&quot;#D01910&quot;) node_gene$color &lt;- gene_color node.data1 &lt;- rbind(node_meta,node_gene) aa=node.data1$color names(aa)=node.data1$color gg &lt;- ggplot() gg &lt;- gg + geom_segment(mapping = aes(x = from.x, y = from.y, xend = to.x, yend = to.y), color = &quot;#CCCCCC&quot;, size = 0.5, data = edge.data) gg &lt;- gg + geom_point(mapping = aes(x = pos.x, y = pos.y,color=color,shape=type), size = 4, data = node.data1) gg &lt;- gg + scale_size(range = c(0, 6) * 2) gg &lt;- gg + theme_void()+theme(legend.position=&quot;none&quot;) gg &lt;- gg + labs(x = &quot;&quot;, y = &quot;&quot;) gg &lt;- gg + ggrepel::geom_text_repel(mapping=aes(x = pos.x, y = pos.y,label=label1),data=node.data1) gg &lt;- gg + scale_colour_manual(values = aa)+scale_shape_manual(values=c(&quot;gene&quot;=&quot;square&quot;,&quot;metabolite&quot;=&quot;circle&quot;)) pdf(&quot;result/Figure4/4H_node-200-1_T.pdf&quot;) p &lt;- plot.new() off.sets=col.key(limit=gene_limits,bins=10,cex=0.5,graph.size = c(1,1),off.sets=c(x=0,y=0), low=&quot;#4FBD81&quot;,mid=&quot;gray&quot;,high=&quot;#D01910&quot;) off.sets=col.key(limit=meta_limits,bins=10,cex=0.5,low=&quot;#007DDB&quot;, mid=&quot;gray&quot;, high=&quot;yellow&quot;, off.sets=c(x=0,y=0),graph.size = c(1,0.9)) p &lt;- recordPlot() dev.off() if (0) { p1 &lt;- ggdraw()+ draw_plot(p,0.5,0.5,0.5,0.55)+ draw_plot(gg,0,0,1,1) ggsave(&quot;result/Figure4/4H_node-300-all.pdf&quot;,p1,width=6,height = 6) } ggsave(&quot;result/Figure4/4H_node-300-2_T.pdf&quot;,gg,width=6,height = 6) if (0) { png(&quot;result/Figure4/4H_node-300-aa.png&quot;,width=5,height = 5,units = &#39;in&#39;, res = 200) grid::grid.draw(p1) dev.off() } 19.9 (S5 A) Clusters of BCP-ALL The relative abundance of input metabolites and metabolic genes in the three metabolic clusters in BCP-ALL: BC1 (N= 20), BC2 (N= 35) and BC3 (N=20). Each column represents a sample and each row represents a metabolite or gene included. #------------------------------------------------------------------------------ # Step 1: Heatmap #------------------------------------------------------------------------------ library(dplyr) library(ComplexHeatmap) sample_info &lt;- data.table::fread(&quot;result/Figure4/4B_cluster_B.txt&quot;) %&gt;% as.data.frame() metabolite_norm = data.table::fread(&quot;result/Figure4/4B_metabolite_norm_B.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;V1&quot;) metgene_norm &lt;- data.table::fread(&quot;result/Figure4/4B_metgene_norm_B.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;V1&quot;) top_annotation = HeatmapAnnotation(Subtype=sample_info$Clusters, col=list(Subtype=c(&quot;BC1&quot;=&quot;#9BD53F&quot;,&quot;BC2&quot;=&quot;#A6CEE3&quot;,&quot;BC3&quot;=&quot;#EA644C&quot;)), show_annotation_name = c(T,T), border = c(T,T) , simple_anno_size = unit(4, &quot;mm&quot;),gap = unit(1, &quot;mm&quot;)) col_fun = circlize::colorRamp2(c(-1, 0, 1), c(&quot;#00599F&quot;, &quot;white&quot;, &quot;#D01910&quot;)) p_metabolite &lt;- Heatmap(t(metabolite_norm),height=unit(10,&quot;cm&quot;),name=&quot;Metabolite Data&quot;, cluster_row_slices = F,clustering_method_rows = &quot;ward.D&quot;, clustering_method_columns = &quot;ward.D2&quot;, column_split = sample_info$Clusters, col = col_fun, top_annotation =top_annotation, show_column_names = F,show_row_names = F, row_names_gp = gpar(fontsize = 3), column_names_gp = gpar(fontsize = 3)) col_fun = circlize::colorRamp2(c(-1, 0, 1), c(&quot;#00599F&quot;, &quot;white&quot;, &quot;#FF7F00&quot;)) p_gene &lt;- Heatmap(t(metgene_norm),height=unit(10,&quot;cm&quot;),name=&quot;Gene Data&quot;, cluster_row_slices = F,clustering_method_rows = &quot;ward.D&quot;, clustering_method_columns = &quot;ward.D2&quot;, column_split = sample_info$Clusters, col = col_fun, show_column_names = F,show_row_names = F, row_names_gp = gpar(fontsize = 3), column_names_gp = gpar(fontsize = 3)) pdf(paste0(&quot;result/Figure4/S5A_heatmap_B.pdf&quot;),width=8,height = 10) p_metabolite %v% p_gene dev.off() 19.10 (S5 E) Waterfall plot of BC1/2/3 The associations of metabolic clusters with clinical variables and genetic alterations, including major mutations and fusions in BCP-ALL. Note. Among all fusions, only BCR-ABL1 and TCF3-PBX1 are significantly enriched in BC1/2 and BC3, respectively. P-values were calculated by Pearson’s chi-square test or Fisher’s exact test. library(dplyr) library(ComplexHeatmap) #------------------------------------------------------------------------------- # Step 1: Load data and set parameters #------------------------------------------------------------------------------- dd &lt;- data.table::fread(&quot;raw_data/clinical_all_v231116.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::rename(&quot;Sex&quot;=&quot;Gender&quot;) %&gt;% dplyr::filter(group==&quot;A&quot;) %&gt;% dplyr::select(bianhao,Sex,Age,WBC,d28CR) %&gt;% dplyr::mutate(Age=ifelse(Age &lt; 40,&quot;&lt; 40&quot;,&quot;&gt;= 40&quot;)) %&gt;% unique() %&gt;% dplyr::mutate(d28CR=ifelse(d28CR %in% c(&quot;early death&quot;,&quot;NR&quot;,&quot;PR&quot;),&quot;non_CR&quot;,d28CR)) %&gt;% dplyr::rename(&quot;D28_status&quot;=&quot;d28CR&quot;) %&gt;% dplyr::mutate(WBC_type= ifelse(WBC&gt;30, &quot;&gt; 30&quot;, ifelse(WBC&lt;=30,&quot;&lt;= 30&quot;,NA))) clinical_survival &lt;- openxlsx::read.xlsx(&quot;raw_data/08 队列病人生存资料-240313.xlsx&quot;,sheet=&quot;A&quot;) %&gt;% dplyr::select(c(&quot;bianhao&quot;,&quot;OS_stat&quot;,&quot;ifHSCT&quot;)) %&gt;% dplyr::mutate(Outcome=ifelse(OS_stat==1,&quot;Dead&quot;, ifelse(OS_stat==0,&quot;Alive&quot;,OS_stat))) %&gt;% dplyr::inner_join(dd,by=&quot;bianhao&quot;) %&gt;% dplyr::mutate(ifHSCT=ifelse(ifHSCT==0,&quot;no&quot;, ifelse(ifHSCT==1,&quot;yes&quot;,ifHSCT))) %&gt;% unique() sample_info_raw &lt;- data.table::fread(&quot;raw_data/1.cluster_B.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(bianhao,Clusters) sample_info &lt;- data.table::fread(&quot;result/Figure4/4B_cluster_B.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(bianhao=gsub(&quot;RJ-&quot;,&quot;A&quot;,Pid)) %&gt;% dplyr::arrange(match(bianhao,sample_info_raw$bianhao)) %&gt;% dplyr::left_join(clinical_survival,by=&quot;bianhao&quot;) %&gt;% dplyr::select(-RNA_ID) %&gt;% dplyr::rename(&quot;RNA_id&quot;=&quot;RNA_id_raw&quot;) #------------------------------------------------------------------------------- # Step 2: Mutations #------------------------------------------------------------------------------- q12 &lt;- c(&quot;#1F78B4&quot;,&quot;#E31A1C&quot;,&quot;black&quot;) names(q12) &lt;- unique(sample_info$Clusters) top_annotation = HeatmapAnnotation( Subtype=sample_info$Clusters, Age=sample_info$Age, ifHSCT=sample_info$ifHSCT, WBC=sample_info$WBC_type, Outcome=sample_info$Outcome, col=list(Subtype=c(&quot;BC1&quot;=&quot;#9BD53F&quot;,&quot;BC2&quot;=&quot;#A6CEE3&quot;,&quot;BC3&quot;=&quot;#EA644C&quot;), Age=c(&quot;&lt; 40&quot;=&quot;#B2DF8A&quot;,&quot;&gt;= 40&quot;=&quot;gray&quot;), ifHSCT=c(&quot;yes&quot;=&quot;#CAB2D6&quot;,&quot;no&quot;=&quot;gray&quot;), WBC=c(&quot;&gt; 30&quot;=&quot;#FDBF6F&quot;,&quot;&lt;= 30&quot;=&quot;gray&quot;), Outcome=c(&quot;Dead&quot;=&quot;black&quot;,&quot;Alive&quot;=&quot;gray&quot;)), show_annotation_name = c(T,T), border = c(T,T,T,T,T,T) , simple_anno_size = unit(8, &quot;mm&quot;),gap = unit(1.5, &quot;mm&quot;)) mutation_B &lt;- data.table::fread(&quot;raw_data/mutation_B_v1114_all.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(V2,V17,V19) %&gt;% dplyr::rename(&quot;ID&quot;=&quot;V2&quot;,&quot;Gene.refGene&quot;=&quot;V17&quot;,&quot;ExonicFunc.refGene&quot;=&quot;V19&quot;) %&gt;% dplyr::select(ID,`Gene.refGene`,`ExonicFunc.refGene`) %&gt;% dplyr::mutate(`ExonicFunc.refGene`= ifelse(`ExonicFunc.refGene` %in% c(&quot;frameshift deletion&quot;,&quot;frameshift insertion&quot;,&quot;frameshift substitution&quot;),&quot;Frameshift&quot;, ifelse(`ExonicFunc.refGene` %in% c(&quot;nonframeshift deletion&quot;,&quot;nonframeshift insertion&quot;,&quot;nonframeshift substitution&quot;),&quot;Nonframeshift&quot;, ifelse(`ExonicFunc.refGene` %in% &quot;.&quot;,&quot;Splice&quot;, ifelse(`ExonicFunc.refGene` %in% &quot;nonsynonymous SNV&quot;,&quot;Missense&quot;, ifelse(`ExonicFunc.refGene`==&quot;startloss&quot;,&quot;Startloss&quot;, ifelse(`ExonicFunc.refGene`==&quot;stopgain&quot;,&quot;Stopgain&quot;, ifelse(`ExonicFunc.refGene`==&quot;synonymous SNV&quot;,&quot;Silent&quot;,`ExonicFunc.refGene`)))))))) %&gt;% unique() %&gt;% dplyr::filter(ID %in% sample_info$RNA_id) %&gt;% dplyr::mutate(`Gene.refGene` = ifelse(`Gene.refGene` %in% c(&quot;IDH1&quot;,&quot;IDH2&quot;),&quot;IDH1/2&quot;,`Gene.refGene`)) mutation &lt;- rbind(mutation_B) hit_num &lt;- mutation %&gt;% dplyr::group_by(ID,`Gene.refGene`) %&gt;% dplyr::summarise(n=n()) %&gt;% dplyr::filter(n&gt;1) mutation &lt;- mutation %&gt;% dplyr::left_join(hit_num,by=c(&quot;ID&quot;,&quot;Gene.refGene&quot;)) %&gt;% dplyr::mutate(`ExonicFunc.refGene`=ifelse(!is.na(n),&quot;Multiple&quot;,`ExonicFunc.refGene`)) %&gt;% dplyr::select(-n) %&gt;% unique() %&gt;% dplyr::rename(&quot;RNA_id&quot;=&quot;ID&quot;) %&gt;% dplyr::filter(RNA_id %in% sample_info$RNA_id) mutation_gene_filter &lt;- mutation %&gt;% dplyr::select(RNA_id,Gene.refGene) %&gt;% unique() %&gt;% dplyr::group_by(`Gene.refGene`) %&gt;% dplyr::summarise(n=n()) %&gt;% dplyr::filter(n&gt;0) mutation_sort &lt;- rev(names(sort(table(mutation %&gt;% filter(`Gene.refGene` %in% mutation_gene_filter$Gene.refGene) %&gt;% pull(Gene.refGene))))) mutation &lt;- mutation %&gt;% dplyr::filter(`Gene.refGene` %in% mutation_gene_filter$Gene.refGene) %&gt;% as.data.frame() %&gt;% dplyr::distinct(RNA_id,Gene.refGene,.keep_all = T) sample_info_filter &lt;- sample_info %&gt;% dplyr::select(bianhao,RNA_id) mutation_dcast &lt;- reshape2::dcast(mutation,RNA_id ~ `Gene.refGene`) %&gt;% dplyr::right_join(sample_info_filter,by=&quot;RNA_id&quot;) %&gt;% dplyr::select(-RNA_id) %&gt;% tibble::column_to_rownames(&quot;bianhao&quot;) %&gt;% dplyr::select(all_of(mutation_sort)) mutation_dcast[is.na(mutation_dcast)] &lt;- 0 mutation_dcast[mutation_dcast==&quot;Missense&quot;] &lt;- 1 mutation_dcast[mutation_dcast==&quot;Frameshift&quot;] &lt;- 2 mutation_dcast[mutation_dcast==&quot;Nonframeshift&quot;] &lt;- 3 mutation_dcast[mutation_dcast==&quot;Silent&quot;] &lt;- 4 mutation_dcast[mutation_dcast==&quot;Splice&quot;] &lt;- 5 mutation_dcast[mutation_dcast==&quot;Stopgain&quot;] &lt;- 7 mutation_dcast[mutation_dcast==&quot;Multiple&quot;] &lt;- 8 mutation_dcast1 &lt;- mutation_dcast %&gt;% dplyr::mutate_if(is.character,as.numeric) %&gt;% rowwise() %&gt;% dplyr::mutate(Signaling=sum(NRAS,KRAS,FLT3,STAT5B,NF1,MYC)) %&gt;% dplyr::mutate(Transcription=sum(PAX5,TP53,RUNX1,IKZF1,ETV6,MGA)) %&gt;% dplyr::mutate(Epigenetic=sum(KMT2D,SETD2,NCOR2,EP300,ARID1A,ARID1B,SETD1B,`IDH1/2`)) %&gt;% dplyr::mutate(Others=sum(SACS)) %&gt;% dplyr::mutate(Signaling=ifelse(Signaling==0,0,9)) %&gt;% dplyr::mutate(Transcription=ifelse(Transcription==0,0,9)) %&gt;% dplyr::mutate(Epigenetic=ifelse(Epigenetic==0,0,9)) %&gt;% dplyr::mutate(Others=ifelse(Others==0,0,9)) %&gt;% dplyr::select(NRAS,FLT3,STAT5B,NF1,KRAS,MYC,Signaling, PAX5,TP53,RUNX1,IKZF1,ETV6,MGA,Transcription, KMT2D,SETD2,NCOR2,EP300,ARID1A,ARID1B,SETD1B,`IDH1/2`,Epigenetic, SACS,Others) %&gt;% as.data.frame() rownames(mutation_dcast1) &lt;- rownames(mutation_dcast) mutation_dcast &lt;- mutation_dcast1 mutation_dcast_temp &lt;- mutation_dcast mutation_dcast_temp[mutation_dcast_temp!=0] &lt;- 1 num=colSums(mutation_dcast_temp) names(mutation_dcast) &lt;- paste0(names(mutation_dcast),&quot; (n=&quot;,num,&quot;)&quot;) d_mutation &lt;- t(mutation_dcast) %&gt;% as.data.frame() %&gt;% dplyr::select(sample_info$bianhao) mutation_annotation &lt;- Heatmap(d_mutation,height=unit(12,&quot;cm&quot;),rect_gp = gpar(col = &quot;gray&quot;, lwd = 2), col=c(&quot;#EEEEEE&quot;,&quot;#3987CC&quot;,&quot;#DB3D3D&quot;,&quot;#663FFB&quot;,&quot;#FF7F0E&quot;,&quot;#CC66FF&quot;,&quot;#8B564C&quot;,&quot;#339933&quot;,&quot;blue&quot;), cluster_columns = F,cluster_rows = F,border = TRUE,column_title = NULL, column_split =sample_info$Clusters, show_column_names = TRUE, top_annotation=top_annotation, row_names_gp = gpar(fontsize = 10),column_names_gp=gpar(fontsize=6)) #------------------------------------------------------------------------------- # Step 3: Fusions #------------------------------------------------------------------------------- fusion_B &lt;- readxl::read_excel(&quot;raw_data/fusion_B_v0803.xlsx&quot;,skip=1) %&gt;% as.data.frame() %&gt;% dplyr::filter(RNA_id %in% sample_info$RNA_id) %&gt;% dplyr::select(RNA_id,fusion_group) %&gt;% dplyr::mutate(fusion_group=ifelse(fusion_group %in% c(&quot;PAX5-ETV6&quot;,&quot;PAX5-CPLX1&quot;),&quot;PAX5 fusion&quot;, fusion_group)) %&gt;% dplyr::mutate(fusion_group=ifelse(fusion_group==&quot;BCR-ABL1;IKZF1-IGH&quot;,&quot;BCR-ABL1&quot;,fusion_group)) %&gt;% dplyr::left_join(sample_info,by=&quot;RNA_id&quot;) %&gt;% dplyr::filter(fusion_group %in% c(&quot;BCL2/MYC&quot;,&quot;BCR-ABL1&quot;,&quot;DUX4 rearrangement&quot;,&quot;ETV6-RUNX1&quot;,&quot;KMT2A rearrangement&quot;,&quot;PAX5 fusion&quot;,&quot;TCF3-PBX1&quot;,&quot;ZNF384 fusion&quot;)) %&gt;% dplyr::select(RNA_id,fusion_group) %&gt;% dplyr::filter(!is.na(fusion_group)) fusion &lt;- rbind(fusion_B) clinical_fusion_dcast &lt;- reshape2::dcast(fusion,RNA_id ~ fusion_group) %&gt;% dplyr::right_join(sample_info_filter,by=&quot;RNA_id&quot;) %&gt;% tibble::column_to_rownames(&quot;bianhao&quot;) %&gt;% dplyr::select(-RNA_id) clinical_fusion_dcast[is.na(clinical_fusion_dcast)] &lt;- 0 clinical_fusion_dcast[clinical_fusion_dcast != 0] &lt;- 1 d_fusion &lt;- t(clinical_fusion_dcast) %&gt;% as.data.frame() %&gt;% dplyr::select(sample_info$bianhao) %&gt;% tibble::rownames_to_column(var=&quot;fusion&quot;) %&gt;% dplyr::arrange(match(fusion,c(&quot;DUX4 rearrangement&quot;,&quot;ZNF384 fusion&quot;,&quot;TCF3-PBX1&quot;,&quot;KMT2A rearrangement&quot;,&quot;ETV6-RUNX1&quot;,&quot;PAX5-ETV6&quot;,&quot;PAX5 fusion&quot;,&quot;BCL2/MYC&quot;))) %&gt;% tibble::column_to_rownames(&quot;fusion&quot;) fusion_annotation &lt;- Heatmap(d_fusion,rect_gp = gpar(col = &quot;gray&quot;, lwd = 2), col=c(&quot;#EEEEEE&quot;,&quot;#444444&quot;), height=unit(4,&quot;cm&quot;),border = TRUE, column_split =sample_info$Clusters, cluster_columns = F,cluster_rows = F, column_title = NULL, row_names_gp = gpar(fontsize = 10), column_names_gp=gpar(fontsize=6)) pdf(paste0(&quot;result/Figure4/S5E_oncoplot_B.pdf&quot;),width=10,height = 10) mutation_annotation %v% fusion_annotation dev.off() if (FALSE){ a1=10 a2=9 dat &lt;- matrix(c(a1,54-a1,a2,21-a2),nrow=2) result &lt;- fisher.test(dat) result a1=4 a2=6 a3=7 dat &lt;- matrix(c(a1,21-a1,a2,33-a2,a3,21-a3),nrow=2) result &lt;- fisher.test(dat,alternative =&quot;greater&quot;) result a1=0 a2=4 a3=1 dat &lt;- matrix(c(a1,21-a1,a2,33-a2,a3,21-a3),nrow=2) fisher.test(dat) } 19.11 (S5 H) DA-score of BC3 cluster The DA-score reveals that most of the disturbed metabolism pathways are significantly enriched in the BC3 cluster. library(ggplot2) library(MNet) library(dplyr) #------------------------------------------------------------------------------ # Stpe 1: mlimma of BCP-ALL clusters #------------------------------------------------------------------------------ cluster &lt;- data.table::fread(&quot;result/Figure4/4B_cluster_B.txt&quot;) %&gt;% as.data.frame() dat &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% dplyr::select(label,all_of(cluster$METc_BM_D0_ID)) %&gt;% tibble::column_to_rownames(&quot;label&quot;) group &lt;- cluster$Clusters group[which(group %in% c(&quot;BC3&quot;))] &lt;- &quot;tumor&quot; group[which(group %in% c(&quot;BC1&quot;,&quot;BC2&quot;))] &lt;- &quot;normal&quot; table(group) metabolite_all &lt;- mlimma(log1p(dat),group) write.table(metabolite_all,&quot;result/Figure4/S5H_metabolite_B.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) cluster &lt;- data.table::fread(&quot;result/Figure4/4B_cluster_B.txt&quot;) %&gt;% as.data.frame() dat &lt;- readRDS(&quot;raw_data/20231113_RNA_ALL_VST_coding.rds&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(all_of(cluster$RNA_id_raw)) group &lt;- cluster$Clusters group[which(group %in% c(&quot;BC3&quot;))] &lt;- &quot;tumor&quot; group[which(group %in% c(&quot;BC1&quot;,&quot;BC2&quot;))] &lt;- &quot;normal&quot; table(group) gene_all &lt;- mlimma(dat,group) write.table(gene_all,&quot;result/Figure4/S5H_gene_B.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) #------------------------------------------------------------------------------ # Step 2: DA-score of metabolites #------------------------------------------------------------------------------ kegg_id &lt;- readxl::read_excel(&quot;raw_data/cell_metabolite_info_all_v1109.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(refmet_name,KEGG) %&gt;% tidyr::separate_rows(KEGG,sep=&quot;;&quot;) %&gt;% dplyr::filter(KEGG!=&quot;NA&quot;) %&gt;% dplyr::filter(KEGG != &quot;None&quot;) %&gt;% as.data.frame() dat &lt;- data.table::fread(&quot;result/Figure4/S5H_metabolite_B.txt&quot;) %&gt;% dplyr::arrange(desc(logFC)) %&gt;% dplyr::inner_join(kegg_id,by=c(&quot;name&quot;=&quot;refmet_name&quot;)) %&gt;% dplyr::distinct(KEGG,.keep_all = TRUE) dat_increase &lt;- dat %&gt;% dplyr::filter(logFC &gt; 0) %&gt;% dplyr::filter(P.Value &lt; 0.05) dat_decrease &lt;- dat %&gt;% dplyr::filter(logFC &lt; 0) %&gt;% dplyr::filter(P.Value &lt; 0.05) DA_result &lt;- ePDAlyser(dat_increase$KEGG,dat_decrease$KEGG,dat$KEGG,min_measured_num = 3,out=&quot;metabolite&quot;) write.table(DA_result$result,&quot;result/Figure4/S5H_DAscore_metabolite_B.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) #------------------------------------------------------------------------------ # Step 3: DA-score of genes #------------------------------------------------------------------------------ dat &lt;- data.table::fread(&quot;result/Figure4/S5H_gene_B.txt&quot;) dat_increase &lt;- dat %&gt;% dplyr::filter(logFC &gt; 0) %&gt;% dplyr::filter(P.Value &lt; 0.05) dat_decrease &lt;- dat %&gt;% dplyr::filter(logFC &lt; 0) %&gt;% dplyr::filter(P.Value &lt; 0.05) DA_result &lt;- ePDAlyser(dat_increase$name,dat_decrease$name,dat$name,min_measured_num = 10,out=&quot;gene&quot;) write.table(DA_result$result,&quot;result/Figure4/S5H_DAscore_gene_B.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) #------------------------------------------------------------------------------ # Step 4: DA-score of metabolites+genes #------------------------------------------------------------------------------ gene &lt;- data.table::fread(&quot;result/Figure4/S5H_DAscore_gene_B.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Measured_members_num &gt;= 10) %&gt;% dplyr::filter(abs(DA_score) &gt; 0.05) metabolite &lt;- data.table::fread(&quot;result/Figure4/S5H_DAscore_metabolite_B.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Measured_members_num &gt;= 3) %&gt;% dplyr::filter(DA_score != 0) all_1 &lt;- gene %&gt;% dplyr::inner_join(metabolite,by=&quot;Pathway&quot;) %&gt;% dplyr::filter(DA_score.x &gt;0 &amp; DA_score.y &gt;0) all_2 &lt;- gene %&gt;% dplyr::inner_join(metabolite,by=&quot;Pathway&quot;) %&gt;% dplyr::filter(DA_score.x &lt; 0 &amp; DA_score.y &lt; 0) path &lt;- c(all_1$Pathway,all_2$Pathway,&quot;Nicotinate and nicotinamide metabolism&quot;) metabolite_filter &lt;- metabolite %&gt;% dplyr::filter(Pathway %in% path) %&gt;% dplyr::filter(Measured_members_num &gt;= 3) %&gt;% dplyr::filter(abs(DA_score) &gt; 0.05) %&gt;% dplyr::arrange(`Pathway Category`) %&gt;% dplyr::mutate(Pathway=factor(Pathway,levels = Pathway)) colp &lt;- c(&quot;Amino acid metabolism&quot; =&quot;#1B9E77&quot;, &quot;Carbohydrate metabolism&quot;=&quot;#D95F02&quot;, &quot;Glycan biosynthesis and metabolism&quot;=&quot;#1F78B4&quot;, &quot;Metabolism of cofactors and vitamins&quot;=&quot;#7570B3&quot;, &quot;Metabolism of terpenoids and polyketides&quot;=&quot;#BC80BD&quot;, &quot;Metabolism of other amino acids&quot;=&quot;#8DD3C7&quot;, &quot;Energy metabolism&quot;=&quot;#E7298A&quot;, &quot;Lipid metabolism&quot;=&quot;#66A61E&quot;, &quot;Nucleotide metabolism&quot;=&quot;#E6AB02&quot;, &quot;Biosynthesis of other secondary metabolites&quot;=&quot;#A6761D&quot;, &quot;Xenobiotics biodegradation and metabolism&quot;=&quot;#666666&quot;) p &lt;- ggplot2::ggplot(metabolite_filter)+ ggplot2::geom_point(ggplot2::aes(x=Pathway,y=DA_score,size=log2(Measured_members_num),color=`Pathway Category`))+ ggplot2::geom_pointrange(ggplot2::aes(x=Pathway,y=DA_score,ymin=0,ymax=DA_score,color=`Pathway Category`))+ scale_color_manual(values=colp)+ ggplot2::coord_flip()+ ggplot2::xlab(NULL)+ ggplot2::theme_bw() ggsave(&quot;result/Figure4/S5H_DAscore_metabolite_B_filter.pdf&quot;,p,width=8,height = 5) 19.12 (S5 I-J) MSEA of BC1/2/3 I. GSEA unveils pathways significantly enriched in BC3, mirroring the findings of the metabolome analyses. J. GSEA unveils that cholesterol biosynthesis was significantly enriched in BC3. #------------------------------------------------------------------------------ # Step 1: KEGG citrate TCA cycle #------------------------------------------------------------------------------ library(dplyr) library(ggplot2) ## Load data and set parameters gene_all &lt;- data.table::fread(&quot;result/Figure4/S5H_gene_B.txt&quot;) %&gt;% as.data.frame() a &lt;- readLines(&quot;raw_data/tca.txt&quot;) gmt &lt;- strsplit(a, &quot;\\t&quot;) names(gmt) &lt;- vapply(gmt, function(y) y[1], character(1)) gmt1 &lt;- lapply(gmt, &quot;[&quot;, -c(1:2)) a_temp &lt;- gene_all$logFC names(a_temp) &lt;- gene_all$name Ranks_all &lt;- sort(a_temp,decreasing =TRUE) gseaParam = 0.5 minSize=5 ticksSize = 0.2 Ranks_all = sort(a_temp,decreasing =TRUE) fgseaRes_all &lt;- fgsea::fgsea(gmt1, sort(a_temp,decreasing =TRUE),minSize = minSize,nPermSimple=20000,gseaParam=0.5) pval &lt;- fgseaRes_all %&gt;% dplyr::pull(pval) %&gt;% round(3) nes &lt;- fgseaRes_all %&gt;% dplyr::pull(NES) %&gt;% round(3) pathway &lt;- gmt1[[1]] stats &lt;- Ranks_all rnk &lt;- rank(-stats) ord &lt;- order(rnk) statsAdj &lt;- stats[ord] statsAdj &lt;- sign(statsAdj) * (abs(statsAdj)^gseaParam) statsAdj &lt;- statsAdj/max(abs(statsAdj)) pathway &lt;- unname(as.vector(na.omit(match(pathway, names(statsAdj))))) pathway &lt;- sort(pathway) gseaRes &lt;- fgsea::calcGseaStat(statsAdj, selectedStats = pathway, returnAllExtremes = TRUE) bottoms &lt;- gseaRes$bottoms tops &lt;- gseaRes$tops n &lt;- length(statsAdj) xs &lt;- as.vector(rbind(pathway - 1, pathway)) ys &lt;- as.vector(rbind(bottoms, tops)) toPlot &lt;- data.frame(x = c(0, xs, n + 1), y = c(0, ys, 0)) diff &lt;- (max(tops) - min(bottoms))/8 x = y = NULL ## Visualization g1 &lt;- ggplot2::ggplot(toPlot, aes(x = x, y = y)) + ggplot2::geom_point(color = &quot;green&quot;, size = 0.1) + ggplot2::geom_hline(yintercept = 0, colour = &quot;gray&quot;) + geom_line(color = &quot;green&quot;) + ggplot2::geom_line(color = &quot;green&quot;) + theme_bw() + ggplot2::theme(panel.grid.minor = ggplot2::element_blank(), axis.text.x=ggplot2::element_blank(),axis.ticks.x=ggplot2::element_blank()) + ggplot2::labs(x = NULL, y = &quot;enrichment score&quot;,title=)+ ggplot2::scale_x_continuous(expand = c(0, 0),limits = c(0,length(statsAdj)+1))+ ggplot2::theme(plot.margin = unit(c(5,5,0,5), &quot;mm&quot;)) g2 &lt;- ggplot2::ggplot(toPlot, aes(x = x, y = y))+ ggplot2::geom_segment(data = data.frame(x = pathway), mapping = aes(x = x, y = -1, xend = x, yend = 1), size = ticksSize,color=&quot;red&quot;) + ggplot2::scale_x_continuous(expand = c(0, 0), limits = c(0,length(statsAdj)+1))+ theme_bw()+ ggplot2::theme(panel.grid = element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank(), axis.text.y=element_blank(),axis.ticks.y=element_blank())+ ggplot2::labs(x=NULL,y=NULL)+ ggplot2::theme(plot.margin = unit(c(0,5,0,5), &quot;mm&quot;)) dat &lt;- data.frame(name=1:length(statsAdj),value=statsAdj) g3 &lt;- ggplot2::ggplot(dat,aes(name,value))+ ggplot2::geom_bar(stat=&quot;identity&quot;,fill=&quot;gray&quot;)+ ggplot2::theme_bw()+ ggplot2::theme(panel.grid = element_blank())+ ggplot2::labs(x=NULL)+ ggplot2::scale_x_continuous(expand = c(0, 0),limits=c(0,length(statsAdj)+1))+ ggplot2::theme(plot.margin = unit(c(0,5,5,5), &quot;mm&quot;)) p1 &lt;- cowplot::plot_grid(plotlist = list(g1,g2,g3),nrow=3, rel_heights = c(1,0.2,0.5),scale=1, align =&quot;v&quot;,labels=paste0(&quot;TCA Cycle&quot;,&quot; pval=&quot;,pval,&quot;;NES=&quot;,nes),label_size = 8) ggsave(&quot;result/Figure4/S5I_GSEA_B_TCA.pdf&quot;,p1,width=4,height = 4) #------------------------------------------------------------------------------ # Step 2: Mitochondrial gene expression #------------------------------------------------------------------------------ library(dplyr) library(ggplot2) ## Load data and set parameters gene_all &lt;- data.table::fread(&quot;result/Figure4/S5H_gene_B.txt&quot;) %&gt;% as.data.frame() a &lt;- readLines(&quot;raw_data/MITOCHONDRIAL.txt&quot;) gmt &lt;- strsplit(a, &quot;\\t&quot;) names(gmt) &lt;- vapply(gmt, function(y) y[1], character(1)) gmt1 &lt;- lapply(gmt, &quot;[&quot;, -c(1:2)) a_temp &lt;- gene_all$logFC names(a_temp) &lt;- gene_all$name Ranks_all &lt;- sort(a_temp,decreasing =TRUE) gseaParam = 0.5 minSize=5 ticksSize = 0.2 Ranks_all = sort(a_temp,decreasing =TRUE) fgseaRes_all &lt;- fgsea::fgsea(gmt1, sort(a_temp,decreasing =TRUE),minSize = minSize,nPermSimple=20000,gseaParam=0.5) pval &lt;- fgseaRes_all %&gt;% dplyr::pull(pval) %&gt;% round(3) nes &lt;- fgseaRes_all %&gt;% dplyr::pull(NES) %&gt;% round(3) pathway &lt;- gmt1[[1]] stats &lt;- Ranks_all rnk &lt;- rank(-stats) ord &lt;- order(rnk) statsAdj &lt;- stats[ord] statsAdj &lt;- sign(statsAdj) * (abs(statsAdj)^gseaParam) statsAdj &lt;- statsAdj/max(abs(statsAdj)) pathway &lt;- unname(as.vector(na.omit(match(pathway, names(statsAdj))))) pathway &lt;- sort(pathway) gseaRes &lt;- fgsea::calcGseaStat(statsAdj, selectedStats = pathway, returnAllExtremes = TRUE) bottoms &lt;- gseaRes$bottoms tops &lt;- gseaRes$tops n &lt;- length(statsAdj) xs &lt;- as.vector(rbind(pathway - 1, pathway)) ys &lt;- as.vector(rbind(bottoms, tops)) toPlot &lt;- data.frame(x = c(0, xs, n + 1), y = c(0, ys, 0)) diff &lt;- (max(tops) - min(bottoms))/8 x = y = NULL ## Visualization g1 &lt;- ggplot2::ggplot(toPlot, aes(x = x, y = y)) + ggplot2::geom_point(color = &quot;green&quot;, size = 0.1) + ggplot2::geom_hline(yintercept = 0, colour = &quot;gray&quot;) + geom_line(color = &quot;green&quot;) + ggplot2::geom_line(color = &quot;green&quot;) + theme_bw() + ggplot2::theme(panel.grid.minor = ggplot2::element_blank(), axis.text.x=ggplot2::element_blank(),axis.ticks.x=ggplot2::element_blank()) + ggplot2::labs(x = NULL, y = &quot;enrichment score&quot;,title=)+ ggplot2::scale_x_continuous(expand = c(0, 0),limits = c(0,length(statsAdj)+1))+ ggplot2::theme(plot.margin = unit(c(5,5,0,5), &quot;mm&quot;)) g2 &lt;- ggplot2::ggplot(toPlot, aes(x = x, y = y))+ ggplot2::geom_segment(data = data.frame(x = pathway), mapping = aes(x = x, y = -1, xend = x, yend = 1), size = ticksSize,color=&quot;red&quot;) + ggplot2::scale_x_continuous(expand = c(0, 0),limits = c(0,length(statsAdj)+1))+theme_bw()+ ggplot2::theme(panel.grid = element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank(), axis.text.y=element_blank(),axis.ticks.y=element_blank())+ ggplot2::labs(x=NULL,y=NULL)+ ggplot2::theme(plot.margin = unit(c(0,5,0,5), &quot;mm&quot;)) dat &lt;- data.frame(name=1:length(statsAdj),value=statsAdj) g3 &lt;- ggplot2::ggplot(dat,aes(name,value))+ ggplot2::geom_bar(stat=&quot;identity&quot;,fill=&quot;gray&quot;)+ ggplot2::theme_bw()+ ggplot2::theme(panel.grid = element_blank())+ ggplot2::labs(x=NULL)+ ggplot2::scale_x_continuous(expand = c(0, 0),limits=c(0,length(statsAdj)+1))+ ggplot2::theme(plot.margin = unit(c(0,5,5,5), &quot;mm&quot;)) p1 &lt;- cowplot::plot_grid(plotlist = list(g1,g2,g3),nrow=3, rel_heights = c(1,0.2,0.5),scale=1, align =&quot;v&quot;,labels=paste0(&quot;MITOCHONDRIAL&quot;,&quot; pval=&quot;,pval,&quot;;NES=&quot;,nes),label_size = 8) ggsave(&quot;result/Figure4/S5I_GSEA_B_MITOCHONDRIAL.pdf&quot;,p1,width=4,height = 4) #------------------------------------------------------------------------------ # Step 3: Cholesterol biosynthesis pathway #------------------------------------------------------------------------------ library(dplyr) library(ggplot2) ## Load data and set parameters gene_all &lt;- data.table::fread(&quot;result/Figure4/S5H_gene_B.txt&quot;) %&gt;% as.data.frame() a &lt;- readLines(&quot;raw_data/Cholesterol.txt&quot;) gmt &lt;- strsplit(a, &quot;\\t&quot;) names(gmt) &lt;- vapply(gmt, function(y) y[1], character(1)) gmt1 &lt;- lapply(gmt, &quot;[&quot;, -c(1:2)) a_temp &lt;- gene_all$logFC names(a_temp) &lt;- gene_all$name Ranks_all &lt;- sort(a_temp,decreasing =TRUE) gseaParam = 0.5 minSize=5 ticksSize = 0.2 Ranks_all = sort(a_temp,decreasing =TRUE) fgseaRes_all &lt;- fgsea::fgsea(gmt1, sort(a_temp,decreasing =TRUE),minSize = minSize,nPermSimple=20000,gseaParam=0.5) pval &lt;- fgseaRes_all %&gt;% dplyr::pull(pval) %&gt;% round(3) nes &lt;- fgseaRes_all %&gt;% dplyr::pull(NES) %&gt;% round(3) pathway &lt;- gmt1[[1]] stats &lt;- Ranks_all rnk &lt;- rank(-stats) ord &lt;- order(rnk) statsAdj &lt;- stats[ord] statsAdj &lt;- sign(statsAdj) * (abs(statsAdj)^gseaParam) statsAdj &lt;- statsAdj/max(abs(statsAdj)) pathway &lt;- unname(as.vector(na.omit(match(pathway, names(statsAdj))))) pathway &lt;- sort(pathway) gseaRes &lt;- fgsea::calcGseaStat(statsAdj, selectedStats = pathway, returnAllExtremes = TRUE) bottoms &lt;- gseaRes$bottoms tops &lt;- gseaRes$tops n &lt;- length(statsAdj) xs &lt;- as.vector(rbind(pathway - 1, pathway)) ys &lt;- as.vector(rbind(bottoms, tops)) toPlot &lt;- data.frame(x = c(0, xs, n + 1), y = c(0, ys, 0)) diff &lt;- (max(tops) - min(bottoms))/8 x = y = NULL ## Visualization g1 &lt;- ggplot2::ggplot(toPlot, aes(x = x, y = y)) + ggplot2::geom_point(color = &quot;green&quot;, size = 0.1) + ggplot2::geom_hline(yintercept = 0, colour = &quot;gray&quot;) + geom_line(color = &quot;green&quot;) + ggplot2::geom_line(color = &quot;green&quot;) + theme_bw() + ggplot2::theme(panel.grid.minor = ggplot2::element_blank(), axis.text.x=ggplot2::element_blank(),axis.ticks.x=ggplot2::element_blank()) + ggplot2::labs(x = NULL, y = &quot;enrichment score&quot;,title=)+ ggplot2::scale_x_continuous(expand = c(0, 0),limits = c(0,length(statsAdj)+1))+ ggplot2::theme(plot.margin = unit(c(5,5,0,5), &quot;mm&quot;)) g2 &lt;- ggplot2::ggplot(toPlot, aes(x = x, y = y))+ ggplot2::geom_segment(data = data.frame(x = pathway), mapping = aes(x = x, y = -1, xend = x, yend = 1), size = ticksSize,color=&quot;red&quot;) + ggplot2::scale_x_continuous(expand = c(0, 0),limits = c(0,length(statsAdj)+1))+theme_bw()+ ggplot2::theme(panel.grid = element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank(), axis.text.y=element_blank(),axis.ticks.y=element_blank())+ ggplot2::labs(x=NULL,y=NULL)+ ggplot2::theme(plot.margin = unit(c(0,5,0,5), &quot;mm&quot;)) dat &lt;- data.frame(name=1:length(statsAdj),value=statsAdj) g3 &lt;- ggplot2::ggplot(dat,aes(name,value))+ ggplot2::geom_bar(stat=&quot;identity&quot;,fill=&quot;gray&quot;)+ ggplot2::theme_bw()+ ggplot2::theme(panel.grid = element_blank())+ ggplot2::labs(x=NULL)+ ggplot2::scale_x_continuous(expand = c(0, 0),limits=c(0,length(statsAdj)+1))+ ggplot2::theme(plot.margin = unit(c(0,5,5,5), &quot;mm&quot;)) p1 &lt;- cowplot::plot_grid(plotlist = list(g1,g2,g3),nrow=3, rel_heights = c(1,0.2,0.5),scale=1, align =&quot;v&quot;,labels=paste0(&quot;Cholesterol Biosynthesis&quot;,&quot; pval=&quot;,pval,&quot;;NES=&quot;,nes),label_size = 8) ggsave(&quot;result/Figure4/S5J_GSEA_B_Cholesterol.pdf&quot;,p1,width=4,height = 4) 19.13 (S6 A) Clusters of T-ALL The relative abundance of input metabolites and expression of metabolic genes in the two metabolic clusters: TC1 (N=10) and TC2 (N=14). Each column represents a sample and each row represents a metabolite (upper panel) or gene included (lower panel). library(dplyr) sample_info &lt;- data.table::fread(&quot;result/Figure4/4F_cluster_T.txt&quot;) %&gt;% as.data.frame() metabolite_norm = data.table::fread(&quot;result/Figure4/4F_metabolite_norm_T.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;V1&quot;) metgene_norm &lt;- data.table::fread(&quot;result/Figure4/4F_metgene_norm_T.txt&quot;) %&gt;% as.data.frame() %&gt;% tibble::column_to_rownames(&quot;V1&quot;) top_annotation = HeatmapAnnotation( Subtype=sample_info$Clusters, col=list(Subtype=c(&quot;TC1&quot;=&quot;#9BD53F&quot;,&quot;TC2&quot;=&quot;#A6CEE3&quot;)), show_annotation_name = c(T,T), border = c(T,T) , simple_anno_size = unit(4, &quot;mm&quot;),gap = unit(1, &quot;mm&quot;)) col_fun = circlize::colorRamp2(c(-1, 0, 1), c(&quot;#00599F&quot;, &quot;white&quot;, &quot;#D01910&quot;)) p_metabolite &lt;- Heatmap(t(metabolite_norm),height=unit(10,&quot;cm&quot;), name=&quot;Metabolite Data&quot;, cluster_row_slices = F,clustering_method_rows = &quot;ward.D&quot;, clustering_method_columns = &quot;ward.D2&quot;, column_split = sample_info$Clusters, col = col_fun, top_annotation =top_annotation, show_column_names = F,show_row_names = F, row_names_gp = gpar(fontsize = 3), column_names_gp = gpar(fontsize = 3)) col_fun = circlize::colorRamp2(c(-1, 0, 1), c(&quot;#00599F&quot;, &quot;white&quot;, &quot;#FF7F00&quot;)) p_gene &lt;- Heatmap(t(metgene_norm),height=unit(10,&quot;cm&quot;),name=&quot;Gene Data&quot;, cluster_row_slices = F,clustering_method_rows = &quot;ward.D&quot;, clustering_method_columns = &quot;ward.D2&quot;, column_split = sample_info$Clusters, col = col_fun, show_column_names = F,show_row_names = F, row_names_gp = gpar(fontsize = 3), column_names_gp = gpar(fontsize = 3)) pdf(paste0(&quot;result/Figure4/S6A_heatmap_T.pdf&quot;),width=8,height = 10) p_metabolite %v% p_gene dev.off() 19.14 (S6 E-F) RFS and EFS of TC1/2 The associations of the two metabolic clusters with clinical RFS (E) and EFS (F) outcomes in T-ALL patients (P-value from log rank test). The results suggest TC1 may be of significantly poorer prognosis than TC2. library(dplyr) library(survival) #------------------------------------------------------------------------------ # Step 1: RFS of TC1/2 #------------------------------------------------------------------------------ clinical_survival &lt;- data.table::fread(paste0(&quot;result/Figure4/4F_cluster_T.txt&quot;)) %&gt;% as.data.frame() surv_object &lt;- Surv(time = clinical_survival$RFS/30, event = clinical_survival$RFS_stat) fit_cluster &lt;- survfit(surv_object ~ Clusters, data = clinical_survival) p1 &lt;- survminer::ggsurvplot(fit_cluster, data = clinical_survival, title=&quot;RFS&quot;, palette=c(&quot;#9BD53F&quot;,&quot;#A6CEE3&quot;,&quot;#EA644C&quot;), tables.theme = theme_void(),risk.table = TRUE, risk.table.fontsize=6, break.time.by = 12, risk.table.y.text = FALSE, tables.height = 0.15,risk.table.col = &quot;black&quot;, pval = TRUE,pval.method = F,pval.coord=c(0.5,0.1),pval.size=6, font.tickslab=c(14,&quot;plain&quot;,&quot;black&quot;), xlab=&quot;Time (Months) &quot;,ylab=&quot;RFS Survival&quot;) pdf(paste0(&quot;result/Figure4/S6E_RFS_T.pdf&quot;),onefile=FALSE) p1 dev.off() #------------------------------------------------------------------------------ # Step 2: EFS #------------------------------------------------------------------------------ clinical_survival &lt;- data.table::fread(paste0(&quot;result/Figure4/4F_cluster_T.txt&quot;)) %&gt;% as.data.frame() surv_object &lt;- Surv(time = clinical_survival$EFS/30, event = clinical_survival$EFS_stat) fit_cluster &lt;- survfit(surv_object ~ Clusters, data = clinical_survival) p1 &lt;- survminer::ggsurvplot(fit_cluster, data = clinical_survival, title=&quot;EFS&quot;, palette=c(&quot;#9BD53F&quot;,&quot;#A6CEE3&quot;,&quot;#EA644C&quot;), tables.theme = theme_void(),risk.table = TRUE, risk.table.fontsize=6, break.time.by = 12, risk.table.y.text = FALSE, tables.height = 0.15,risk.table.col = &quot;black&quot;, pval = TRUE,pval.method = F,pval.coord=c(0.5,0.1),pval.size=6, font.tickslab=c(14,&quot;plain&quot;,&quot;black&quot;), xlab=&quot;Time (Months) &quot;,ylab=&quot;EFS Survival&quot;) pdf(paste0(&quot;result/Figure4/S6F_EFS_T.pdf&quot;),onefile=FALSE) p1 dev.off() 19.15 (S6 H) Multivariate Cox Analysis of TC1/2 The multivariate cox analysis suggests that TC1 may represent an unfavorable group independent of HSCT status. The WBC is stratified by 100*109/L, genetic risk has been evaluated according to the NCCN guideline (Version 2.2023) that is RAS signaling, PTEN and NOTCH1/FBXW7. RAS/PTEN mutation and/or NOTCH1/FBXW7 wildtype are considered as high risk, otherwise low. library(dplyr) library(openxlsx) library(survival) library(survminer) #------------------------------------------------------------------------------ # Step 1: Load data and set parameters #------------------------------------------------------------------------------ M_label &lt;- data.table::fread(&quot;result/Figure4/4F_cluster_T.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(Clusters=as.factor(Clusters)) %&gt;% dplyr::select(Clusters,Pid) ras &lt;- data.table::fread(&quot;raw_data/RAS.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(name=stringr::str_to_upper(name)) mut &lt;- readxl::read_excel(&quot;raw_data/Sample_RNA_190_fusion_mutation_v1130.xlsx&quot;) %&gt;% dplyr::select(mutation,RNA_id,bianhao) %&gt;% tidyr::separate_rows(mutation,sep=&quot;;&quot;) %&gt;% dplyr::mutate(mutation=stringr::str_to_upper(mutation)) %&gt;% dplyr::mutate(ras=ifelse(mutation %in% ras$name,&quot;yes&quot;,&quot;no&quot;)) %&gt;% dplyr::group_by(RNA_id,bianhao) %&gt;% dplyr::summarise(Ras1=paste(ras,collapse = &quot;;&quot;),mutation1=paste(mutation,collapse = &quot;;&quot;)) %&gt;% dplyr::mutate(ras_new=ifelse(grepl(&quot;yes&quot;,Ras1),&quot;yes&quot;,&quot;no&quot;)) genetic &lt;- read.xlsx(&quot;raw_data/Sample_RNA_190_fusion_mutation_v1130.xlsx&quot;) %&gt;% dplyr::select(bianhao,fusion,mutation) %&gt;% inner_join(mut,by=&quot;bianhao&quot;) names(genetic) T_gene &lt;- genetic %&gt;% dplyr::select(mutation,bianhao,ras_new) %&gt;% dplyr::mutate(RAS_PTEN=ifelse(ras_new==&quot;yes&quot;,&quot;MUT&quot;, ifelse(grepl(&quot;PTEN&quot;,mutation),&quot;MUT&quot;,&quot;WT&quot;))) %&gt;% dplyr::mutate(NOTCH1_FBXW7=ifelse(grepl(&quot;NOTCH1&quot;,mutation),&quot;MUT&quot;, ifelse(grepl(&quot;FBXW7&quot;,mutation),&quot;MUT&quot;, &quot;WT&quot;))) %&gt;% dplyr::mutate(risk=ifelse(RAS_PTEN==&quot;WT&quot;&amp; NOTCH1_FBXW7==&quot;MUT&quot;,&quot;Low&quot;,&quot;High&quot;)) %&gt;% dplyr::select(bianhao,risk) %&gt;% dplyr::mutate(Pid=gsub(&quot;A&quot;,&quot;RJ-&quot;,bianhao)) clinical_survival &lt;- readxl::read_excel(&quot;raw_data/sample_clinical_201_info.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::rename(&quot;Sex&quot;=&quot;Gender&quot;) %&gt;% dplyr::select(Pid,RNA_id_raw,Age,Sex,WBC,d28CR,ifHSCT,OS,OS_stat,EFS,EFS_stat,RFS,RFS_stat) %&gt;% dplyr::mutate(d28CR=ifelse(d28CR %in% c(&quot;early death&quot;,&quot;NR&quot;,&quot;PR&quot;),&quot;non_CR&quot;,d28CR)) %&gt;% dplyr::rename(&quot;D28_status&quot;=&quot;d28CR&quot;) %&gt;% dplyr::inner_join(M_label,by=&quot;Pid&quot;) %&gt;% dplyr::mutate(WBC_type= ifelse(WBC &gt; 100, &quot;High&quot;, ifelse(WBC &lt;= 100,&quot;Low&quot;,WBC))) %&gt;% dplyr::mutate(ifHSCT=as.factor(ifHSCT)) %&gt;% dplyr::mutate(Age=ifelse(Age&gt;40,&quot;old&quot;,&quot;young&quot;)) %&gt;% dplyr::mutate(Age=factor(Age,levels=c(&quot;young&quot;,&quot;old&quot;))) %&gt;% dplyr::mutate(Clusters=factor(Clusters)) %&gt;% unique() %&gt;% dplyr::left_join(T_gene,by=&quot;Pid&quot;) %&gt;% dplyr::mutate(Clusters=factor(Clusters,levels=c(&quot;TC2&quot;,&quot;TC1&quot;))) %&gt;% dplyr::mutate(WBC_type=factor(WBC_type,levels=c(&quot;Low&quot;,&quot;High&quot;))) var.names &lt;- c(&quot;Clusters&quot;,&quot;WBC_type&quot;,&quot;risk&quot;,&quot;D28_status&quot;,&quot;ifHSCT&quot;) #------------------------------------------------------------------------------- # Step 2: EFS of T-ALL #------------------------------------------------------------------------------- f_efs &lt;- as.formula(paste(&#39;Surv(EFS, EFS_stat)~&#39;,paste(var.names,collapse = &quot;+&quot;))) fit.final &lt;- coxph(f_efs,data=clinical_survival) p_efs &lt;- ggforest(fit.final,main=&quot;EFS Hzard Ratio&quot;,cpositions=c(0.02,0.22,0.4),fontsize=0.8, refLabel=&quot;reference&quot;,noDigits=2,data=clinical_survival) #------------------------------------------------------------------------------- # Step 3: OS of T-ALL #------------------------------------------------------------------------------- f_os &lt;- as.formula(paste(&#39;Surv(OS, OS_stat)~&#39;,paste(var.names,collapse = &quot;+&quot;))) fit.os &lt;- coxph(f_os,data=clinical_survival) p_os &lt;- ggforest(fit.os,main=&quot;OS Hzard Ratio&quot;,cpositions=c(0.02,0.22,0.4),fontsize=0.8, refLabel=&quot;reference&quot;,noDigits=2,data=clinical_survival) ggsave(p_efs,filename = &quot;result/Figure4/S6H_HR_EFS_T.pdf&quot;,width=8,height=4) ggsave(p_os,filename = &quot;result/Figure4/S6H_HR_OS_T.pdf&quot;,width=8,height=4) 19.16 (S6 I) Heatmap of TC1/2 The associations of metabolic clusters with clinical variables and genetic alterations, including major mutations and fusions in T-ALL. library(dplyr) library(ComplexHeatmap) #------------------------------------------------------------------------------- # Step 1: Load data and set parameters #------------------------------------------------------------------------------- dd &lt;- data.table::fread(&quot;raw_data/clinical_all_v231116.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::rename(&quot;Sex&quot;=&quot;Gender&quot;) %&gt;% dplyr::filter(group==&quot;A&quot;) %&gt;% dplyr::select(bianhao,Sex,Age,WBC,d28CR) %&gt;% dplyr::mutate(Age=ifelse(Age &lt; 40,&quot;&lt; 40&quot;,&quot;&gt;= 40&quot;)) %&gt;% unique() %&gt;% dplyr::mutate(d28CR=ifelse(d28CR %in% c(&quot;early death&quot;,&quot;NR&quot;,&quot;PR&quot;),&quot;non_CR&quot;,d28CR)) %&gt;% dplyr::rename(&quot;D28_status&quot;=&quot;d28CR&quot;) %&gt;% dplyr::mutate(WBC_type= ifelse(WBC &gt; 100, &quot;&gt; 100&quot;, ifelse(WBC &lt;= 100,&quot;&lt;= 100&quot;,NA))) clinical_survival &lt;- openxlsx::read.xlsx(&quot;raw_data/08 队列病人生存资料-240313.xlsx&quot;,sheet=&quot;A&quot;) %&gt;% dplyr::select(c(&quot;bianhao&quot;,&quot;OS_stat&quot;,&quot;ifHSCT&quot;)) %&gt;% dplyr::mutate(Outcome=ifelse(OS_stat==1,&quot;Dead&quot;, ifelse(OS_stat==0,&quot;Alive&quot;,OS_stat))) %&gt;% dplyr::inner_join(dd,by=&quot;bianhao&quot;) %&gt;% dplyr::mutate(ifHSCT=ifelse(ifHSCT==0,&quot;no&quot;, ifelse(ifHSCT==1,&quot;yes&quot;,ifHSCT))) %&gt;% unique() sample_info &lt;- data.table::fread(&quot;result/Figure4/4F_cluster_T.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::mutate(bianhao=gsub(&quot;RJ-&quot;,&quot;A&quot;,Pid)) %&gt;% dplyr::left_join(clinical_survival,by=&quot;bianhao&quot;) q12 &lt;- c(&quot;#1F78B4&quot;,&quot;#E31A1C&quot;,&quot;black&quot;) names(q12) &lt;- unique(sample_info$Clusters) top_annotation = HeatmapAnnotation( Subtype=sample_info$Clusters, Lineage=sample_info$Subtype, ifHSCT=sample_info$ifHSCT.y, WBC=sample_info$WBC_type, Outcome=sample_info$Outcome, col=list(Subtype=c(&quot;TC1&quot;=&quot;#9BD53F&quot;,&quot;TC2&quot;=&quot;#A6CEE3&quot;), Lineage=c(&quot;ETP&quot;=&quot;#F9EE35&quot;,&quot;non_ETP&quot;=&quot;#E7317C&quot;), ifHSCT=c(&quot;yes&quot;=&quot;#CAB2D6&quot;,&quot;no&quot;=&quot;gray&quot;), WBC=c(&quot;&gt; 100&quot;=&quot;#FDBF6F&quot;,&quot;&lt;= 100&quot;=&quot;gray&quot;), Outcome=c(&quot;Dead&quot;=&quot;black&quot;,&quot;Alive&quot;=&quot;gray&quot;) ), show_annotation_name = c(T,T), border = c(T,T,T,T,T,T) , simple_anno_size = unit(8, &quot;mm&quot;),gap = unit(1.5, &quot;mm&quot;) ) #------------------------------------------------------------------------------- # Step 2: Mutations of T-ALL #------------------------------------------------------------------------------- mutation_T &lt;- data.table::fread(&quot;raw_data/mutation_T_v1114_all.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(V2,V17,V19) %&gt;% dplyr::rename(&quot;ID&quot;=&quot;V2&quot;,&quot;Gene.refGene&quot;=&quot;V17&quot;,&quot;ExonicFunc.refGene&quot;=&quot;V19&quot;) %&gt;% dplyr::select(ID,`Gene.refGene`,`ExonicFunc.refGene`) %&gt;% dplyr::mutate(`ExonicFunc.refGene`= ifelse(`ExonicFunc.refGene` %in% c(&quot;frameshift deletion&quot;,&quot;frameshift insertion&quot;,&quot;frameshift substitution&quot;),&quot;Frameshift&quot;, ifelse(`ExonicFunc.refGene` %in% c(&quot;nonframeshift deletion&quot;,&quot;nonframeshift insertion&quot;,&quot;nonframeshift substitution&quot;),&quot;Nonframeshift&quot;, ifelse(`ExonicFunc.refGene` %in% &quot;.&quot;,&quot;Splice&quot;, ifelse(`ExonicFunc.refGene` %in% &quot;nonsynonymous SNV&quot;,&quot;Missense&quot;, ifelse(`ExonicFunc.refGene`==&quot;startloss&quot;,&quot;Startloss&quot;, ifelse(`ExonicFunc.refGene`==&quot;stopgain&quot;,&quot;Stopgain&quot;, ifelse(`ExonicFunc.refGene`==&quot;synonymous SNV&quot;,&quot;Silent&quot;,`ExonicFunc.refGene`)))))))) %&gt;% unique() %&gt;% dplyr::filter(ID %in% sample_info$RNA_id_raw) %&gt;% dplyr::mutate(`Gene.refGene` = ifelse(`Gene.refGene` %in% c(&quot;IDH1&quot;,&quot;IDH2&quot;),&quot;IDH1/2&quot;,`Gene.refGene`)) mutation &lt;- rbind(mutation_T) hit_num &lt;- mutation %&gt;% dplyr::group_by(ID,`Gene.refGene`) %&gt;% dplyr::summarise(n=n()) %&gt;% dplyr::filter(n&gt;1) mutation &lt;- mutation %&gt;% dplyr::left_join(hit_num,by=c(&quot;ID&quot;,&quot;Gene.refGene&quot;)) %&gt;% dplyr::mutate(`ExonicFunc.refGene`=ifelse(!is.na(n),&quot;Multiple&quot;,`ExonicFunc.refGene`)) %&gt;% dplyr::select(-n) %&gt;% unique() %&gt;% dplyr::rename(&quot;RNA_id&quot;=&quot;ID&quot;) %&gt;% dplyr::filter(RNA_id %in% sample_info$RNA_id_raw) mutation_gene_filter &lt;- mutation %&gt;% dplyr::select(RNA_id,Gene.refGene) %&gt;% unique() %&gt;% dplyr::group_by(`Gene.refGene`) %&gt;% dplyr::summarise(n=n()) %&gt;% dplyr::filter(n&gt;0) mutation_sort &lt;- rev(names(sort(table(mutation %&gt;% filter(`Gene.refGene` %in% mutation_gene_filter$Gene.refGene) %&gt;% pull(Gene.refGene))))) mutation &lt;- mutation %&gt;% dplyr::filter(`Gene.refGene` %in% mutation_gene_filter$Gene.refGene) %&gt;% as.data.frame() %&gt;% dplyr::distinct(RNA_id,Gene.refGene,.keep_all = T) sample_info_filter &lt;- sample_info %&gt;% dplyr::select(bianhao,RNA_id_raw) mutation_dcast &lt;- reshape2::dcast(mutation,RNA_id ~ `Gene.refGene`) %&gt;% dplyr::right_join(sample_info_filter,by=c(&quot;RNA_id&quot;=&quot;RNA_id_raw&quot;)) %&gt;% dplyr::select(-RNA_id) %&gt;% tibble::column_to_rownames(&quot;bianhao&quot;) %&gt;% dplyr::select(all_of(mutation_sort)) mutation_dcast[is.na(mutation_dcast)] &lt;- 0 mutation_dcast[mutation_dcast==&quot;Missense&quot;] &lt;- 1 mutation_dcast[mutation_dcast==&quot;Frameshift&quot;] &lt;- 2 mutation_dcast[mutation_dcast==&quot;Nonframeshift&quot;] &lt;- 3 mutation_dcast[mutation_dcast==&quot;Silent&quot;] &lt;- 4 mutation_dcast[mutation_dcast==&quot;Splice&quot;] &lt;- 5 mutation_dcast[mutation_dcast==&quot;Stopgain&quot;] &lt;- 7 mutation_dcast[mutation_dcast==&quot;Multiple&quot;] &lt;- 8 mutation_dcast1 &lt;- mutation_dcast %&gt;% dplyr::mutate_if(is.character,as.numeric) %&gt;% rowwise() %&gt;% dplyr::mutate(NOTCH=sum(NOTCH1)) %&gt;% dplyr::mutate(PHF=sum(PTEN,PHF6)) %&gt;% dplyr::mutate(RAS=sum(JAK3,JAK1,STAT5A,MTOR,NRAS,KRAS,TCF7,TCF7)) %&gt;% dplyr::mutate(Transcript=sum(MED12,RUNX1,ETV6,CNOT3,MED12,GATA3,BCOR)) %&gt;% dplyr::mutate(Epigenetic=sum(`IDH1/2`,DNMT3A,KMT2E,SUZ12,SETD1B,SETD2,NCOR2, EP300,KDM6A)) %&gt;% dplyr::mutate(Others=sum(CCND3,CTCF,BOD1L1,CCND3,SATB1,OBSCN,DNM2,CIC)) %&gt;% dplyr::mutate(NOTCH=ifelse(NOTCH==0,0,9)) %&gt;% dplyr::mutate(PHF=ifelse(PHF==0,0,9)) %&gt;% dplyr::mutate(RAS=ifelse(RAS==0,0,9)) %&gt;% dplyr::mutate(Transcript=ifelse(Transcript==0,0,9)) %&gt;% dplyr::mutate(Epigenetic=ifelse(Epigenetic==0,0,9)) %&gt;% dplyr::mutate(Others=ifelse(Others==0,0,9)) %&gt;% dplyr::select(NOTCH1,NOTCH, PHF6,PTEN,PHF, JAK3,JAK1,MTOR,NRAS,KRAS,TCF7,TCF7,STAT5A,RAS, ETV6,RUNX1,MED12,CNOT3,MED12,GATA3,BCOR,Transcript, DNMT3A,SUZ12,SETD1B,`IDH1/2`,KMT2E,NCOR2,EP300,KDM6A, Epigenetic, CTCF,CCND3,CCND3,SATB1,OBSCN,DNM2,CIC,BOD1L1,Others) %&gt;% as.data.frame() rownames(mutation_dcast1) &lt;- rownames(mutation_dcast) mutation_dcast &lt;- mutation_dcast1 mutation_dcast_temp &lt;- mutation_dcast mutation_dcast_temp[mutation_dcast_temp!=0] &lt;- 1 num=colSums(mutation_dcast_temp) names(mutation_dcast) &lt;- paste0(names(mutation_dcast),&quot; (n=&quot;,num,&quot;)&quot;) d_mutation &lt;- t(mutation_dcast) %&gt;% as.data.frame() %&gt;% dplyr::select(sample_info$bianhao) mutation_annotation &lt;- Heatmap(d_mutation,height=unit(15,&quot;cm&quot;),rect_gp = gpar(col = &quot;gray&quot;, lwd = 2), col=c(&quot;#EEEEEE&quot;,&quot;#3987CC&quot;,&quot;#DB3D3D&quot;,&quot;#663FFB&quot;,&quot;#FF7F0E&quot;,&quot;#CC66FF&quot;,&quot;#8B564C&quot;,&quot;#339933&quot;,&quot;blue&quot;), cluster_columns = F,cluster_rows = F,border = TRUE,column_title = NULL, column_split =sample_info$Clusters, show_column_names = TRUE, top_annotation=top_annotation, row_names_gp = gpar(fontsize = 8),column_names_gp=gpar(fontsize=6)) #------------------------------------------------------------------------------- # Step 3: Fusions of T-ALL #------------------------------------------------------------------------------- fusion_T &lt;- readxl::read_excel(&quot;raw_data/fusion_T_v0803.xlsx&quot;,skip=1) %&gt;% as.data.frame() %&gt;% dplyr::filter(RNA_id %in% sample_info$RNA_id_raw) %&gt;% dplyr::select(RNA_id,final_check) %&gt;% dplyr::left_join(sample_info,by=c(&quot;RNA_id&quot;=&quot;RNA_id_raw&quot;)) %&gt;% dplyr::select(RNA_id,final_check) %&gt;% dplyr::filter(!is.na(final_check)) fusion &lt;- rbind(fusion_T) clinical_fusion_dcast &lt;- reshape2::dcast(fusion,RNA_id ~ final_check) %&gt;% dplyr::right_join(sample_info_filter,by=c(&quot;RNA_id&quot;=&quot;RNA_id_raw&quot;)) %&gt;% tibble::column_to_rownames(&quot;bianhao&quot;) %&gt;% dplyr::select(-RNA_id) clinical_fusion_dcast[is.na(clinical_fusion_dcast)] &lt;- 0 clinical_fusion_dcast[clinical_fusion_dcast != 0] &lt;- 1 d_fusion &lt;- t(clinical_fusion_dcast) %&gt;% as.data.frame() %&gt;% dplyr::select(sample_info$bianhao) %&gt;% tibble::rownames_to_column(var=&quot;fusion&quot;) %&gt;% dplyr::arrange(match(fusion,c(&quot;SET-NUP214&quot;,&quot;MLLT10 rearrangement&quot;,&quot;NUP98&quot;,&quot;STIL-TAL1&quot;, &quot;KMT2A rearrangement&quot;,&quot;other&quot;))) %&gt;% tibble::column_to_rownames(&quot;fusion&quot;) fusion_annotation &lt;- Heatmap(d_fusion,rect_gp = gpar(col = &quot;gray&quot;, lwd = 2), col=c(&quot;#EEEEEE&quot;,&quot;#444444&quot;), height=unit(2,&quot;cm&quot;),border = TRUE, column_split =sample_info$Clusters, cluster_columns = F,cluster_rows = F,column_title = NULL, row_names_gp = gpar(fontsize = 8),column_names_gp=gpar(fontsize=6)) #------------------------------------------------------------------------------- # Step 4: Visualization #------------------------------------------------------------------------------- pdf(paste0(&quot;result/Figure4/S6I_oncoplot_T.pdf&quot;),width=7,height = 10) mutation_annotation %v% fusion_annotation dev.off() if (FALSE){ a1=10 a2=2 dat &lt;- matrix(c(a1,23-a1,a2,16-a2),nrow=2) result &lt;- fisher.test(dat,alternative =&quot;greater&quot;) result } 19.17 (S6 J) DA score of TC1/2 DA-score demonstrates that most of the metabolic pathways are upregulated in the relatively favorable TC2 cluster. library(ggplot2) library(MNet) library(dplyr) #------------------------------------------------------------------------------ # Step 1: DA-score of gene_T #------------------------------------------------------------------------------ cluster &lt;- data.table::fread(&quot;result/Figure4/4F_cluster_T.txt&quot;) %&gt;% as.data.frame() dat &lt;- data.table::fread(&quot;raw_data/cell_dat_final_reuslt_v0329.txt&quot;) %&gt;% dplyr::select(label,all_of(cluster$METc_BM_D0_ID)) %&gt;% tibble::column_to_rownames(&quot;label&quot;) group &lt;- cluster$Clusters table(group) group[which(group== &quot;TC1&quot;)] &lt;- &quot;tumor&quot; group[which(group== &quot;TC2&quot;)] &lt;- &quot;normal&quot; metabolite_all &lt;- mlimma(log1p(dat),group) write.table(metabolite_all,&quot;result/Figure4/S6J_metabolite_T.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) dd &lt;- metabolite_all %&gt;% dplyr::mutate(Condition=ifelse(logFC&gt;0 &amp; P.Value &lt; 0.05,&quot;Up&quot;, ifelse(logFC &lt; -0 &amp; P.Value &lt; 0.05,&quot;Down&quot;,&quot;normal&quot;))) cluster &lt;- data.table::fread(&quot;result/Figure4/4F_cluster_T.txt&quot;) %&gt;% as.data.frame() dat &lt;- readRDS(&quot;raw_data/20231113_RNA_ALL_VST_coding.rds&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(all_of(cluster$RNA_id_raw)) group &lt;- cluster$Clusters group[which(group== &quot;TC1&quot;)] &lt;- &quot;tumor&quot; group[which(group== &quot;TC2&quot;)] &lt;- &quot;normal&quot; gene_all &lt;- mlimma(dat,group) write.table(gene_all,&quot;result/Figure4/S6J_gene_T.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) dat &lt;- data.table::fread(&quot;result/Figure4/S6J_gene_T.txt&quot;) dat_increase &lt;- dat %&gt;% dplyr::filter(logFC &gt; 0) %&gt;% dplyr::filter(P.Value &lt; 0.05) dat_decrease &lt;- dat %&gt;% dplyr::filter(logFC &lt; 0) %&gt;% dplyr::filter(P.Value &lt; 0.05) DA_result &lt;- ePDAlyser(dat_increase$name,dat_decrease$name,dat$name,min_measured_num = 10,out=&quot;gene&quot;) write.table(DA_result$result,&quot;result/Figure4/S6J_DAscore_gene_T.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) #------------------------------------------------------------------------------ # Step 2: DA-score of metabolite_T #------------------------------------------------------------------------------ kegg_id &lt;- readxl::read_excel(&quot;raw_data/cell_metabolite_info_all_v1109.xlsx&quot;) %&gt;% as.data.frame() %&gt;% dplyr::select(refmet_name,KEGG) %&gt;% tidyr::separate_rows(KEGG,sep=&quot;;&quot;) %&gt;% dplyr::filter(KEGG!=&quot;NA&quot;) %&gt;% dplyr::filter(KEGG != &quot;None&quot;) %&gt;% as.data.frame() dat &lt;- data.table::fread(&quot;result/Figure4/S6J_metabolite_T.txt&quot;) %&gt;% dplyr::arrange(desc(logFC)) %&gt;% dplyr::inner_join(kegg_id,by=c(&quot;name&quot;=&quot;refmet_name&quot;)) %&gt;% dplyr::distinct(KEGG,.keep_all = TRUE) dat_increase &lt;- dat %&gt;% dplyr::filter(logFC &gt; 0) %&gt;% dplyr::filter(P.Value &lt; 0.05) dat_decrease &lt;- dat %&gt;% dplyr::filter(logFC &lt; 0) %&gt;% dplyr::filter(P.Value &lt; 0.05) DA_result &lt;- ePDAlyser(dat_increase$KEGG,dat_decrease$KEGG,dat$KEGG,min_measured_num = 3,out=&quot;metabolite&quot;) write.table(DA_result$result,&quot;result/Figure4/S6J_DAscore_metabolite_T.txt&quot;,quote=F,row.names=F,sep=&quot;\\t&quot;) #------------------------------------------------------------------------------ # Step 3: DA-score of gene+metabolite_T #------------------------------------------------------------------------------ gene &lt;- data.table::fread(&quot;result/Figure4/S6J_DAscore_gene_T.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Measured_members_num &gt;= 10) %&gt;% dplyr::filter(abs(DA_score) &gt; 0.05) metabolite &lt;- data.table::fread(&quot;result/Figure4/S6J_DAscore_metabolite_T.txt&quot;) %&gt;% as.data.frame() %&gt;% dplyr::filter(Measured_members_num &gt;= 3) %&gt;% dplyr::filter(DA_score != 0) all_1 &lt;- gene %&gt;% dplyr::inner_join(metabolite,by=&quot;Pathway&quot;) %&gt;% dplyr::filter(DA_score.x &gt;0 &amp; DA_score.y &gt;0) all_2 &lt;- gene %&gt;% dplyr::inner_join(metabolite,by=&quot;Pathway&quot;) %&gt;% dplyr::filter(DA_score.x &lt; 0 &amp; DA_score.y &lt; 0) path &lt;- c(all_1$Pathway,all_2$Pathway) gene_filter &lt;- gene %&gt;% dplyr::filter(Pathway %in% path) %&gt;% dplyr::filter(Measured_members_num &gt;= 10) %&gt;% dplyr::filter(abs(DA_score) &gt; 0.05) %&gt;% dplyr::arrange(`Pathway Category`) %&gt;% dplyr::mutate(Pathway=factor(Pathway,levels = Pathway)) colp &lt;- c(&quot;Amino acid metabolism&quot; =&quot;#1B9E77&quot;, &quot;Carbohydrate metabolism&quot;=&quot;#D95F02&quot;, &quot;Glycan biosynthesis and metabolism&quot;=&quot;#1F78B4&quot;, &quot;Metabolism of cofactors and vitamins&quot;=&quot;#7570B3&quot;, &quot;Metabolism of terpenoids and polyketides&quot;=&quot;#BC80BD&quot;, &quot;Metabolism of other amino acids&quot;=&quot;#8DD3C7&quot;, &quot;Energy metabolism&quot;=&quot;#E7298A&quot;, &quot;Lipid metabolism&quot;=&quot;#66A61E&quot;, &quot;Nucleotide metabolism&quot;=&quot;#E6AB02&quot;, &quot;Biosynthesis of other secondary metabolites&quot;=&quot;#A6761D&quot;, &quot;Xenobiotics biodegradation and metabolism&quot;=&quot;#666666&quot;) p &lt;- ggplot2::ggplot(gene_filter)+ ggplot2::geom_point(ggplot2::aes(x=Pathway,y=DA_score,size=log2(Measured_members_num),color=`Pathway Category`))+ ggplot2::geom_pointrange(ggplot2::aes(x=Pathway,y=DA_score,ymin=0,ymax=DA_score,color=`Pathway Category`))+ scale_color_manual(values=colp)+ ggplot2::coord_flip()+ ggplot2::xlab(NULL)+ ggplot2::theme_bw() ggsave(&quot;result/Figure4/S6J_DAscore_gene_T_filter.pdf&quot;,p,width=8,height = 6) metabolite_filter &lt;- metabolite %&gt;% dplyr::filter(Pathway %in% path) %&gt;% dplyr::filter(Measured_members_num &gt;= 3) %&gt;% dplyr::filter(abs(DA_score) &gt; 0.05) %&gt;% dplyr::arrange(`Pathway Category`) %&gt;% dplyr::mutate(Pathway=factor(Pathway,levels = Pathway)) colp &lt;- c(&quot;Amino acid metabolism&quot; =&quot;#1B9E77&quot;, &quot;Carbohydrate metabolism&quot;=&quot;#D95F02&quot;, &quot;Glycan biosynthesis and metabolism&quot;=&quot;#1F78B4&quot;, &quot;Metabolism of cofactors and vitamins&quot;=&quot;#7570B3&quot;, &quot;Metabolism of terpenoids and polyketides&quot;=&quot;#BC80BD&quot;, &quot;Metabolism of other amino acids&quot;=&quot;#8DD3C7&quot;, &quot;Energy metabolism&quot;=&quot;#E7298A&quot;, &quot;Lipid metabolism&quot;=&quot;#66A61E&quot;, &quot;Nucleotide metabolism&quot;=&quot;#E6AB02&quot;, &quot;Biosynthesis of other secondary metabolites&quot;=&quot;#A6761D&quot;, &quot;Xenobiotics biodegradation and metabolism&quot;=&quot;#666666&quot;) p &lt;- ggplot2::ggplot(metabolite_filter)+ ggplot2::geom_point(ggplot2::aes(x=Pathway,y=DA_score,size=log2(Measured_members_num),color=`Pathway Category`))+ ggplot2::geom_pointrange(ggplot2::aes(x=Pathway,y=DA_score,ymin=0,ymax=DA_score,color=`Pathway Category`))+ scale_color_manual(values=colp)+ ggplot2::coord_flip()+ ggplot2::xlab(NULL)+ ggplot2::theme_bw() ggsave(&quot;result/Figure4/S6J_DAscore_metabolite_T_filter.pdf&quot;,p,width=8,height = 3.5) 19.18 (S6 K-L) MSEA of TC1/2 The GSEA reveals that the TC1 cluster, associated with poorer prognosis, exhibits suppression in OXPHOS and enrichment in histone modifications. #------------------------------------------------------------------------------ # Step 1: Oxidative phosphorylation #------------------------------------------------------------------------------ library(dplyr) library(ggplot2) ## Load data gene_all &lt;- data.table::fread(&quot;result/Figure4/S6J_gene_T.txt&quot;) %&gt;% as.data.frame() a &lt;- readLines(&quot;raw_data/OXIDATIVE.txt&quot;) gmt &lt;- strsplit(a, &quot;\\t&quot;) names(gmt) &lt;- vapply(gmt, function(y) y[1], character(1)) gmt1 &lt;- lapply(gmt, &quot;[&quot;, -c(1:2)) a_temp &lt;- gene_all$logFC names(a_temp) &lt;- gene_all$name ##GSEA Ranks_all &lt;- sort(a_temp,decreasing =TRUE) gseaParam = 1 minSize=5 ticksSize = 0.2 Ranks_all = sort(a_temp,decreasing =TRUE) fgseaRes_all &lt;- fgsea::fgsea(gmt1, sort(a_temp,decreasing =TRUE),minSize = minSize,nPermSimple=20000,gseaParam=1) pval &lt;- fgseaRes_all %&gt;% dplyr::pull(pval) %&gt;% round(3) nes &lt;- fgseaRes_all %&gt;% dplyr::pull(NES) %&gt;% round(3) pathway &lt;- gmt1[[1]] stats &lt;- Ranks_all rnk &lt;- rank(-stats) ord &lt;- order(rnk) statsAdj &lt;- stats[ord] statsAdj &lt;- sign(statsAdj) * (abs(statsAdj)^gseaParam) statsAdj &lt;- statsAdj/max(abs(statsAdj)) pathway &lt;- unname(as.vector(na.omit(match(pathway, names(statsAdj))))) pathway &lt;- sort(pathway) gseaRes &lt;- fgsea::calcGseaStat(statsAdj, selectedStats = pathway, returnAllExtremes = TRUE) bottoms &lt;- gseaRes$bottoms tops &lt;- gseaRes$tops n &lt;- length(statsAdj) xs &lt;- as.vector(rbind(pathway - 1, pathway)) ys &lt;- as.vector(rbind(bottoms, tops)) toPlot &lt;- data.frame(x = c(0, xs, n + 1), y = c(0, ys, 0)) diff &lt;- (max(tops) - min(bottoms))/8 x = y = NULL g1 &lt;- ggplot2::ggplot(toPlot, aes(x = x, y = y)) + ggplot2::geom_point(color = &quot;green&quot;, size = 0.1) + ggplot2::geom_hline(yintercept = 0, colour = &quot;gray&quot;) + geom_line(color = &quot;green&quot;) + ggplot2::geom_line(color = &quot;green&quot;) + theme_bw() + ggplot2::theme(panel.grid.minor = ggplot2::element_blank(), axis.text.x=ggplot2::element_blank(),axis.ticks.x=ggplot2::element_blank()) + ggplot2::labs(x = NULL, y = &quot;enrichment score&quot;,title=)+ ggplot2::scale_x_continuous(expand = c(0, 0),limits = c(0,length(statsAdj)+1))+ ggplot2::theme(plot.margin = unit(c(5,5,0,5), &quot;mm&quot;)) g2 &lt;- ggplot2::ggplot(toPlot, aes(x = x, y = y))+ ggplot2::geom_segment(data = data.frame(x = pathway), mapping = aes(x = x, y = -1, xend = x, yend = 1), size = ticksSize,color=&quot;red&quot;) + ggplot2::scale_x_continuous(expand = c(0, 0),limits = c(0,length(statsAdj)+1))+theme_bw()+ ggplot2::theme(panel.grid = element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank(), axis.text.y=element_blank(),axis.ticks.y=element_blank())+ ggplot2::labs(x=NULL,y=NULL)+ ggplot2::theme(plot.margin = unit(c(0,5,0,5), &quot;mm&quot;)) dat &lt;- data.frame(name=1:length(statsAdj),value=statsAdj) g3 &lt;- ggplot2::ggplot(dat,aes(name,value))+ ggplot2::geom_bar(stat=&quot;identity&quot;,fill=&quot;gray&quot;)+ ggplot2::theme_bw()+ ggplot2::theme(panel.grid = element_blank())+ ggplot2::labs(x=NULL)+ ggplot2::scale_x_continuous(expand = c(0, 0),limits=c(0,length(statsAdj)+1))+ ggplot2::theme(plot.margin = unit(c(0,5,5,5), &quot;mm&quot;)) p1 &lt;- cowplot::plot_grid(plotlist = list(g1,g2,g3),nrow=3, rel_heights = c(1,0.2,0.5),scale=1, align =&quot;v&quot;,labels=paste0(&quot;OXIDATIVE_PHOSPHORYLATION&quot;,&quot; pval=&quot;,pval,&quot;;NES=&quot;,nes),label_size = 8) ggsave(&quot;result/Figure4/S6K_GSEA_T_OXIDATIVE.pdf&quot;,p1,width=5,height = 5) #------------------------------------------------------------------------------ # Step 2: Histone modifications #------------------------------------------------------------------------------ ## Load data gene_all &lt;- data.table::fread(&quot;result/Figure4/S6J_gene_T.txt&quot;) %&gt;% as.data.frame() a &lt;- readLines(&quot;raw_data/histone.txt&quot;) gmt &lt;- strsplit(a, &quot;\\t&quot;) names(gmt) &lt;- vapply(gmt, function(y) y[1], character(1)) gmt1 &lt;- lapply(gmt, &quot;[&quot;, -c(1:2)) a_temp &lt;- gene_all$logFC names(a_temp) &lt;- gene_all$name ##GSEA Ranks_all &lt;- sort(a_temp,decreasing =TRUE) gseaParam = 1 minSize=5 ticksSize = 0.2 Ranks_all = sort(a_temp,decreasing =TRUE) fgseaRes_all &lt;- fgsea::fgsea(gmt1, sort(a_temp,decreasing =TRUE),minSize = minSize,nPermSimple=20000,gseaParam=0.5) pval &lt;- fgseaRes_all %&gt;% dplyr::pull(pval) %&gt;% round(3) nes &lt;- fgseaRes_all %&gt;% dplyr::pull(NES) %&gt;% round(3) pathway &lt;- gmt1[[1]] stats &lt;- Ranks_all rnk &lt;- rank(-stats) ord &lt;- order(rnk) statsAdj &lt;- stats[ord] statsAdj &lt;- sign(statsAdj) * (abs(statsAdj)^gseaParam) statsAdj &lt;- statsAdj/max(abs(statsAdj)) pathway &lt;- unname(as.vector(na.omit(match(pathway, names(statsAdj))))) pathway &lt;- sort(pathway) gseaRes &lt;- fgsea::calcGseaStat(statsAdj, selectedStats = pathway, returnAllExtremes = TRUE) bottoms &lt;- gseaRes$bottoms tops &lt;- gseaRes$tops n &lt;- length(statsAdj) xs &lt;- as.vector(rbind(pathway - 1, pathway)) ys &lt;- as.vector(rbind(bottoms, tops)) toPlot &lt;- data.frame(x = c(0, xs, n + 1), y = c(0, ys, 0)) diff &lt;- (max(tops) - min(bottoms))/8 x = y = NULL g1 &lt;- ggplot2::ggplot(toPlot, aes(x = x, y = y)) + ggplot2::geom_point(color = &quot;green&quot;, size = 0.1) + ggplot2::geom_hline(yintercept = 0, colour = &quot;gray&quot;) + geom_line(color = &quot;green&quot;) + ggplot2::geom_line(color = &quot;green&quot;) + theme_bw() + ggplot2::theme(panel.grid.minor = ggplot2::element_blank(), axis.text.x=ggplot2::element_blank(),axis.ticks.x=ggplot2::element_blank()) + ggplot2::labs(x = NULL, y = &quot;enrichment score&quot;,title=)+ ggplot2::scale_x_continuous(expand = c(0, 0),limits = c(0,length(statsAdj)+1))+ ggplot2::theme(plot.margin = unit(c(5,5,0,5), &quot;mm&quot;)) g2 &lt;- ggplot2::ggplot(toPlot, aes(x = x, y = y))+ ggplot2::geom_segment(data = data.frame(x = pathway), mapping = aes(x = x, y = -1, xend = x, yend = 1), size = ticksSize,color=&quot;red&quot;) + ggplot2::scale_x_continuous(expand = c(0, 0),limits = c(0,length(statsAdj)+1))+theme_bw()+ ggplot2::theme(panel.grid = element_blank(), axis.text.x=element_blank(),axis.ticks.x=element_blank(), axis.text.y=element_blank(),axis.ticks.y=element_blank())+ ggplot2::labs(x=NULL,y=NULL)+ ggplot2::theme(plot.margin = unit(c(0,5,0,5), &quot;mm&quot;)) dat &lt;- data.frame(name=1:length(statsAdj),value=statsAdj) g3 &lt;- ggplot2::ggplot(dat,aes(name,value))+ ggplot2::geom_bar(stat=&quot;identity&quot;,fill=&quot;gray&quot;)+ ggplot2::theme_bw()+ ggplot2::theme(panel.grid = element_blank())+ ggplot2::labs(x=NULL)+ ggplot2::scale_x_continuous(expand = c(0, 0),limits=c(0,length(statsAdj)+1))+ ggplot2::theme(plot.margin = unit(c(0,5,5,5), &quot;mm&quot;)) p1 &lt;- cowplot::plot_grid(plotlist = list(g1,g2,g3),nrow=3, rel_heights = c(1,0.2,0.5),scale=1, align =&quot;v&quot;,labels=paste0(&quot;histone&quot;,&quot; pval=&quot;,pval,&quot;;NES=&quot;,nes),label_size = 8) ggsave(&quot;result/Figure4/S6L_GSEA_T_histone.pdf&quot;,p1,width=4,height = 4) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
